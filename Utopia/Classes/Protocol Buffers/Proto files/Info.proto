package com.lvl6.proto;

option java_outer_classname = "InfoProto";

//------------------------------------------------------------------------------------------

enum UserType {
	GOOD_WARRIOR = 0;
	GOOD_ARCHER = 1;
	GOOD_MAGE = 2;
	BAD_WARRIOR = 3;
	BAD_ARCHER = 4;
	BAD_MAGE = 5;
}

message MinimumUserProto {
	required int32 userId = 1;
	optional string name = 2;
	optional UserType userType = 3;
}

message FullUserProto {
	required int32 userId = 1;
	required string name = 2;
	required int32 level = 3;
	required UserType userType = 4;
	required int32 attack = 5;
	required int32 defense = 6;
	required int32 stamina = 7;
	optional int64 lastStaminaRefillTime = 8;
	required bool isLastStaminaStateFull = 9;
	required int32 energy = 10;
	optional int64 lastEnergyRefillTime = 11;
	required bool isLastEnergyStateFull = 12;
	required int32 skillPoints = 13;
	required int32 healthMax = 14;
	required int32 energyMax = 15;
	required int32 staminaMax = 16;
	required int32 diamonds = 17;
	required int32 coins = 18;
	required int32 marketplaceDiamondsEarnings = 19;
	required int32 marketplaceCoinsEarnings = 20;
	required int32 vaultBalance = 21;
	required int32 experience = 22;
	required int32 tasksCompleted = 23;
	required int32 battlesWon = 24;
	required int32 battlesLost = 25;
	required int32 flees = 45;
	required string referralCode = 27;
	required int32 numReferrals = 28;
	required string udid = 29;
	required LocationProto userLocation = 30;
	required int32 numPostsInMarketplace = 31;
	required int32 numMarketplaceSalesUnredeemed = 32;
	optional int32 weaponEquipped = 33;
	optional int32 armorEquipped = 34;
	optional int32 amuletEquipped = 35;
	required int64 lastLoginTime = 36;
	optional int64 lastLogoutTime = 37;

	//CreateInfoProtoUtils.java doesn't set these (I can't think of a time the client would need this
	//consider making other fields like this
	optional string deviceToken = 38;
	optional int64 lastBattleNotificationTime = 39;
	optional int64 lastTimeAttacked = 40;
	optional int32 numBadges = 42;
	
	optional int64 lastShortLicensePurchaseTime = 43;
	optional int64 lastLongLicensePurchaseTime = 44;
	
}

//------------------------------------------------------------------------------------------

message FullEquipProto {
	required int32 equipId = 1;
	required string name = 2;
	required EquipType equipType = 3;
	required string description = 4;
	required int32 attackBoost = 5;	
	required int32 defenseBoost = 6;
	required int32 minLevel = 7;
	optional int32 coinPrice = 8;
	optional int32 diamondPrice = 9;
	required float chanceOfLoss = 10;
	required ClassType classType = 11;
	required Rarity rarity = 12;
	required bool availInArmory = 13;
	
	enum Rarity {
		COMMON = 0;
		UNCOMMON = 1;
		RARE = 2;
		EPIC = 3;
		LEGENDARY = 4;
	}
	
	enum EquipType {
		WEAPON = 0;
		ARMOR = 1;
		AMULET = 2;
	}
	
	enum ClassType {
		WARRIOR = 0;
		ARCHER = 1;
		MAGE = 2;
		ALL_AMULET = 3;	
	}
}

//------------------------------------------------------------------------------------------

message FullUserStructureProto {
	required int32 userStructId = 1;
	required int32 userId = 2;
	required int32 structId = 3;
	optional int64 lastRetrieved = 4;
	required CoordinateProto coordinates = 5;
	required int32 level = 6;
	required int64 purchaseTime = 7;
	optional int64 lastUpgradeTime = 8;
	required bool isComplete = 9;
	required StructOrientation orientation = 10;
}

//------------------------------------------------------------------------------------------

message FullUserEquipProto {
	required int32 userId = 1;
	required int32 equipId = 2;
	required int32 quantity = 3;
	required bool isStolen = 4;
}

//------------------------------------------------------------------------------------------

message FullStructureProto { 
	required int32 structId = 1;
	required string name = 2;
	required int32 income = 3;
	required int32 minutesToGain = 4;
	required int32 minutesToBuild = 5;
	required int32 minutesToUpgradeBase = 6;
	required int32 coinPrice = 7;
	required int32 diamondPrice = 8;
	required int32 minLevel = 9;
	required int32 xLength = 10;
	required int32 yLength = 11;
	required int32 upgradeCoinCostBase = 12;
	required int32 upgradeDiamondCostBase = 13;
	required int32 instaBuildDiamondCostBase = 14;
	required int32 instaRetrieveDiamondCostBase = 15;
	required int32 instaUpgradeDiamondCostBase = 16;	
}

//------------------------------------------------------------------------------------------

message FullTaskProto {
	required int32 taskId = 1;
	required string name = 2;
	required int32 cityId = 3;
	required int32 numRequiredForCompletion = 4;
	required int32 energyCost = 5;
	required int32 minCoinsGained = 6;
	required int32 maxCoinsGained = 7;
	required float chanceOfEquipLoot = 8;
	repeated int32 potentialLootEquipIds = 9;
	required int32 expGained = 10;
	required int32 assetNumWithinCity = 11;
	
	repeated FullTaskEquipReqProto equipReqs = 12;
	
	message FullTaskEquipReqProto {
		required int32 taskId = 1;
		required int32 equipId = 2;
		required int32 quantity = 3;		
	}
}

//------------------------------------------------------------------------------------------

message FullCityProto {
	required int32 cityId = 1;
	required string name = 2;
	required int32 minLevel = 3;
	required int32 expGainedBaseOnRankup = 4;
	required int32 coinsGainedBaseOnRankup = 5;
	
	repeated int32 taskIds = 6;
}

//------------------------------------------------------------------------------------------

message FullUserCityExpansionDataProto {
	required int32 userId = 1;
	required int32 nearLeftExpansions = 2;
	required int32 farLeftExpansions = 3;
	required int32 farRightExpansions = 4;
	required bool isExpanding = 5;
	optional int64 lastExpandTime = 6;
	optional ExpansionDirection lastExpandDirection = 7;
}

//------------------------------------------------------------------------------------------

message FullUserCityProto {
	required int32 userId = 1;
	required int32 cityId = 2;
	required int32 currentRank = 3;
	required int32 numTasksCurrentlyCompleteInRank = 4;
}

//------------------------------------------------------------------------------------------

message CoordinateProto {
	required int32 x = 1;
	required int32 y = 2;
}

//------------------------------------------------------------------------------------------

message LocationProto {
	required double latitude = 1;
	required double longitude = 2;
}

//------------------------------------------------------------------------------------------

enum BattleResult {
   	ATTACKER_WIN = 0;
 	DEFENDER_WIN = 1;
 	ATTACKER_FLEE = 2;
}

//------------------------------------------------------------------------------------------

message NeutralCityElementProto {
	required int32 cityId = 1;
	required int32 assetId = 2;
	required string name = 9;
	required NeutralCityElemType type = 3;
	required CoordinateProto coords = 4;
	optional int32 xLength = 5;
	optional int32 yLength = 6;
	required string imgId = 7;
	optional StructOrientation orientation = 8;
	
	enum NeutralCityElemType {
		PERSON = 0;
		BUILDING = 1;
		DECORATION = 2;
	}
}

//------------------------------------------------------------------------------------------

enum MarketplacePostType {
	PREMIUM_EQUIP_POST = 0;		//diamond, epics, and legendarys for diamonds
	NORM_EQUIP_POST = 2;		//armory (so non epic and non legendar	y) coin items for coins
}

message FullMarketplacePostProto {
	required int32 marketplacePostId = 1;
	required int32 posterId = 2;
	required MarketplacePostType postType = 3;
	required int64 timeOfPost = 4;
	required FullEquipProto postedEquip = 5;
	optional int32 diamondCost = 6;
	optional int32 coinCost = 7;
}

//------------------------------------------------------------------------------------------

enum MarketplaceJobRequirementType { 
	BUY = 0;
	SELL = 1;
}

//------------------------------------------------------------------------------------------

enum CritStructType {
	AVIARY = 0;
	LUMBERMILL = 1;
	CARPENTER = 2;
	VAULT = 3;
	ARMORY = 4;
	MARKETPLACE = 5;
}

message FullUserCritstructProto {
	required CritStructType type = 1;
	required CoordinateProto coords = 2;
	required StructOrientation orientation = 3;
}

//------------------------------------------------------------------------------------------

enum StructOrientation {
	POSITION_1 = 0;
	POSITION_2 = 1;
}

enum ExpansionDirection {
	NEAR_LEFT = 0;
	FAR_LEFT = 1;
	FAR_RIGHT = 2;
}

//------------------------------------------------------------------------------------------

message MinimumUserTaskProto {
     required int32 userId = 1;
     required int32 taskId = 2;
     required int32 numTimesActed = 3;
}

//------------------------------------------------------------------------------------------

message MinimumUserQuestTaskProto {
     required int32 userId = 1;
     required int32 questId = 2;
     required FullTaskProto task = 3;
     required int32 numTimesActed = 4;
}

//------------------------------------------------------------------------------------------

message FullUserQuestDataLargeProto {
     required int32 userId = 1;
     required int32 questId = 2;
     required bool redeemed = 3;
     repeated MinimumUserQuestTaskProto requiredTasksProgress = 4;
     repeated MinimumUserDefeatTypeJobProto requiredDefeatTypeJobProgress = 5;
     repeated MinimumUserBuildStructJobProto requiredBuildStructJobProgress = 6;
     repeated MinimumUserUpgradeStructJobProto requiredUpgradeStructJobProgress = 7;
     repeated MinimumUserPossessEquipJobProto requiredPossessEquipJobProgress = 8;
}

message MinimumUserDefeatTypeJobProto {
     required int32 userId = 1;
     required int32 questId = 2;
     required DefeatTypeJobProto defeatTypeJobId = 3;
     required int32 numDefeated = 4;
}

message DefeatTypeJobProto {
     required int32 defeatTypeJobId = 1;
     required UserType typeOfEnemy = 2;
     required int32 numEnemiesToDefeat = 3;
     required int32 cityId = 4;
}

message MinimumUserBuildStructJobProto {
     required int32 userId = 1;
     required int32 questId = 2;
     required BuildStructJobProto buildStructJob = 3;
     required int32 numOfStructUserHas = 4;
}

message BuildStructJobProto {
     required int32 buildStructJobId = 1;
     required int32 structId = 2;
     required int32 quantityRequired = 3;
}

message MinimumUserUpgradeStructJobProto {
     required int32 userId = 1;
     required int32 questId = 2;
     required UpgradeStructJobProto upgradeStructJob = 3;
     required bool isComplete = 4;
}

message UpgradeStructJobProto {
     required int32 upgradeStructJobId = 1;
     required int32 structId = 2;
     required int32 levelReq = 3;
}

message MinimumUserPossessEquipJobProto {
     required int32 userId = 1;
     required int32 questId = 2;
     required PossessEquipJobProto possessEquipJobProto = 3;
     required int32 numEquipUserHas = 4;
}

message PossessEquipJobProto {
     required int32 possessEquipJobId = 1;
     required int32 equipId = 2;
     required int32 quantityReq = 3;
}

//------------------------------------------------------------------------------------------

message FullQuestProto {
     required int32 questId = 1;
     required int32 cityId = 2;
     required string name = 3;
     required string description = 4;
     required string doneResponse = 5;
     required string inProgress = 6;
     required int32 assetNumWithinCity = 7;
     optional int32 coinsGained = 8;
     optional int32 diamondsGained = 9;
     optional int32 expGained = 10;
     optional int32 equipIdGained = 11;
     repeated int32 questsRequiredForThis = 12;
     repeated int32 taskReqs = 13;
     repeated int32 upgradeStructJobsReqs = 14;
     repeated int32 buildStructJobsReqs = 15;
     repeated int32 defeatTypeReqs = 16;
     repeated int32 possessEquipJobReqs = 17;
}