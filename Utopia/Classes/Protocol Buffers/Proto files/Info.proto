package com.lvl6.proto;

option java_outer_classname = "InfoProto";


//------------------------------------------------------------------------------------------

enum AnimationType {
	GENERIC_ACTION = 1;
	ATTACK = 2;
}

//------------------------------------------------------------------------------------------

enum EarnFreeDiamondsType {
	KIIP = 1;
	ADCOLONY = 2;
	FB_INVITE = 3;
	TAPJOY = 4;
	FLURRY_VIDEO = 5;
	TWITTER = 6;
}

//------------------------------------------------------------------------------------------

enum SpecialQuestAction {
	PURCHASE_FROM_ARMORY = 1;
	PURCHASE_FROM_MARKETPLACE = 2;
	SELL_TO_ARMORY = 3;
	POST_TO_MARKETPLACE = 4;
	DEPOSIT_IN_VAULT = 5;
	WITHDRAW_FROM_VAULT = 6;
	WRITE_ON_ENEMY_WALL = 7;	
}

//------------------------------------------------------------------------------------------

enum UserType {
	GOOD_WARRIOR = 0;
	GOOD_ARCHER = 1;
	GOOD_MAGE = 2;
	BAD_WARRIOR = 3;
	BAD_ARCHER = 4;
	BAD_MAGE = 5;
}

message MinimumUserProto {
	optional int32 userId = 1;
	optional string name = 2;
	optional UserType userType = 3;
}

message MinimumUserProtoWithLevel {
	optional MinimumUserProto minUserProto = 1;
	optional int32 level = 2;
}

message FullUserProto {
	optional int32 userId = 1;
	optional string name = 2;
	optional int32 level = 3;
	optional UserType userType = 4;
	optional int32 attack = 5;
	optional int32 defense = 6;
	optional int32 stamina = 7;
	optional int64 lastStaminaRefillTime = 8;
	optional int32 energy = 10;
	optional int64 lastEnergyRefillTime = 11;
	optional int32 skillPoints = 13;
	optional int32 healthMax = 14;
	optional int32 energyMax = 15;
	optional int32 staminaMax = 16;
	optional int32 diamonds = 17;
	optional int32 coins = 18;
	optional int32 marketplaceDiamondsEarnings = 19;
	optional int32 marketplaceCoinsEarnings = 20;
	optional int32 vaultBalance = 21;
	optional int32 experience = 22;
	optional int32 tasksCompleted = 23;
	optional int32 battlesWon = 24;
	optional int32 battlesLost = 25;
	optional int32 flees = 45;
	optional string referralCode = 27;
	optional int32 numReferrals = 28;
	optional LocationProto userLocation = 30;
	optional int32 numPostsInMarketplace = 31;
	optional int32 numMarketplaceSalesUnredeemed = 32;
	optional int32 weaponEquipped = 33;
	optional int32 armorEquipped = 34;
	optional int32 amuletEquipped = 35;
	optional int64 lastLoginTime = 36;
	optional int64 lastLogoutTime = 37;
	optional int64 lastShortLicensePurchaseTime = 43;
	optional int64 lastLongLicensePurchaseTime = 44;
	optional bool isFake = 46;
	optional bool isAdmin = 48;
	optional int32 numCoinsRetrievedFromStructs = 50;

	//CreateInfoProtoUtils.java doesn't set these (I can't think of a time the client would need this
	//consider making other fields like this
	optional string udid = 29;
	optional string deviceToken = 38;
	optional int64 lastBattleNotificationTime = 39;
	optional int64 lastTimeAttacked = 40;
	optional int32 numBadges = 42;
	optional int64 createTime = 47;
	optional int32 apsalarId = 49;
	optional int32 numAdColonyVideosWatched = 51;
	optional int32 numTimesKiipRewarded = 52;
}

//------------------------------------------------------------------------------------------

message FullEquipProto {
	optional int32 equipId = 1;
	optional string name = 2;
	optional EquipType equipType = 3;
	optional string description = 4;
	optional int32 attackBoost = 5;	
	optional int32 defenseBoost = 6;
	optional int32 minLevel = 7;
	optional int32 coinPrice = 8;
	optional int32 diamondPrice = 9;
	optional float chanceOfLoss = 10;
	optional ClassType classType = 11;
	optional Rarity rarity = 12;
	optional bool isBuyableInArmory = 13;
	
	enum Rarity {
		COMMON = 0;
		UNCOMMON = 1;
		RARE = 2;
		EPIC = 3;
		LEGENDARY = 4;
	}
	
	enum EquipType {
		WEAPON = 0;
		ARMOR = 1;
		AMULET = 2;
	}
	
	enum ClassType {
		WARRIOR = 0;
		ARCHER = 1;
		MAGE = 2;
		ALL_AMULET = 3;	
	}
}

//------------------------------------------------------------------------------------------

message FullUserStructureProto {
	optional int32 userStructId = 1;
	optional int32 userId = 2;
	optional int32 structId = 3;
	optional int64 lastRetrieved = 4;
	optional CoordinateProto coordinates = 5;
	optional int32 level = 6;
	optional int64 purchaseTime = 7;
	optional int64 lastUpgradeTime = 8;
	optional bool isComplete = 9;
	optional StructOrientation orientation = 10;
}

//------------------------------------------------------------------------------------------

message FullUserEquipProto {
	optional int32 userId = 1;
	optional int32 equipId = 2;
	optional int32 quantity = 3;
}

//------------------------------------------------------------------------------------------

message FullStructureProto { 
	optional int32 structId = 1;
	optional string name = 2;
	optional int32 income = 3;
	optional int32 minutesToGain = 4;
	optional int32 minutesToBuild = 5;
	optional int32 minutesToUpgradeBase = 6;
	optional int32 coinPrice = 7;
	optional int32 diamondPrice = 8;
	optional int32 minLevel = 9;
	optional int32 xLength = 10;
	optional int32 yLength = 11;
	optional int32 instaBuildDiamondCost = 14;
	optional int32 instaRetrieveDiamondCostBase = 15;
	optional int32 instaUpgradeDiamondCostBase = 16;
	optional int32 imgVerticalPixelOffset = 17;	
}

//------------------------------------------------------------------------------------------

message FullTaskProto {
	optional int32 taskId = 1;
	optional string name = 2;
	optional int32 cityId = 3;
	optional int32 numRequiredForCompletion = 4;
	optional int32 energyCost = 5;
	optional int32 minCoinsGained = 6;
	optional int32 maxCoinsGained = 7;
	optional float chanceOfEquipLoot = 8;
	repeated int32 potentialLootEquipIds = 9;
	optional int32 expGained = 10;
	optional int32 assetNumWithinCity = 11;
	optional string processingText = 12;
	optional CoordinateProto spriteLandingCoords = 14;
	optional AnimationType animationType = 15;
	
	repeated FullTaskEquipReqProto equipReqs = 13;
	
	message FullTaskEquipReqProto {
		optional int32 taskId = 1;
		optional int32 equipId = 2;
		optional int32 quantity = 3;		
	}
}

//------------------------------------------------------------------------------------------

message FullCityProto {
	optional int32 cityId = 1;
	optional string name = 2;
	optional int32 minLevel = 3;
	optional int32 expGainedBaseOnRankup = 4;
	optional int32 coinsGainedBaseOnRankup = 5;
	optional string mapImgName = 6;
	optional CoordinateProto center = 7;
	
	repeated int32 taskIds = 10;
}

//------------------------------------------------------------------------------------------

message FullUserCityExpansionDataProto {
	optional int32 userId = 1;
	optional int32 farLeftExpansions = 3;
	optional int32 farRightExpansions = 4;
	optional bool isExpanding = 5;
	optional int64 lastExpandTime = 6;
	optional ExpansionDirection lastExpandDirection = 7;
}

//------------------------------------------------------------------------------------------

message FullUserCityProto {
	optional int32 userId = 1;
	optional int32 cityId = 2;
	optional int32 currentRank = 3;
	optional int32 numTasksCurrentlyCompleteInRank = 4;
}

//------------------------------------------------------------------------------------------

message CoordinateProto {
	optional float x = 1;
	optional float y = 2;
}

//------------------------------------------------------------------------------------------

message LocationProto {
	optional double latitude = 1;
	optional double longitude = 2;
}

//------------------------------------------------------------------------------------------

enum BattleResult {
   	ATTACKER_WIN = 0;
 	DEFENDER_WIN = 1;
 	ATTACKER_FLEE = 2;
}

//------------------------------------------------------------------------------------------

message NeutralCityElementProto {
	optional int32 cityId = 1;
	optional int32 assetId = 2;
	optional string name = 9;
	optional NeutralCityElemType type = 3;
	optional CoordinateProto coords = 4;
	optional int32 xLength = 5;
	optional int32 yLength = 6;
	optional string imgId = 7;
	optional StructOrientation orientation = 8;
	
	enum NeutralCityElemType {
		PERSON_QUEST_GIVER = 0;
		BUILDING = 1;
		DECORATION = 2;
		PERSON_NEUTRAL_ENEMY = 3;
	}
}

//------------------------------------------------------------------------------------------

enum MarketplacePostType {
	PREMIUM_EQUIP_POST = 0;		//diamond, epics, and legendarys for diamonds
	NORM_EQUIP_POST = 2;		//armory (so non epic and non legendar	y) coin items for coins
}

message FullMarketplacePostProto {
	optional int32 marketplacePostId = 1;
	optional MinimumUserProto poster = 2;
	optional MarketplacePostType postType = 3;
	optional int64 timeOfPost = 4;
	optional FullEquipProto postedEquip = 5;
	optional int32 diamondCost = 6;
	optional int32 coinCost = 7;
}

//------------------------------------------------------------------------------------------

enum MarketplaceJobRequirementType { 
	BUY = 0;
	SELL = 1;
}

//------------------------------------------------------------------------------------------

enum CritStructType {
	AVIARY = 0;
	CARPENTER = 2;
	VAULT = 3;
	ARMORY = 4;
	MARKETPLACE = 5;
}

message FullUserCritstructProto {
	optional CritStructType type = 1;
	optional CoordinateProto coords = 2;
	optional StructOrientation orientation = 3;
}

//------------------------------------------------------------------------------------------

enum StructOrientation {
	POSITION_1 = 0;
	POSITION_2 = 1;
}

enum ExpansionDirection {
	FAR_LEFT = 0;
	FAR_RIGHT = 1;
}

//------------------------------------------------------------------------------------------

message MinimumUserTaskProto {
     optional int32 userId = 1;
     optional int32 taskId = 2;
     optional int32 numTimesActed = 3;
}

//------------------------------------------------------------------------------------------

message FullUserQuestDataLargeProto {
     optional int32 userId = 1;
     optional int32 questId = 2;
     optional bool isRedeemed = 3;
     optional bool isComplete = 4;
     repeated MinimumUserDefeatTypeJobProto requiredDefeatTypeJobProgress = 5;
     repeated MinimumUserBuildStructJobProto requiredBuildStructJobProgress = 6;
     repeated MinimumUserUpgradeStructJobProto requiredUpgradeStructJobProgress = 7;
     repeated MinimumUserPossessEquipJobProto requiredPossessEquipJobProgress = 8;
     repeated MinimumUserQuestTaskProto requiredTasksProgress = 9;
     optional int32 coinsRetrievedForReq = 11;
     optional int32 numComponentsComplete = 10;
}

message MinimumUserQuestTaskProto {
     optional int32 userId = 1;
     optional int32 questId = 2;
     optional int32 taskId = 3;
     optional int32 numTimesActed = 4;
}

message MinimumUserDefeatTypeJobProto {
     optional int32 userId = 1;
     optional int32 questId = 2;
     optional int32 defeatTypeJobId = 3;
     optional int32 numDefeated = 4;
}

message DefeatTypeJobProto {
     optional int32 defeatTypeJobId = 1;
     optional DefeatTypeJobEnemyType typeOfEnemy = 2;
     optional int32 numEnemiesToDefeat = 3;
     optional int32 cityId = 4;
     
     enum DefeatTypeJobEnemyType {
     	GOOD_WARRIOR = 0;
		GOOD_ARCHER = 1;
		GOOD_MAGE = 2;
		BAD_WARRIOR = 3;
		BAD_ARCHER = 4;
		BAD_MAGE = 5;
		ALL_TYPES_FROM_OPPOSING_SIDE = 6;
     }
}

message MinimumUserBuildStructJobProto {
     optional int32 userId = 1;
     optional int32 questId = 2;
     optional int32 buildStructJobId = 3;
     optional int32 numOfStructUserHas = 4;
}

message BuildStructJobProto {
     optional int32 buildStructJobId = 1;
     optional int32 structId = 2;
     optional int32 quantityRequired = 3;
}

message MinimumUserUpgradeStructJobProto {
     optional int32 userId = 1;
     optional int32 questId = 2;
     optional int32 upgradeStructJobId = 3;
     optional int32 currentLevel = 4;		//0 if not built
}

message UpgradeStructJobProto {
     optional int32 upgradeStructJobId = 1;
     optional int32 structId = 2;
     optional int32 levelReq = 3;
}

message MinimumUserPossessEquipJobProto {
     optional int32 userId = 1;
     optional int32 questId = 2;
     optional int32 possessEquipJobId = 3;
     optional int32 numEquipUserHas = 4;
}

message PossessEquipJobProto {
     optional int32 possessEquipJobId = 1;
     optional int32 equipId = 2;
     optional int32 quantityReq = 3;
}

//------------------------------------------------------------------------------------------

message FullQuestProto {
     optional int32 questId = 1;
     optional int32 cityId = 2;
     optional string name = 3;
     optional string description = 4;
     optional string doneResponse = 5;
     optional int32 assetNumWithinCity = 7;
     optional int32 coinsGained = 8;
     optional int32 diamondsGained = 9;
     optional int32 expGained = 10;
     optional int32 equipIdGained = 11;
     repeated int32 questsRequiredForThis = 12;
     repeated int32 taskReqs = 13;
     repeated int32 upgradeStructJobsReqs = 14;
     repeated int32 buildStructJobsReqs = 15;
     repeated int32 defeatTypeReqs = 16;
     repeated int32 possessEquipJobReqs = 17;
     optional int32 coinRetrievalReq = 22;
     optional SpecialQuestAction specialQuestActionReq = 6; 
     optional int32 numComponentsForGood = 18;
     optional int32 numComponentsForBad = 19;
     optional DialogueProto acceptDialogue = 20;
     
     optional string questGiverName = 21;
     optional string questGiverImageSuffix = 23;
}

//------------------------------------------------------------------------------------------

message DialogueProto { 
	repeated SpeechSegmentProto speechSegment = 1;

	message SpeechSegmentProto {
		optional DialogueSpeaker speaker = 1;
		optional string speakerText = 2;
		
		enum DialogueSpeaker {
			PLAYER_TYPE = 1;
			GOOD_WARRIOR = 2;
			GOOD_ARCHER = 3;
			GOOD_MAGE = 4;
			BAD_WARRIOR = 5;
			BAD_ARCHER = 6;
			BAD_MAGE = 7;
			GOOD_TUTORIAL_GIRL = 8;
			BAD_TUTORIAL_GIRL = 9;
			QUESTGIVER_1 = 10;
			QUESTGIVER_2 = 11;
			QUESTGIVER_3 = 12;
			QUESTGIVER_4 = 13;	
			BAZAAR = 25;		
		}
	}
}

//------------------------------------------------------------------------------------------

message PlayerWallPostProto {
	optional int32 playerWallPostId = 1;
	optional MinimumUserProto poster = 2;
	optional int32 wallOwnerId = 3;
	optional int64 timeOfPost = 4;
	optional string content = 5;
}