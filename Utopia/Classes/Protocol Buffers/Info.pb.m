// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Info.pb.h"

@implementation InfoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [InfoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL UserTypeIsValidValue(UserType value) {
  switch (value) {
    case UserTypeGoodWarrior:
    case UserTypeGoodArcher:
    case UserTypeGoodMage:
    case UserTypeBadWarrior:
    case UserTypeBadArcher:
    case UserTypeBadMage:
      return YES;
    default:
      return NO;
  }
}
BOOL BattleResultIsValidValue(BattleResult value) {
  switch (value) {
    case BattleResultAttackerWin:
    case BattleResultDefenderWin:
    case BattleResultAttackerFlee:
      return YES;
    default:
      return NO;
  }
}
BOOL MarketplacePostTypeIsValidValue(MarketplacePostType value) {
  switch (value) {
    case MarketplacePostTypePremiumEquipPost:
    case MarketplacePostTypeNormEquipPost:
      return YES;
    default:
      return NO;
  }
}
BOOL MarketplaceJobRequirementTypeIsValidValue(MarketplaceJobRequirementType value) {
  switch (value) {
    case MarketplaceJobRequirementTypeBuy:
    case MarketplaceJobRequirementTypeSell:
      return YES;
    default:
      return NO;
  }
}
BOOL CritStructTypeIsValidValue(CritStructType value) {
  switch (value) {
    case CritStructTypeAviary:
    case CritStructTypeLumbermill:
    case CritStructTypeCarpenter:
    case CritStructTypeVault:
    case CritStructTypeArmory:
    case CritStructTypeMarketplace:
      return YES;
    default:
      return NO;
  }
}
BOOL StructOrientationIsValidValue(StructOrientation value) {
  switch (value) {
    case StructOrientationPosition1:
    case StructOrientationPosition2:
      return YES;
    default:
      return NO;
  }
}
BOOL ExpansionDirectionIsValidValue(ExpansionDirection value) {
  switch (value) {
    case ExpansionDirectionNearLeft:
    case ExpansionDirectionFarLeft:
    case ExpansionDirectionFarRight:
      return YES;
    default:
      return NO;
  }
}
@interface MinimumUserProto ()
@property int32_t userId;
@property (retain) NSString* name;
@property UserType userType;
@end

@implementation MinimumUserProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value {
  hasUserType_ = !!value;
}
@synthesize userType;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.name = @"";
    self.userType = UserTypeGoodWarrior;
  }
  return self;
}
static MinimumUserProto* defaultMinimumUserProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserProto class]) {
    defaultMinimumUserProtoInstance = [[MinimumUserProto alloc] init];
  }
}
+ (MinimumUserProto*) defaultInstance {
  return defaultMinimumUserProtoInstance;
}
- (MinimumUserProto*) defaultInstance {
  return defaultMinimumUserProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasUserType) {
    [output writeEnum:3 value:self.userType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasUserType) {
    size += computeEnumSize(3, self.userType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserProto*) parseFromData:(NSData*) data {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromData:data] build];
}
+ (MinimumUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto_Builder*) builder {
  return [[[MinimumUserProto_Builder alloc] init] autorelease];
}
+ (MinimumUserProto_Builder*) builderWithPrototype:(MinimumUserProto*) prototype {
  return [[MinimumUserProto builder] mergeFrom:prototype];
}
- (MinimumUserProto_Builder*) builder {
  return [MinimumUserProto builder];
}
@end

@interface MinimumUserProto_Builder()
@property (retain) MinimumUserProto* result;
@end

@implementation MinimumUserProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserProto_Builder*) clear {
  self.result = [[[MinimumUserProto alloc] init] autorelease];
  return self;
}
- (MinimumUserProto_Builder*) clone {
  return [MinimumUserProto builderWithPrototype:result];
}
- (MinimumUserProto*) defaultInstance {
  return [MinimumUserProto defaultInstance];
}
- (MinimumUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserProto*) buildPartial {
  MinimumUserProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserProto_Builder*) mergeFrom:(MinimumUserProto*) other {
  if (other == [MinimumUserProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (UserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MinimumUserProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MinimumUserProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (UserType) userType {
  return result.userType;
}
- (MinimumUserProto_Builder*) setUserType:(UserType) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (MinimumUserProto_Builder*) clearUserType {
  result.hasUserType = NO;
  result.userType = UserTypeGoodWarrior;
  return self;
}
@end

@interface FullUserProto ()
@property int32_t userId;
@property (retain) NSString* name;
@property int32_t level;
@property UserType userType;
@property int32_t attack;
@property int32_t defense;
@property int32_t stamina;
@property int64_t lastStaminaRefillTime;
@property int32_t energy;
@property int64_t lastEnergyRefillTime;
@property int32_t skillPoints;
@property int32_t healthMax;
@property int32_t energyMax;
@property int32_t staminaMax;
@property int32_t diamonds;
@property int32_t coins;
@property int32_t marketplaceDiamondsEarnings;
@property int32_t marketplaceCoinsEarnings;
@property int32_t vaultBalance;
@property int32_t experience;
@property int32_t tasksCompleted;
@property int32_t battlesWon;
@property int32_t battlesLost;
@property int32_t flees;
@property (retain) NSString* referralCode;
@property int32_t numReferrals;
@property (retain) NSString* udid;
@property (retain) LocationProto* userLocation;
@property int32_t numPostsInMarketplace;
@property int32_t numMarketplaceSalesUnredeemed;
@property int32_t weaponEquipped;
@property int32_t armorEquipped;
@property int32_t amuletEquipped;
@property int64_t lastLoginTime;
@property int64_t lastLogoutTime;
@property (retain) NSString* deviceToken;
@property int64_t lastBattleNotificationTime;
@property int64_t lastTimeAttacked;
@property int32_t numBadges;
@property int64_t lastShortLicensePurchaseTime;
@property int64_t lastLongLicensePurchaseTime;
@property BOOL isFake;
@end

@implementation FullUserProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value {
  hasUserType_ = !!value;
}
@synthesize userType;
- (BOOL) hasAttack {
  return !!hasAttack_;
}
- (void) setHasAttack:(BOOL) value {
  hasAttack_ = !!value;
}
@synthesize attack;
- (BOOL) hasDefense {
  return !!hasDefense_;
}
- (void) setHasDefense:(BOOL) value {
  hasDefense_ = !!value;
}
@synthesize defense;
- (BOOL) hasStamina {
  return !!hasStamina_;
}
- (void) setHasStamina:(BOOL) value {
  hasStamina_ = !!value;
}
@synthesize stamina;
- (BOOL) hasLastStaminaRefillTime {
  return !!hasLastStaminaRefillTime_;
}
- (void) setHasLastStaminaRefillTime:(BOOL) value {
  hasLastStaminaRefillTime_ = !!value;
}
@synthesize lastStaminaRefillTime;
- (BOOL) hasEnergy {
  return !!hasEnergy_;
}
- (void) setHasEnergy:(BOOL) value {
  hasEnergy_ = !!value;
}
@synthesize energy;
- (BOOL) hasLastEnergyRefillTime {
  return !!hasLastEnergyRefillTime_;
}
- (void) setHasLastEnergyRefillTime:(BOOL) value {
  hasLastEnergyRefillTime_ = !!value;
}
@synthesize lastEnergyRefillTime;
- (BOOL) hasSkillPoints {
  return !!hasSkillPoints_;
}
- (void) setHasSkillPoints:(BOOL) value {
  hasSkillPoints_ = !!value;
}
@synthesize skillPoints;
- (BOOL) hasHealthMax {
  return !!hasHealthMax_;
}
- (void) setHasHealthMax:(BOOL) value {
  hasHealthMax_ = !!value;
}
@synthesize healthMax;
- (BOOL) hasEnergyMax {
  return !!hasEnergyMax_;
}
- (void) setHasEnergyMax:(BOOL) value {
  hasEnergyMax_ = !!value;
}
@synthesize energyMax;
- (BOOL) hasStaminaMax {
  return !!hasStaminaMax_;
}
- (void) setHasStaminaMax:(BOOL) value {
  hasStaminaMax_ = !!value;
}
@synthesize staminaMax;
- (BOOL) hasDiamonds {
  return !!hasDiamonds_;
}
- (void) setHasDiamonds:(BOOL) value {
  hasDiamonds_ = !!value;
}
@synthesize diamonds;
- (BOOL) hasCoins {
  return !!hasCoins_;
}
- (void) setHasCoins:(BOOL) value {
  hasCoins_ = !!value;
}
@synthesize coins;
- (BOOL) hasMarketplaceDiamondsEarnings {
  return !!hasMarketplaceDiamondsEarnings_;
}
- (void) setHasMarketplaceDiamondsEarnings:(BOOL) value {
  hasMarketplaceDiamondsEarnings_ = !!value;
}
@synthesize marketplaceDiamondsEarnings;
- (BOOL) hasMarketplaceCoinsEarnings {
  return !!hasMarketplaceCoinsEarnings_;
}
- (void) setHasMarketplaceCoinsEarnings:(BOOL) value {
  hasMarketplaceCoinsEarnings_ = !!value;
}
@synthesize marketplaceCoinsEarnings;
- (BOOL) hasVaultBalance {
  return !!hasVaultBalance_;
}
- (void) setHasVaultBalance:(BOOL) value {
  hasVaultBalance_ = !!value;
}
@synthesize vaultBalance;
- (BOOL) hasExperience {
  return !!hasExperience_;
}
- (void) setHasExperience:(BOOL) value {
  hasExperience_ = !!value;
}
@synthesize experience;
- (BOOL) hasTasksCompleted {
  return !!hasTasksCompleted_;
}
- (void) setHasTasksCompleted:(BOOL) value {
  hasTasksCompleted_ = !!value;
}
@synthesize tasksCompleted;
- (BOOL) hasBattlesWon {
  return !!hasBattlesWon_;
}
- (void) setHasBattlesWon:(BOOL) value {
  hasBattlesWon_ = !!value;
}
@synthesize battlesWon;
- (BOOL) hasBattlesLost {
  return !!hasBattlesLost_;
}
- (void) setHasBattlesLost:(BOOL) value {
  hasBattlesLost_ = !!value;
}
@synthesize battlesLost;
- (BOOL) hasFlees {
  return !!hasFlees_;
}
- (void) setHasFlees:(BOOL) value {
  hasFlees_ = !!value;
}
@synthesize flees;
- (BOOL) hasReferralCode {
  return !!hasReferralCode_;
}
- (void) setHasReferralCode:(BOOL) value {
  hasReferralCode_ = !!value;
}
@synthesize referralCode;
- (BOOL) hasNumReferrals {
  return !!hasNumReferrals_;
}
- (void) setHasNumReferrals:(BOOL) value {
  hasNumReferrals_ = !!value;
}
@synthesize numReferrals;
- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value {
  hasUdid_ = !!value;
}
@synthesize udid;
- (BOOL) hasUserLocation {
  return !!hasUserLocation_;
}
- (void) setHasUserLocation:(BOOL) value {
  hasUserLocation_ = !!value;
}
@synthesize userLocation;
- (BOOL) hasNumPostsInMarketplace {
  return !!hasNumPostsInMarketplace_;
}
- (void) setHasNumPostsInMarketplace:(BOOL) value {
  hasNumPostsInMarketplace_ = !!value;
}
@synthesize numPostsInMarketplace;
- (BOOL) hasNumMarketplaceSalesUnredeemed {
  return !!hasNumMarketplaceSalesUnredeemed_;
}
- (void) setHasNumMarketplaceSalesUnredeemed:(BOOL) value {
  hasNumMarketplaceSalesUnredeemed_ = !!value;
}
@synthesize numMarketplaceSalesUnredeemed;
- (BOOL) hasWeaponEquipped {
  return !!hasWeaponEquipped_;
}
- (void) setHasWeaponEquipped:(BOOL) value {
  hasWeaponEquipped_ = !!value;
}
@synthesize weaponEquipped;
- (BOOL) hasArmorEquipped {
  return !!hasArmorEquipped_;
}
- (void) setHasArmorEquipped:(BOOL) value {
  hasArmorEquipped_ = !!value;
}
@synthesize armorEquipped;
- (BOOL) hasAmuletEquipped {
  return !!hasAmuletEquipped_;
}
- (void) setHasAmuletEquipped:(BOOL) value {
  hasAmuletEquipped_ = !!value;
}
@synthesize amuletEquipped;
- (BOOL) hasLastLoginTime {
  return !!hasLastLoginTime_;
}
- (void) setHasLastLoginTime:(BOOL) value {
  hasLastLoginTime_ = !!value;
}
@synthesize lastLoginTime;
- (BOOL) hasLastLogoutTime {
  return !!hasLastLogoutTime_;
}
- (void) setHasLastLogoutTime:(BOOL) value {
  hasLastLogoutTime_ = !!value;
}
@synthesize lastLogoutTime;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) value {
  hasDeviceToken_ = !!value;
}
@synthesize deviceToken;
- (BOOL) hasLastBattleNotificationTime {
  return !!hasLastBattleNotificationTime_;
}
- (void) setHasLastBattleNotificationTime:(BOOL) value {
  hasLastBattleNotificationTime_ = !!value;
}
@synthesize lastBattleNotificationTime;
- (BOOL) hasLastTimeAttacked {
  return !!hasLastTimeAttacked_;
}
- (void) setHasLastTimeAttacked:(BOOL) value {
  hasLastTimeAttacked_ = !!value;
}
@synthesize lastTimeAttacked;
- (BOOL) hasNumBadges {
  return !!hasNumBadges_;
}
- (void) setHasNumBadges:(BOOL) value {
  hasNumBadges_ = !!value;
}
@synthesize numBadges;
- (BOOL) hasLastShortLicensePurchaseTime {
  return !!hasLastShortLicensePurchaseTime_;
}
- (void) setHasLastShortLicensePurchaseTime:(BOOL) value {
  hasLastShortLicensePurchaseTime_ = !!value;
}
@synthesize lastShortLicensePurchaseTime;
- (BOOL) hasLastLongLicensePurchaseTime {
  return !!hasLastLongLicensePurchaseTime_;
}
- (void) setHasLastLongLicensePurchaseTime:(BOOL) value {
  hasLastLongLicensePurchaseTime_ = !!value;
}
@synthesize lastLongLicensePurchaseTime;
- (BOOL) hasIsFake {
  return !!hasIsFake_;
}
- (void) setHasIsFake:(BOOL) value {
  hasIsFake_ = !!value;
}
- (BOOL) isFake {
  return !!isFake_;
}
- (void) setIsFake:(BOOL) value {
  isFake_ = !!value;
}
- (void) dealloc {
  self.name = nil;
  self.referralCode = nil;
  self.udid = nil;
  self.userLocation = nil;
  self.deviceToken = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.name = @"";
    self.level = 0;
    self.userType = UserTypeGoodWarrior;
    self.attack = 0;
    self.defense = 0;
    self.stamina = 0;
    self.lastStaminaRefillTime = 0L;
    self.energy = 0;
    self.lastEnergyRefillTime = 0L;
    self.skillPoints = 0;
    self.healthMax = 0;
    self.energyMax = 0;
    self.staminaMax = 0;
    self.diamonds = 0;
    self.coins = 0;
    self.marketplaceDiamondsEarnings = 0;
    self.marketplaceCoinsEarnings = 0;
    self.vaultBalance = 0;
    self.experience = 0;
    self.tasksCompleted = 0;
    self.battlesWon = 0;
    self.battlesLost = 0;
    self.flees = 0;
    self.referralCode = @"";
    self.numReferrals = 0;
    self.udid = @"";
    self.userLocation = [LocationProto defaultInstance];
    self.numPostsInMarketplace = 0;
    self.numMarketplaceSalesUnredeemed = 0;
    self.weaponEquipped = 0;
    self.armorEquipped = 0;
    self.amuletEquipped = 0;
    self.lastLoginTime = 0L;
    self.lastLogoutTime = 0L;
    self.deviceToken = @"";
    self.lastBattleNotificationTime = 0L;
    self.lastTimeAttacked = 0L;
    self.numBadges = 0;
    self.lastShortLicensePurchaseTime = 0L;
    self.lastLongLicensePurchaseTime = 0L;
    self.isFake = NO;
  }
  return self;
}
static FullUserProto* defaultFullUserProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserProto class]) {
    defaultFullUserProtoInstance = [[FullUserProto alloc] init];
  }
}
+ (FullUserProto*) defaultInstance {
  return defaultFullUserProtoInstance;
}
- (FullUserProto*) defaultInstance {
  return defaultFullUserProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasLevel) {
    return NO;
  }
  if (!self.hasUserType) {
    return NO;
  }
  if (!self.hasAttack) {
    return NO;
  }
  if (!self.hasDefense) {
    return NO;
  }
  if (!self.hasStamina) {
    return NO;
  }
  if (!self.hasEnergy) {
    return NO;
  }
  if (!self.hasSkillPoints) {
    return NO;
  }
  if (!self.hasHealthMax) {
    return NO;
  }
  if (!self.hasEnergyMax) {
    return NO;
  }
  if (!self.hasStaminaMax) {
    return NO;
  }
  if (!self.hasDiamonds) {
    return NO;
  }
  if (!self.hasCoins) {
    return NO;
  }
  if (!self.hasMarketplaceDiamondsEarnings) {
    return NO;
  }
  if (!self.hasMarketplaceCoinsEarnings) {
    return NO;
  }
  if (!self.hasVaultBalance) {
    return NO;
  }
  if (!self.hasExperience) {
    return NO;
  }
  if (!self.hasTasksCompleted) {
    return NO;
  }
  if (!self.hasBattlesWon) {
    return NO;
  }
  if (!self.hasBattlesLost) {
    return NO;
  }
  if (!self.hasFlees) {
    return NO;
  }
  if (!self.hasReferralCode) {
    return NO;
  }
  if (!self.hasNumReferrals) {
    return NO;
  }
  if (!self.hasUdid) {
    return NO;
  }
  if (!self.hasUserLocation) {
    return NO;
  }
  if (!self.hasNumPostsInMarketplace) {
    return NO;
  }
  if (!self.hasNumMarketplaceSalesUnredeemed) {
    return NO;
  }
  if (!self.hasLastLoginTime) {
    return NO;
  }
  if (!self.hasIsFake) {
    return NO;
  }
  if (!self.userLocation.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasLevel) {
    [output writeInt32:3 value:self.level];
  }
  if (self.hasUserType) {
    [output writeEnum:4 value:self.userType];
  }
  if (self.hasAttack) {
    [output writeInt32:5 value:self.attack];
  }
  if (self.hasDefense) {
    [output writeInt32:6 value:self.defense];
  }
  if (self.hasStamina) {
    [output writeInt32:7 value:self.stamina];
  }
  if (self.hasLastStaminaRefillTime) {
    [output writeInt64:8 value:self.lastStaminaRefillTime];
  }
  if (self.hasEnergy) {
    [output writeInt32:10 value:self.energy];
  }
  if (self.hasLastEnergyRefillTime) {
    [output writeInt64:11 value:self.lastEnergyRefillTime];
  }
  if (self.hasSkillPoints) {
    [output writeInt32:13 value:self.skillPoints];
  }
  if (self.hasHealthMax) {
    [output writeInt32:14 value:self.healthMax];
  }
  if (self.hasEnergyMax) {
    [output writeInt32:15 value:self.energyMax];
  }
  if (self.hasStaminaMax) {
    [output writeInt32:16 value:self.staminaMax];
  }
  if (self.hasDiamonds) {
    [output writeInt32:17 value:self.diamonds];
  }
  if (self.hasCoins) {
    [output writeInt32:18 value:self.coins];
  }
  if (self.hasMarketplaceDiamondsEarnings) {
    [output writeInt32:19 value:self.marketplaceDiamondsEarnings];
  }
  if (self.hasMarketplaceCoinsEarnings) {
    [output writeInt32:20 value:self.marketplaceCoinsEarnings];
  }
  if (self.hasVaultBalance) {
    [output writeInt32:21 value:self.vaultBalance];
  }
  if (self.hasExperience) {
    [output writeInt32:22 value:self.experience];
  }
  if (self.hasTasksCompleted) {
    [output writeInt32:23 value:self.tasksCompleted];
  }
  if (self.hasBattlesWon) {
    [output writeInt32:24 value:self.battlesWon];
  }
  if (self.hasBattlesLost) {
    [output writeInt32:25 value:self.battlesLost];
  }
  if (self.hasReferralCode) {
    [output writeString:27 value:self.referralCode];
  }
  if (self.hasNumReferrals) {
    [output writeInt32:28 value:self.numReferrals];
  }
  if (self.hasUdid) {
    [output writeString:29 value:self.udid];
  }
  if (self.hasUserLocation) {
    [output writeMessage:30 value:self.userLocation];
  }
  if (self.hasNumPostsInMarketplace) {
    [output writeInt32:31 value:self.numPostsInMarketplace];
  }
  if (self.hasNumMarketplaceSalesUnredeemed) {
    [output writeInt32:32 value:self.numMarketplaceSalesUnredeemed];
  }
  if (self.hasWeaponEquipped) {
    [output writeInt32:33 value:self.weaponEquipped];
  }
  if (self.hasArmorEquipped) {
    [output writeInt32:34 value:self.armorEquipped];
  }
  if (self.hasAmuletEquipped) {
    [output writeInt32:35 value:self.amuletEquipped];
  }
  if (self.hasLastLoginTime) {
    [output writeInt64:36 value:self.lastLoginTime];
  }
  if (self.hasLastLogoutTime) {
    [output writeInt64:37 value:self.lastLogoutTime];
  }
  if (self.hasDeviceToken) {
    [output writeString:38 value:self.deviceToken];
  }
  if (self.hasLastBattleNotificationTime) {
    [output writeInt64:39 value:self.lastBattleNotificationTime];
  }
  if (self.hasLastTimeAttacked) {
    [output writeInt64:40 value:self.lastTimeAttacked];
  }
  if (self.hasNumBadges) {
    [output writeInt32:42 value:self.numBadges];
  }
  if (self.hasLastShortLicensePurchaseTime) {
    [output writeInt64:43 value:self.lastShortLicensePurchaseTime];
  }
  if (self.hasLastLongLicensePurchaseTime) {
    [output writeInt64:44 value:self.lastLongLicensePurchaseTime];
  }
  if (self.hasFlees) {
    [output writeInt32:45 value:self.flees];
  }
  if (self.hasIsFake) {
    [output writeBool:46 value:self.isFake];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasLevel) {
    size += computeInt32Size(3, self.level);
  }
  if (self.hasUserType) {
    size += computeEnumSize(4, self.userType);
  }
  if (self.hasAttack) {
    size += computeInt32Size(5, self.attack);
  }
  if (self.hasDefense) {
    size += computeInt32Size(6, self.defense);
  }
  if (self.hasStamina) {
    size += computeInt32Size(7, self.stamina);
  }
  if (self.hasLastStaminaRefillTime) {
    size += computeInt64Size(8, self.lastStaminaRefillTime);
  }
  if (self.hasEnergy) {
    size += computeInt32Size(10, self.energy);
  }
  if (self.hasLastEnergyRefillTime) {
    size += computeInt64Size(11, self.lastEnergyRefillTime);
  }
  if (self.hasSkillPoints) {
    size += computeInt32Size(13, self.skillPoints);
  }
  if (self.hasHealthMax) {
    size += computeInt32Size(14, self.healthMax);
  }
  if (self.hasEnergyMax) {
    size += computeInt32Size(15, self.energyMax);
  }
  if (self.hasStaminaMax) {
    size += computeInt32Size(16, self.staminaMax);
  }
  if (self.hasDiamonds) {
    size += computeInt32Size(17, self.diamonds);
  }
  if (self.hasCoins) {
    size += computeInt32Size(18, self.coins);
  }
  if (self.hasMarketplaceDiamondsEarnings) {
    size += computeInt32Size(19, self.marketplaceDiamondsEarnings);
  }
  if (self.hasMarketplaceCoinsEarnings) {
    size += computeInt32Size(20, self.marketplaceCoinsEarnings);
  }
  if (self.hasVaultBalance) {
    size += computeInt32Size(21, self.vaultBalance);
  }
  if (self.hasExperience) {
    size += computeInt32Size(22, self.experience);
  }
  if (self.hasTasksCompleted) {
    size += computeInt32Size(23, self.tasksCompleted);
  }
  if (self.hasBattlesWon) {
    size += computeInt32Size(24, self.battlesWon);
  }
  if (self.hasBattlesLost) {
    size += computeInt32Size(25, self.battlesLost);
  }
  if (self.hasReferralCode) {
    size += computeStringSize(27, self.referralCode);
  }
  if (self.hasNumReferrals) {
    size += computeInt32Size(28, self.numReferrals);
  }
  if (self.hasUdid) {
    size += computeStringSize(29, self.udid);
  }
  if (self.hasUserLocation) {
    size += computeMessageSize(30, self.userLocation);
  }
  if (self.hasNumPostsInMarketplace) {
    size += computeInt32Size(31, self.numPostsInMarketplace);
  }
  if (self.hasNumMarketplaceSalesUnredeemed) {
    size += computeInt32Size(32, self.numMarketplaceSalesUnredeemed);
  }
  if (self.hasWeaponEquipped) {
    size += computeInt32Size(33, self.weaponEquipped);
  }
  if (self.hasArmorEquipped) {
    size += computeInt32Size(34, self.armorEquipped);
  }
  if (self.hasAmuletEquipped) {
    size += computeInt32Size(35, self.amuletEquipped);
  }
  if (self.hasLastLoginTime) {
    size += computeInt64Size(36, self.lastLoginTime);
  }
  if (self.hasLastLogoutTime) {
    size += computeInt64Size(37, self.lastLogoutTime);
  }
  if (self.hasDeviceToken) {
    size += computeStringSize(38, self.deviceToken);
  }
  if (self.hasLastBattleNotificationTime) {
    size += computeInt64Size(39, self.lastBattleNotificationTime);
  }
  if (self.hasLastTimeAttacked) {
    size += computeInt64Size(40, self.lastTimeAttacked);
  }
  if (self.hasNumBadges) {
    size += computeInt32Size(42, self.numBadges);
  }
  if (self.hasLastShortLicensePurchaseTime) {
    size += computeInt64Size(43, self.lastShortLicensePurchaseTime);
  }
  if (self.hasLastLongLicensePurchaseTime) {
    size += computeInt64Size(44, self.lastLongLicensePurchaseTime);
  }
  if (self.hasFlees) {
    size += computeInt32Size(45, self.flees);
  }
  if (self.hasIsFake) {
    size += computeBoolSize(46, self.isFake);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserProto*) parseFromData:(NSData*) data {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromData:data] build];
}
+ (FullUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromInputStream:input] build];
}
+ (FullUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto_Builder*) builder {
  return [[[FullUserProto_Builder alloc] init] autorelease];
}
+ (FullUserProto_Builder*) builderWithPrototype:(FullUserProto*) prototype {
  return [[FullUserProto builder] mergeFrom:prototype];
}
- (FullUserProto_Builder*) builder {
  return [FullUserProto builder];
}
@end

@interface FullUserProto_Builder()
@property (retain) FullUserProto* result;
@end

@implementation FullUserProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserProto_Builder*) clear {
  self.result = [[[FullUserProto alloc] init] autorelease];
  return self;
}
- (FullUserProto_Builder*) clone {
  return [FullUserProto builderWithPrototype:result];
}
- (FullUserProto*) defaultInstance {
  return [FullUserProto defaultInstance];
}
- (FullUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserProto*) buildPartial {
  FullUserProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserProto_Builder*) mergeFrom:(FullUserProto*) other {
  if (other == [FullUserProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasAttack) {
    [self setAttack:other.attack];
  }
  if (other.hasDefense) {
    [self setDefense:other.defense];
  }
  if (other.hasStamina) {
    [self setStamina:other.stamina];
  }
  if (other.hasLastStaminaRefillTime) {
    [self setLastStaminaRefillTime:other.lastStaminaRefillTime];
  }
  if (other.hasEnergy) {
    [self setEnergy:other.energy];
  }
  if (other.hasLastEnergyRefillTime) {
    [self setLastEnergyRefillTime:other.lastEnergyRefillTime];
  }
  if (other.hasSkillPoints) {
    [self setSkillPoints:other.skillPoints];
  }
  if (other.hasHealthMax) {
    [self setHealthMax:other.healthMax];
  }
  if (other.hasEnergyMax) {
    [self setEnergyMax:other.energyMax];
  }
  if (other.hasStaminaMax) {
    [self setStaminaMax:other.staminaMax];
  }
  if (other.hasDiamonds) {
    [self setDiamonds:other.diamonds];
  }
  if (other.hasCoins) {
    [self setCoins:other.coins];
  }
  if (other.hasMarketplaceDiamondsEarnings) {
    [self setMarketplaceDiamondsEarnings:other.marketplaceDiamondsEarnings];
  }
  if (other.hasMarketplaceCoinsEarnings) {
    [self setMarketplaceCoinsEarnings:other.marketplaceCoinsEarnings];
  }
  if (other.hasVaultBalance) {
    [self setVaultBalance:other.vaultBalance];
  }
  if (other.hasExperience) {
    [self setExperience:other.experience];
  }
  if (other.hasTasksCompleted) {
    [self setTasksCompleted:other.tasksCompleted];
  }
  if (other.hasBattlesWon) {
    [self setBattlesWon:other.battlesWon];
  }
  if (other.hasBattlesLost) {
    [self setBattlesLost:other.battlesLost];
  }
  if (other.hasFlees) {
    [self setFlees:other.flees];
  }
  if (other.hasReferralCode) {
    [self setReferralCode:other.referralCode];
  }
  if (other.hasNumReferrals) {
    [self setNumReferrals:other.numReferrals];
  }
  if (other.hasUdid) {
    [self setUdid:other.udid];
  }
  if (other.hasUserLocation) {
    [self mergeUserLocation:other.userLocation];
  }
  if (other.hasNumPostsInMarketplace) {
    [self setNumPostsInMarketplace:other.numPostsInMarketplace];
  }
  if (other.hasNumMarketplaceSalesUnredeemed) {
    [self setNumMarketplaceSalesUnredeemed:other.numMarketplaceSalesUnredeemed];
  }
  if (other.hasWeaponEquipped) {
    [self setWeaponEquipped:other.weaponEquipped];
  }
  if (other.hasArmorEquipped) {
    [self setArmorEquipped:other.armorEquipped];
  }
  if (other.hasAmuletEquipped) {
    [self setAmuletEquipped:other.amuletEquipped];
  }
  if (other.hasLastLoginTime) {
    [self setLastLoginTime:other.lastLoginTime];
  }
  if (other.hasLastLogoutTime) {
    [self setLastLogoutTime:other.lastLogoutTime];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  if (other.hasLastBattleNotificationTime) {
    [self setLastBattleNotificationTime:other.lastBattleNotificationTime];
  }
  if (other.hasLastTimeAttacked) {
    [self setLastTimeAttacked:other.lastTimeAttacked];
  }
  if (other.hasNumBadges) {
    [self setNumBadges:other.numBadges];
  }
  if (other.hasLastShortLicensePurchaseTime) {
    [self setLastShortLicensePurchaseTime:other.lastShortLicensePurchaseTime];
  }
  if (other.hasLastLongLicensePurchaseTime) {
    [self setLastLongLicensePurchaseTime:other.lastLongLicensePurchaseTime];
  }
  if (other.hasIsFake) {
    [self setIsFake:other.isFake];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (UserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setAttack:[input readInt32]];
        break;
      }
      case 48: {
        [self setDefense:[input readInt32]];
        break;
      }
      case 56: {
        [self setStamina:[input readInt32]];
        break;
      }
      case 64: {
        [self setLastStaminaRefillTime:[input readInt64]];
        break;
      }
      case 80: {
        [self setEnergy:[input readInt32]];
        break;
      }
      case 88: {
        [self setLastEnergyRefillTime:[input readInt64]];
        break;
      }
      case 104: {
        [self setSkillPoints:[input readInt32]];
        break;
      }
      case 112: {
        [self setHealthMax:[input readInt32]];
        break;
      }
      case 120: {
        [self setEnergyMax:[input readInt32]];
        break;
      }
      case 128: {
        [self setStaminaMax:[input readInt32]];
        break;
      }
      case 136: {
        [self setDiamonds:[input readInt32]];
        break;
      }
      case 144: {
        [self setCoins:[input readInt32]];
        break;
      }
      case 152: {
        [self setMarketplaceDiamondsEarnings:[input readInt32]];
        break;
      }
      case 160: {
        [self setMarketplaceCoinsEarnings:[input readInt32]];
        break;
      }
      case 168: {
        [self setVaultBalance:[input readInt32]];
        break;
      }
      case 176: {
        [self setExperience:[input readInt32]];
        break;
      }
      case 184: {
        [self setTasksCompleted:[input readInt32]];
        break;
      }
      case 192: {
        [self setBattlesWon:[input readInt32]];
        break;
      }
      case 200: {
        [self setBattlesLost:[input readInt32]];
        break;
      }
      case 218: {
        [self setReferralCode:[input readString]];
        break;
      }
      case 224: {
        [self setNumReferrals:[input readInt32]];
        break;
      }
      case 234: {
        [self setUdid:[input readString]];
        break;
      }
      case 242: {
        LocationProto_Builder* subBuilder = [LocationProto builder];
        if (self.hasUserLocation) {
          [subBuilder mergeFrom:self.userLocation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserLocation:[subBuilder buildPartial]];
        break;
      }
      case 248: {
        [self setNumPostsInMarketplace:[input readInt32]];
        break;
      }
      case 256: {
        [self setNumMarketplaceSalesUnredeemed:[input readInt32]];
        break;
      }
      case 264: {
        [self setWeaponEquipped:[input readInt32]];
        break;
      }
      case 272: {
        [self setArmorEquipped:[input readInt32]];
        break;
      }
      case 280: {
        [self setAmuletEquipped:[input readInt32]];
        break;
      }
      case 288: {
        [self setLastLoginTime:[input readInt64]];
        break;
      }
      case 296: {
        [self setLastLogoutTime:[input readInt64]];
        break;
      }
      case 306: {
        [self setDeviceToken:[input readString]];
        break;
      }
      case 312: {
        [self setLastBattleNotificationTime:[input readInt64]];
        break;
      }
      case 320: {
        [self setLastTimeAttacked:[input readInt64]];
        break;
      }
      case 336: {
        [self setNumBadges:[input readInt32]];
        break;
      }
      case 344: {
        [self setLastShortLicensePurchaseTime:[input readInt64]];
        break;
      }
      case 352: {
        [self setLastLongLicensePurchaseTime:[input readInt64]];
        break;
      }
      case 360: {
        [self setFlees:[input readInt32]];
        break;
      }
      case 368: {
        [self setIsFake:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullUserProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullUserProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (FullUserProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (FullUserProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (UserType) userType {
  return result.userType;
}
- (FullUserProto_Builder*) setUserType:(UserType) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (FullUserProto_Builder*) clearUserType {
  result.hasUserType = NO;
  result.userType = UserTypeGoodWarrior;
  return self;
}
- (BOOL) hasAttack {
  return result.hasAttack;
}
- (int32_t) attack {
  return result.attack;
}
- (FullUserProto_Builder*) setAttack:(int32_t) value {
  result.hasAttack = YES;
  result.attack = value;
  return self;
}
- (FullUserProto_Builder*) clearAttack {
  result.hasAttack = NO;
  result.attack = 0;
  return self;
}
- (BOOL) hasDefense {
  return result.hasDefense;
}
- (int32_t) defense {
  return result.defense;
}
- (FullUserProto_Builder*) setDefense:(int32_t) value {
  result.hasDefense = YES;
  result.defense = value;
  return self;
}
- (FullUserProto_Builder*) clearDefense {
  result.hasDefense = NO;
  result.defense = 0;
  return self;
}
- (BOOL) hasStamina {
  return result.hasStamina;
}
- (int32_t) stamina {
  return result.stamina;
}
- (FullUserProto_Builder*) setStamina:(int32_t) value {
  result.hasStamina = YES;
  result.stamina = value;
  return self;
}
- (FullUserProto_Builder*) clearStamina {
  result.hasStamina = NO;
  result.stamina = 0;
  return self;
}
- (BOOL) hasLastStaminaRefillTime {
  return result.hasLastStaminaRefillTime;
}
- (int64_t) lastStaminaRefillTime {
  return result.lastStaminaRefillTime;
}
- (FullUserProto_Builder*) setLastStaminaRefillTime:(int64_t) value {
  result.hasLastStaminaRefillTime = YES;
  result.lastStaminaRefillTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastStaminaRefillTime {
  result.hasLastStaminaRefillTime = NO;
  result.lastStaminaRefillTime = 0L;
  return self;
}
- (BOOL) hasEnergy {
  return result.hasEnergy;
}
- (int32_t) energy {
  return result.energy;
}
- (FullUserProto_Builder*) setEnergy:(int32_t) value {
  result.hasEnergy = YES;
  result.energy = value;
  return self;
}
- (FullUserProto_Builder*) clearEnergy {
  result.hasEnergy = NO;
  result.energy = 0;
  return self;
}
- (BOOL) hasLastEnergyRefillTime {
  return result.hasLastEnergyRefillTime;
}
- (int64_t) lastEnergyRefillTime {
  return result.lastEnergyRefillTime;
}
- (FullUserProto_Builder*) setLastEnergyRefillTime:(int64_t) value {
  result.hasLastEnergyRefillTime = YES;
  result.lastEnergyRefillTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastEnergyRefillTime {
  result.hasLastEnergyRefillTime = NO;
  result.lastEnergyRefillTime = 0L;
  return self;
}
- (BOOL) hasSkillPoints {
  return result.hasSkillPoints;
}
- (int32_t) skillPoints {
  return result.skillPoints;
}
- (FullUserProto_Builder*) setSkillPoints:(int32_t) value {
  result.hasSkillPoints = YES;
  result.skillPoints = value;
  return self;
}
- (FullUserProto_Builder*) clearSkillPoints {
  result.hasSkillPoints = NO;
  result.skillPoints = 0;
  return self;
}
- (BOOL) hasHealthMax {
  return result.hasHealthMax;
}
- (int32_t) healthMax {
  return result.healthMax;
}
- (FullUserProto_Builder*) setHealthMax:(int32_t) value {
  result.hasHealthMax = YES;
  result.healthMax = value;
  return self;
}
- (FullUserProto_Builder*) clearHealthMax {
  result.hasHealthMax = NO;
  result.healthMax = 0;
  return self;
}
- (BOOL) hasEnergyMax {
  return result.hasEnergyMax;
}
- (int32_t) energyMax {
  return result.energyMax;
}
- (FullUserProto_Builder*) setEnergyMax:(int32_t) value {
  result.hasEnergyMax = YES;
  result.energyMax = value;
  return self;
}
- (FullUserProto_Builder*) clearEnergyMax {
  result.hasEnergyMax = NO;
  result.energyMax = 0;
  return self;
}
- (BOOL) hasStaminaMax {
  return result.hasStaminaMax;
}
- (int32_t) staminaMax {
  return result.staminaMax;
}
- (FullUserProto_Builder*) setStaminaMax:(int32_t) value {
  result.hasStaminaMax = YES;
  result.staminaMax = value;
  return self;
}
- (FullUserProto_Builder*) clearStaminaMax {
  result.hasStaminaMax = NO;
  result.staminaMax = 0;
  return self;
}
- (BOOL) hasDiamonds {
  return result.hasDiamonds;
}
- (int32_t) diamonds {
  return result.diamonds;
}
- (FullUserProto_Builder*) setDiamonds:(int32_t) value {
  result.hasDiamonds = YES;
  result.diamonds = value;
  return self;
}
- (FullUserProto_Builder*) clearDiamonds {
  result.hasDiamonds = NO;
  result.diamonds = 0;
  return self;
}
- (BOOL) hasCoins {
  return result.hasCoins;
}
- (int32_t) coins {
  return result.coins;
}
- (FullUserProto_Builder*) setCoins:(int32_t) value {
  result.hasCoins = YES;
  result.coins = value;
  return self;
}
- (FullUserProto_Builder*) clearCoins {
  result.hasCoins = NO;
  result.coins = 0;
  return self;
}
- (BOOL) hasMarketplaceDiamondsEarnings {
  return result.hasMarketplaceDiamondsEarnings;
}
- (int32_t) marketplaceDiamondsEarnings {
  return result.marketplaceDiamondsEarnings;
}
- (FullUserProto_Builder*) setMarketplaceDiamondsEarnings:(int32_t) value {
  result.hasMarketplaceDiamondsEarnings = YES;
  result.marketplaceDiamondsEarnings = value;
  return self;
}
- (FullUserProto_Builder*) clearMarketplaceDiamondsEarnings {
  result.hasMarketplaceDiamondsEarnings = NO;
  result.marketplaceDiamondsEarnings = 0;
  return self;
}
- (BOOL) hasMarketplaceCoinsEarnings {
  return result.hasMarketplaceCoinsEarnings;
}
- (int32_t) marketplaceCoinsEarnings {
  return result.marketplaceCoinsEarnings;
}
- (FullUserProto_Builder*) setMarketplaceCoinsEarnings:(int32_t) value {
  result.hasMarketplaceCoinsEarnings = YES;
  result.marketplaceCoinsEarnings = value;
  return self;
}
- (FullUserProto_Builder*) clearMarketplaceCoinsEarnings {
  result.hasMarketplaceCoinsEarnings = NO;
  result.marketplaceCoinsEarnings = 0;
  return self;
}
- (BOOL) hasVaultBalance {
  return result.hasVaultBalance;
}
- (int32_t) vaultBalance {
  return result.vaultBalance;
}
- (FullUserProto_Builder*) setVaultBalance:(int32_t) value {
  result.hasVaultBalance = YES;
  result.vaultBalance = value;
  return self;
}
- (FullUserProto_Builder*) clearVaultBalance {
  result.hasVaultBalance = NO;
  result.vaultBalance = 0;
  return self;
}
- (BOOL) hasExperience {
  return result.hasExperience;
}
- (int32_t) experience {
  return result.experience;
}
- (FullUserProto_Builder*) setExperience:(int32_t) value {
  result.hasExperience = YES;
  result.experience = value;
  return self;
}
- (FullUserProto_Builder*) clearExperience {
  result.hasExperience = NO;
  result.experience = 0;
  return self;
}
- (BOOL) hasTasksCompleted {
  return result.hasTasksCompleted;
}
- (int32_t) tasksCompleted {
  return result.tasksCompleted;
}
- (FullUserProto_Builder*) setTasksCompleted:(int32_t) value {
  result.hasTasksCompleted = YES;
  result.tasksCompleted = value;
  return self;
}
- (FullUserProto_Builder*) clearTasksCompleted {
  result.hasTasksCompleted = NO;
  result.tasksCompleted = 0;
  return self;
}
- (BOOL) hasBattlesWon {
  return result.hasBattlesWon;
}
- (int32_t) battlesWon {
  return result.battlesWon;
}
- (FullUserProto_Builder*) setBattlesWon:(int32_t) value {
  result.hasBattlesWon = YES;
  result.battlesWon = value;
  return self;
}
- (FullUserProto_Builder*) clearBattlesWon {
  result.hasBattlesWon = NO;
  result.battlesWon = 0;
  return self;
}
- (BOOL) hasBattlesLost {
  return result.hasBattlesLost;
}
- (int32_t) battlesLost {
  return result.battlesLost;
}
- (FullUserProto_Builder*) setBattlesLost:(int32_t) value {
  result.hasBattlesLost = YES;
  result.battlesLost = value;
  return self;
}
- (FullUserProto_Builder*) clearBattlesLost {
  result.hasBattlesLost = NO;
  result.battlesLost = 0;
  return self;
}
- (BOOL) hasFlees {
  return result.hasFlees;
}
- (int32_t) flees {
  return result.flees;
}
- (FullUserProto_Builder*) setFlees:(int32_t) value {
  result.hasFlees = YES;
  result.flees = value;
  return self;
}
- (FullUserProto_Builder*) clearFlees {
  result.hasFlees = NO;
  result.flees = 0;
  return self;
}
- (BOOL) hasReferralCode {
  return result.hasReferralCode;
}
- (NSString*) referralCode {
  return result.referralCode;
}
- (FullUserProto_Builder*) setReferralCode:(NSString*) value {
  result.hasReferralCode = YES;
  result.referralCode = value;
  return self;
}
- (FullUserProto_Builder*) clearReferralCode {
  result.hasReferralCode = NO;
  result.referralCode = @"";
  return self;
}
- (BOOL) hasNumReferrals {
  return result.hasNumReferrals;
}
- (int32_t) numReferrals {
  return result.numReferrals;
}
- (FullUserProto_Builder*) setNumReferrals:(int32_t) value {
  result.hasNumReferrals = YES;
  result.numReferrals = value;
  return self;
}
- (FullUserProto_Builder*) clearNumReferrals {
  result.hasNumReferrals = NO;
  result.numReferrals = 0;
  return self;
}
- (BOOL) hasUdid {
  return result.hasUdid;
}
- (NSString*) udid {
  return result.udid;
}
- (FullUserProto_Builder*) setUdid:(NSString*) value {
  result.hasUdid = YES;
  result.udid = value;
  return self;
}
- (FullUserProto_Builder*) clearUdid {
  result.hasUdid = NO;
  result.udid = @"";
  return self;
}
- (BOOL) hasUserLocation {
  return result.hasUserLocation;
}
- (LocationProto*) userLocation {
  return result.userLocation;
}
- (FullUserProto_Builder*) setUserLocation:(LocationProto*) value {
  result.hasUserLocation = YES;
  result.userLocation = value;
  return self;
}
- (FullUserProto_Builder*) setUserLocationBuilder:(LocationProto_Builder*) builderForValue {
  return [self setUserLocation:[builderForValue build]];
}
- (FullUserProto_Builder*) mergeUserLocation:(LocationProto*) value {
  if (result.hasUserLocation &&
      result.userLocation != [LocationProto defaultInstance]) {
    result.userLocation =
      [[[LocationProto builderWithPrototype:result.userLocation] mergeFrom:value] buildPartial];
  } else {
    result.userLocation = value;
  }
  result.hasUserLocation = YES;
  return self;
}
- (FullUserProto_Builder*) clearUserLocation {
  result.hasUserLocation = NO;
  result.userLocation = [LocationProto defaultInstance];
  return self;
}
- (BOOL) hasNumPostsInMarketplace {
  return result.hasNumPostsInMarketplace;
}
- (int32_t) numPostsInMarketplace {
  return result.numPostsInMarketplace;
}
- (FullUserProto_Builder*) setNumPostsInMarketplace:(int32_t) value {
  result.hasNumPostsInMarketplace = YES;
  result.numPostsInMarketplace = value;
  return self;
}
- (FullUserProto_Builder*) clearNumPostsInMarketplace {
  result.hasNumPostsInMarketplace = NO;
  result.numPostsInMarketplace = 0;
  return self;
}
- (BOOL) hasNumMarketplaceSalesUnredeemed {
  return result.hasNumMarketplaceSalesUnredeemed;
}
- (int32_t) numMarketplaceSalesUnredeemed {
  return result.numMarketplaceSalesUnredeemed;
}
- (FullUserProto_Builder*) setNumMarketplaceSalesUnredeemed:(int32_t) value {
  result.hasNumMarketplaceSalesUnredeemed = YES;
  result.numMarketplaceSalesUnredeemed = value;
  return self;
}
- (FullUserProto_Builder*) clearNumMarketplaceSalesUnredeemed {
  result.hasNumMarketplaceSalesUnredeemed = NO;
  result.numMarketplaceSalesUnredeemed = 0;
  return self;
}
- (BOOL) hasWeaponEquipped {
  return result.hasWeaponEquipped;
}
- (int32_t) weaponEquipped {
  return result.weaponEquipped;
}
- (FullUserProto_Builder*) setWeaponEquipped:(int32_t) value {
  result.hasWeaponEquipped = YES;
  result.weaponEquipped = value;
  return self;
}
- (FullUserProto_Builder*) clearWeaponEquipped {
  result.hasWeaponEquipped = NO;
  result.weaponEquipped = 0;
  return self;
}
- (BOOL) hasArmorEquipped {
  return result.hasArmorEquipped;
}
- (int32_t) armorEquipped {
  return result.armorEquipped;
}
- (FullUserProto_Builder*) setArmorEquipped:(int32_t) value {
  result.hasArmorEquipped = YES;
  result.armorEquipped = value;
  return self;
}
- (FullUserProto_Builder*) clearArmorEquipped {
  result.hasArmorEquipped = NO;
  result.armorEquipped = 0;
  return self;
}
- (BOOL) hasAmuletEquipped {
  return result.hasAmuletEquipped;
}
- (int32_t) amuletEquipped {
  return result.amuletEquipped;
}
- (FullUserProto_Builder*) setAmuletEquipped:(int32_t) value {
  result.hasAmuletEquipped = YES;
  result.amuletEquipped = value;
  return self;
}
- (FullUserProto_Builder*) clearAmuletEquipped {
  result.hasAmuletEquipped = NO;
  result.amuletEquipped = 0;
  return self;
}
- (BOOL) hasLastLoginTime {
  return result.hasLastLoginTime;
}
- (int64_t) lastLoginTime {
  return result.lastLoginTime;
}
- (FullUserProto_Builder*) setLastLoginTime:(int64_t) value {
  result.hasLastLoginTime = YES;
  result.lastLoginTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastLoginTime {
  result.hasLastLoginTime = NO;
  result.lastLoginTime = 0L;
  return self;
}
- (BOOL) hasLastLogoutTime {
  return result.hasLastLogoutTime;
}
- (int64_t) lastLogoutTime {
  return result.lastLogoutTime;
}
- (FullUserProto_Builder*) setLastLogoutTime:(int64_t) value {
  result.hasLastLogoutTime = YES;
  result.lastLogoutTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastLogoutTime {
  result.hasLastLogoutTime = NO;
  result.lastLogoutTime = 0L;
  return self;
}
- (BOOL) hasDeviceToken {
  return result.hasDeviceToken;
}
- (NSString*) deviceToken {
  return result.deviceToken;
}
- (FullUserProto_Builder*) setDeviceToken:(NSString*) value {
  result.hasDeviceToken = YES;
  result.deviceToken = value;
  return self;
}
- (FullUserProto_Builder*) clearDeviceToken {
  result.hasDeviceToken = NO;
  result.deviceToken = @"";
  return self;
}
- (BOOL) hasLastBattleNotificationTime {
  return result.hasLastBattleNotificationTime;
}
- (int64_t) lastBattleNotificationTime {
  return result.lastBattleNotificationTime;
}
- (FullUserProto_Builder*) setLastBattleNotificationTime:(int64_t) value {
  result.hasLastBattleNotificationTime = YES;
  result.lastBattleNotificationTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastBattleNotificationTime {
  result.hasLastBattleNotificationTime = NO;
  result.lastBattleNotificationTime = 0L;
  return self;
}
- (BOOL) hasLastTimeAttacked {
  return result.hasLastTimeAttacked;
}
- (int64_t) lastTimeAttacked {
  return result.lastTimeAttacked;
}
- (FullUserProto_Builder*) setLastTimeAttacked:(int64_t) value {
  result.hasLastTimeAttacked = YES;
  result.lastTimeAttacked = value;
  return self;
}
- (FullUserProto_Builder*) clearLastTimeAttacked {
  result.hasLastTimeAttacked = NO;
  result.lastTimeAttacked = 0L;
  return self;
}
- (BOOL) hasNumBadges {
  return result.hasNumBadges;
}
- (int32_t) numBadges {
  return result.numBadges;
}
- (FullUserProto_Builder*) setNumBadges:(int32_t) value {
  result.hasNumBadges = YES;
  result.numBadges = value;
  return self;
}
- (FullUserProto_Builder*) clearNumBadges {
  result.hasNumBadges = NO;
  result.numBadges = 0;
  return self;
}
- (BOOL) hasLastShortLicensePurchaseTime {
  return result.hasLastShortLicensePurchaseTime;
}
- (int64_t) lastShortLicensePurchaseTime {
  return result.lastShortLicensePurchaseTime;
}
- (FullUserProto_Builder*) setLastShortLicensePurchaseTime:(int64_t) value {
  result.hasLastShortLicensePurchaseTime = YES;
  result.lastShortLicensePurchaseTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastShortLicensePurchaseTime {
  result.hasLastShortLicensePurchaseTime = NO;
  result.lastShortLicensePurchaseTime = 0L;
  return self;
}
- (BOOL) hasLastLongLicensePurchaseTime {
  return result.hasLastLongLicensePurchaseTime;
}
- (int64_t) lastLongLicensePurchaseTime {
  return result.lastLongLicensePurchaseTime;
}
- (FullUserProto_Builder*) setLastLongLicensePurchaseTime:(int64_t) value {
  result.hasLastLongLicensePurchaseTime = YES;
  result.lastLongLicensePurchaseTime = value;
  return self;
}
- (FullUserProto_Builder*) clearLastLongLicensePurchaseTime {
  result.hasLastLongLicensePurchaseTime = NO;
  result.lastLongLicensePurchaseTime = 0L;
  return self;
}
- (BOOL) hasIsFake {
  return result.hasIsFake;
}
- (BOOL) isFake {
  return result.isFake;
}
- (FullUserProto_Builder*) setIsFake:(BOOL) value {
  result.hasIsFake = YES;
  result.isFake = value;
  return self;
}
- (FullUserProto_Builder*) clearIsFake {
  result.hasIsFake = NO;
  result.isFake = NO;
  return self;
}
@end

@interface FullEquipProto ()
@property int32_t equipId;
@property (retain) NSString* name;
@property FullEquipProto_EquipType equipType;
@property (retain) NSString* description;
@property int32_t attackBoost;
@property int32_t defenseBoost;
@property int32_t minLevel;
@property int32_t coinPrice;
@property int32_t diamondPrice;
@property Float32 chanceOfLoss;
@property FullEquipProto_ClassType classType;
@property FullEquipProto_Rarity rarity;
@property BOOL isBuyableInArmory;
@end

@implementation FullEquipProto

- (BOOL) hasEquipId {
  return !!hasEquipId_;
}
- (void) setHasEquipId:(BOOL) value {
  hasEquipId_ = !!value;
}
@synthesize equipId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasEquipType {
  return !!hasEquipType_;
}
- (void) setHasEquipType:(BOOL) value {
  hasEquipType_ = !!value;
}
@synthesize equipType;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (BOOL) hasAttackBoost {
  return !!hasAttackBoost_;
}
- (void) setHasAttackBoost:(BOOL) value {
  hasAttackBoost_ = !!value;
}
@synthesize attackBoost;
- (BOOL) hasDefenseBoost {
  return !!hasDefenseBoost_;
}
- (void) setHasDefenseBoost:(BOOL) value {
  hasDefenseBoost_ = !!value;
}
@synthesize defenseBoost;
- (BOOL) hasMinLevel {
  return !!hasMinLevel_;
}
- (void) setHasMinLevel:(BOOL) value {
  hasMinLevel_ = !!value;
}
@synthesize minLevel;
- (BOOL) hasCoinPrice {
  return !!hasCoinPrice_;
}
- (void) setHasCoinPrice:(BOOL) value {
  hasCoinPrice_ = !!value;
}
@synthesize coinPrice;
- (BOOL) hasDiamondPrice {
  return !!hasDiamondPrice_;
}
- (void) setHasDiamondPrice:(BOOL) value {
  hasDiamondPrice_ = !!value;
}
@synthesize diamondPrice;
- (BOOL) hasChanceOfLoss {
  return !!hasChanceOfLoss_;
}
- (void) setHasChanceOfLoss:(BOOL) value {
  hasChanceOfLoss_ = !!value;
}
@synthesize chanceOfLoss;
- (BOOL) hasClassType {
  return !!hasClassType_;
}
- (void) setHasClassType:(BOOL) value {
  hasClassType_ = !!value;
}
@synthesize classType;
- (BOOL) hasRarity {
  return !!hasRarity_;
}
- (void) setHasRarity:(BOOL) value {
  hasRarity_ = !!value;
}
@synthesize rarity;
- (BOOL) hasIsBuyableInArmory {
  return !!hasIsBuyableInArmory_;
}
- (void) setHasIsBuyableInArmory:(BOOL) value {
  hasIsBuyableInArmory_ = !!value;
}
- (BOOL) isBuyableInArmory {
  return !!isBuyableInArmory_;
}
- (void) setIsBuyableInArmory:(BOOL) value {
  isBuyableInArmory_ = !!value;
}
- (void) dealloc {
  self.name = nil;
  self.description = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.equipId = 0;
    self.name = @"";
    self.equipType = FullEquipProto_EquipTypeWeapon;
    self.description = @"";
    self.attackBoost = 0;
    self.defenseBoost = 0;
    self.minLevel = 0;
    self.coinPrice = 0;
    self.diamondPrice = 0;
    self.chanceOfLoss = 0;
    self.classType = FullEquipProto_ClassTypeWarrior;
    self.rarity = FullEquipProto_RarityCommon;
    self.isBuyableInArmory = NO;
  }
  return self;
}
static FullEquipProto* defaultFullEquipProtoInstance = nil;
+ (void) initialize {
  if (self == [FullEquipProto class]) {
    defaultFullEquipProtoInstance = [[FullEquipProto alloc] init];
  }
}
+ (FullEquipProto*) defaultInstance {
  return defaultFullEquipProtoInstance;
}
- (FullEquipProto*) defaultInstance {
  return defaultFullEquipProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasEquipId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasEquipType) {
    return NO;
  }
  if (!self.hasDescription) {
    return NO;
  }
  if (!self.hasAttackBoost) {
    return NO;
  }
  if (!self.hasDefenseBoost) {
    return NO;
  }
  if (!self.hasMinLevel) {
    return NO;
  }
  if (!self.hasChanceOfLoss) {
    return NO;
  }
  if (!self.hasClassType) {
    return NO;
  }
  if (!self.hasRarity) {
    return NO;
  }
  if (!self.hasIsBuyableInArmory) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEquipId) {
    [output writeInt32:1 value:self.equipId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasEquipType) {
    [output writeEnum:3 value:self.equipType];
  }
  if (self.hasDescription) {
    [output writeString:4 value:self.description];
  }
  if (self.hasAttackBoost) {
    [output writeInt32:5 value:self.attackBoost];
  }
  if (self.hasDefenseBoost) {
    [output writeInt32:6 value:self.defenseBoost];
  }
  if (self.hasMinLevel) {
    [output writeInt32:7 value:self.minLevel];
  }
  if (self.hasCoinPrice) {
    [output writeInt32:8 value:self.coinPrice];
  }
  if (self.hasDiamondPrice) {
    [output writeInt32:9 value:self.diamondPrice];
  }
  if (self.hasChanceOfLoss) {
    [output writeFloat:10 value:self.chanceOfLoss];
  }
  if (self.hasClassType) {
    [output writeEnum:11 value:self.classType];
  }
  if (self.hasRarity) {
    [output writeEnum:12 value:self.rarity];
  }
  if (self.hasIsBuyableInArmory) {
    [output writeBool:13 value:self.isBuyableInArmory];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasEquipId) {
    size += computeInt32Size(1, self.equipId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasEquipType) {
    size += computeEnumSize(3, self.equipType);
  }
  if (self.hasDescription) {
    size += computeStringSize(4, self.description);
  }
  if (self.hasAttackBoost) {
    size += computeInt32Size(5, self.attackBoost);
  }
  if (self.hasDefenseBoost) {
    size += computeInt32Size(6, self.defenseBoost);
  }
  if (self.hasMinLevel) {
    size += computeInt32Size(7, self.minLevel);
  }
  if (self.hasCoinPrice) {
    size += computeInt32Size(8, self.coinPrice);
  }
  if (self.hasDiamondPrice) {
    size += computeInt32Size(9, self.diamondPrice);
  }
  if (self.hasChanceOfLoss) {
    size += computeFloatSize(10, self.chanceOfLoss);
  }
  if (self.hasClassType) {
    size += computeEnumSize(11, self.classType);
  }
  if (self.hasRarity) {
    size += computeEnumSize(12, self.rarity);
  }
  if (self.hasIsBuyableInArmory) {
    size += computeBoolSize(13, self.isBuyableInArmory);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullEquipProto*) parseFromData:(NSData*) data {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromData:data] build];
}
+ (FullEquipProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullEquipProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromInputStream:input] build];
}
+ (FullEquipProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullEquipProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullEquipProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullEquipProto_Builder*) builder {
  return [[[FullEquipProto_Builder alloc] init] autorelease];
}
+ (FullEquipProto_Builder*) builderWithPrototype:(FullEquipProto*) prototype {
  return [[FullEquipProto builder] mergeFrom:prototype];
}
- (FullEquipProto_Builder*) builder {
  return [FullEquipProto builder];
}
@end

BOOL FullEquipProto_RarityIsValidValue(FullEquipProto_Rarity value) {
  switch (value) {
    case FullEquipProto_RarityCommon:
    case FullEquipProto_RarityUncommon:
    case FullEquipProto_RarityRare:
    case FullEquipProto_RarityEpic:
    case FullEquipProto_RarityLegendary:
      return YES;
    default:
      return NO;
  }
}
BOOL FullEquipProto_EquipTypeIsValidValue(FullEquipProto_EquipType value) {
  switch (value) {
    case FullEquipProto_EquipTypeWeapon:
    case FullEquipProto_EquipTypeArmor:
    case FullEquipProto_EquipTypeAmulet:
      return YES;
    default:
      return NO;
  }
}
BOOL FullEquipProto_ClassTypeIsValidValue(FullEquipProto_ClassType value) {
  switch (value) {
    case FullEquipProto_ClassTypeWarrior:
    case FullEquipProto_ClassTypeArcher:
    case FullEquipProto_ClassTypeMage:
    case FullEquipProto_ClassTypeAllAmulet:
      return YES;
    default:
      return NO;
  }
}
@interface FullEquipProto_Builder()
@property (retain) FullEquipProto* result;
@end

@implementation FullEquipProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullEquipProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullEquipProto_Builder*) clear {
  self.result = [[[FullEquipProto alloc] init] autorelease];
  return self;
}
- (FullEquipProto_Builder*) clone {
  return [FullEquipProto builderWithPrototype:result];
}
- (FullEquipProto*) defaultInstance {
  return [FullEquipProto defaultInstance];
}
- (FullEquipProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullEquipProto*) buildPartial {
  FullEquipProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullEquipProto_Builder*) mergeFrom:(FullEquipProto*) other {
  if (other == [FullEquipProto defaultInstance]) {
    return self;
  }
  if (other.hasEquipId) {
    [self setEquipId:other.equipId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasEquipType) {
    [self setEquipType:other.equipType];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasAttackBoost) {
    [self setAttackBoost:other.attackBoost];
  }
  if (other.hasDefenseBoost) {
    [self setDefenseBoost:other.defenseBoost];
  }
  if (other.hasMinLevel) {
    [self setMinLevel:other.minLevel];
  }
  if (other.hasCoinPrice) {
    [self setCoinPrice:other.coinPrice];
  }
  if (other.hasDiamondPrice) {
    [self setDiamondPrice:other.diamondPrice];
  }
  if (other.hasChanceOfLoss) {
    [self setChanceOfLoss:other.chanceOfLoss];
  }
  if (other.hasClassType) {
    [self setClassType:other.classType];
  }
  if (other.hasRarity) {
    [self setRarity:other.rarity];
  }
  if (other.hasIsBuyableInArmory) {
    [self setIsBuyableInArmory:other.isBuyableInArmory];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullEquipProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullEquipProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setEquipId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (FullEquipProto_EquipTypeIsValidValue(value)) {
          [self setEquipType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setDescription:[input readString]];
        break;
      }
      case 40: {
        [self setAttackBoost:[input readInt32]];
        break;
      }
      case 48: {
        [self setDefenseBoost:[input readInt32]];
        break;
      }
      case 56: {
        [self setMinLevel:[input readInt32]];
        break;
      }
      case 64: {
        [self setCoinPrice:[input readInt32]];
        break;
      }
      case 72: {
        [self setDiamondPrice:[input readInt32]];
        break;
      }
      case 85: {
        [self setChanceOfLoss:[input readFloat]];
        break;
      }
      case 88: {
        int32_t value = [input readEnum];
        if (FullEquipProto_ClassTypeIsValidValue(value)) {
          [self setClassType:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
      case 96: {
        int32_t value = [input readEnum];
        if (FullEquipProto_RarityIsValidValue(value)) {
          [self setRarity:value];
        } else {
          [unknownFields mergeVarintField:12 value:value];
        }
        break;
      }
      case 104: {
        [self setIsBuyableInArmory:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasEquipId {
  return result.hasEquipId;
}
- (int32_t) equipId {
  return result.equipId;
}
- (FullEquipProto_Builder*) setEquipId:(int32_t) value {
  result.hasEquipId = YES;
  result.equipId = value;
  return self;
}
- (FullEquipProto_Builder*) clearEquipId {
  result.hasEquipId = NO;
  result.equipId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullEquipProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullEquipProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasEquipType {
  return result.hasEquipType;
}
- (FullEquipProto_EquipType) equipType {
  return result.equipType;
}
- (FullEquipProto_Builder*) setEquipType:(FullEquipProto_EquipType) value {
  result.hasEquipType = YES;
  result.equipType = value;
  return self;
}
- (FullEquipProto_Builder*) clearEquipType {
  result.hasEquipType = NO;
  result.equipType = FullEquipProto_EquipTypeWeapon;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (FullEquipProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (FullEquipProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasAttackBoost {
  return result.hasAttackBoost;
}
- (int32_t) attackBoost {
  return result.attackBoost;
}
- (FullEquipProto_Builder*) setAttackBoost:(int32_t) value {
  result.hasAttackBoost = YES;
  result.attackBoost = value;
  return self;
}
- (FullEquipProto_Builder*) clearAttackBoost {
  result.hasAttackBoost = NO;
  result.attackBoost = 0;
  return self;
}
- (BOOL) hasDefenseBoost {
  return result.hasDefenseBoost;
}
- (int32_t) defenseBoost {
  return result.defenseBoost;
}
- (FullEquipProto_Builder*) setDefenseBoost:(int32_t) value {
  result.hasDefenseBoost = YES;
  result.defenseBoost = value;
  return self;
}
- (FullEquipProto_Builder*) clearDefenseBoost {
  result.hasDefenseBoost = NO;
  result.defenseBoost = 0;
  return self;
}
- (BOOL) hasMinLevel {
  return result.hasMinLevel;
}
- (int32_t) minLevel {
  return result.minLevel;
}
- (FullEquipProto_Builder*) setMinLevel:(int32_t) value {
  result.hasMinLevel = YES;
  result.minLevel = value;
  return self;
}
- (FullEquipProto_Builder*) clearMinLevel {
  result.hasMinLevel = NO;
  result.minLevel = 0;
  return self;
}
- (BOOL) hasCoinPrice {
  return result.hasCoinPrice;
}
- (int32_t) coinPrice {
  return result.coinPrice;
}
- (FullEquipProto_Builder*) setCoinPrice:(int32_t) value {
  result.hasCoinPrice = YES;
  result.coinPrice = value;
  return self;
}
- (FullEquipProto_Builder*) clearCoinPrice {
  result.hasCoinPrice = NO;
  result.coinPrice = 0;
  return self;
}
- (BOOL) hasDiamondPrice {
  return result.hasDiamondPrice;
}
- (int32_t) diamondPrice {
  return result.diamondPrice;
}
- (FullEquipProto_Builder*) setDiamondPrice:(int32_t) value {
  result.hasDiamondPrice = YES;
  result.diamondPrice = value;
  return self;
}
- (FullEquipProto_Builder*) clearDiamondPrice {
  result.hasDiamondPrice = NO;
  result.diamondPrice = 0;
  return self;
}
- (BOOL) hasChanceOfLoss {
  return result.hasChanceOfLoss;
}
- (Float32) chanceOfLoss {
  return result.chanceOfLoss;
}
- (FullEquipProto_Builder*) setChanceOfLoss:(Float32) value {
  result.hasChanceOfLoss = YES;
  result.chanceOfLoss = value;
  return self;
}
- (FullEquipProto_Builder*) clearChanceOfLoss {
  result.hasChanceOfLoss = NO;
  result.chanceOfLoss = 0;
  return self;
}
- (BOOL) hasClassType {
  return result.hasClassType;
}
- (FullEquipProto_ClassType) classType {
  return result.classType;
}
- (FullEquipProto_Builder*) setClassType:(FullEquipProto_ClassType) value {
  result.hasClassType = YES;
  result.classType = value;
  return self;
}
- (FullEquipProto_Builder*) clearClassType {
  result.hasClassType = NO;
  result.classType = FullEquipProto_ClassTypeWarrior;
  return self;
}
- (BOOL) hasRarity {
  return result.hasRarity;
}
- (FullEquipProto_Rarity) rarity {
  return result.rarity;
}
- (FullEquipProto_Builder*) setRarity:(FullEquipProto_Rarity) value {
  result.hasRarity = YES;
  result.rarity = value;
  return self;
}
- (FullEquipProto_Builder*) clearRarity {
  result.hasRarity = NO;
  result.rarity = FullEquipProto_RarityCommon;
  return self;
}
- (BOOL) hasIsBuyableInArmory {
  return result.hasIsBuyableInArmory;
}
- (BOOL) isBuyableInArmory {
  return result.isBuyableInArmory;
}
- (FullEquipProto_Builder*) setIsBuyableInArmory:(BOOL) value {
  result.hasIsBuyableInArmory = YES;
  result.isBuyableInArmory = value;
  return self;
}
- (FullEquipProto_Builder*) clearIsBuyableInArmory {
  result.hasIsBuyableInArmory = NO;
  result.isBuyableInArmory = NO;
  return self;
}
@end

@interface FullUserStructureProto ()
@property int32_t userStructId;
@property int32_t userId;
@property int32_t structId;
@property int64_t lastRetrieved;
@property (retain) CoordinateProto* coordinates;
@property int32_t level;
@property int64_t purchaseTime;
@property int64_t lastUpgradeTime;
@property BOOL isComplete;
@property StructOrientation orientation;
@end

@implementation FullUserStructureProto

- (BOOL) hasUserStructId {
  return !!hasUserStructId_;
}
- (void) setHasUserStructId:(BOOL) value {
  hasUserStructId_ = !!value;
}
@synthesize userStructId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value {
  hasStructId_ = !!value;
}
@synthesize structId;
- (BOOL) hasLastRetrieved {
  return !!hasLastRetrieved_;
}
- (void) setHasLastRetrieved:(BOOL) value {
  hasLastRetrieved_ = !!value;
}
@synthesize lastRetrieved;
- (BOOL) hasCoordinates {
  return !!hasCoordinates_;
}
- (void) setHasCoordinates:(BOOL) value {
  hasCoordinates_ = !!value;
}
@synthesize coordinates;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (BOOL) hasPurchaseTime {
  return !!hasPurchaseTime_;
}
- (void) setHasPurchaseTime:(BOOL) value {
  hasPurchaseTime_ = !!value;
}
@synthesize purchaseTime;
- (BOOL) hasLastUpgradeTime {
  return !!hasLastUpgradeTime_;
}
- (void) setHasLastUpgradeTime:(BOOL) value {
  hasLastUpgradeTime_ = !!value;
}
@synthesize lastUpgradeTime;
- (BOOL) hasIsComplete {
  return !!hasIsComplete_;
}
- (void) setHasIsComplete:(BOOL) value {
  hasIsComplete_ = !!value;
}
- (BOOL) isComplete {
  return !!isComplete_;
}
- (void) setIsComplete:(BOOL) value {
  isComplete_ = !!value;
}
- (BOOL) hasOrientation {
  return !!hasOrientation_;
}
- (void) setHasOrientation:(BOOL) value {
  hasOrientation_ = !!value;
}
@synthesize orientation;
- (void) dealloc {
  self.coordinates = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userStructId = 0;
    self.userId = 0;
    self.structId = 0;
    self.lastRetrieved = 0L;
    self.coordinates = [CoordinateProto defaultInstance];
    self.level = 0;
    self.purchaseTime = 0L;
    self.lastUpgradeTime = 0L;
    self.isComplete = NO;
    self.orientation = StructOrientationPosition1;
  }
  return self;
}
static FullUserStructureProto* defaultFullUserStructureProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserStructureProto class]) {
    defaultFullUserStructureProtoInstance = [[FullUserStructureProto alloc] init];
  }
}
+ (FullUserStructureProto*) defaultInstance {
  return defaultFullUserStructureProtoInstance;
}
- (FullUserStructureProto*) defaultInstance {
  return defaultFullUserStructureProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserStructId) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasStructId) {
    return NO;
  }
  if (!self.hasCoordinates) {
    return NO;
  }
  if (!self.hasLevel) {
    return NO;
  }
  if (!self.hasPurchaseTime) {
    return NO;
  }
  if (!self.hasIsComplete) {
    return NO;
  }
  if (!self.hasOrientation) {
    return NO;
  }
  if (!self.coordinates.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserStructId) {
    [output writeInt32:1 value:self.userStructId];
  }
  if (self.hasUserId) {
    [output writeInt32:2 value:self.userId];
  }
  if (self.hasStructId) {
    [output writeInt32:3 value:self.structId];
  }
  if (self.hasLastRetrieved) {
    [output writeInt64:4 value:self.lastRetrieved];
  }
  if (self.hasCoordinates) {
    [output writeMessage:5 value:self.coordinates];
  }
  if (self.hasLevel) {
    [output writeInt32:6 value:self.level];
  }
  if (self.hasPurchaseTime) {
    [output writeInt64:7 value:self.purchaseTime];
  }
  if (self.hasLastUpgradeTime) {
    [output writeInt64:8 value:self.lastUpgradeTime];
  }
  if (self.hasIsComplete) {
    [output writeBool:9 value:self.isComplete];
  }
  if (self.hasOrientation) {
    [output writeEnum:10 value:self.orientation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserStructId) {
    size += computeInt32Size(1, self.userStructId);
  }
  if (self.hasUserId) {
    size += computeInt32Size(2, self.userId);
  }
  if (self.hasStructId) {
    size += computeInt32Size(3, self.structId);
  }
  if (self.hasLastRetrieved) {
    size += computeInt64Size(4, self.lastRetrieved);
  }
  if (self.hasCoordinates) {
    size += computeMessageSize(5, self.coordinates);
  }
  if (self.hasLevel) {
    size += computeInt32Size(6, self.level);
  }
  if (self.hasPurchaseTime) {
    size += computeInt64Size(7, self.purchaseTime);
  }
  if (self.hasLastUpgradeTime) {
    size += computeInt64Size(8, self.lastUpgradeTime);
  }
  if (self.hasIsComplete) {
    size += computeBoolSize(9, self.isComplete);
  }
  if (self.hasOrientation) {
    size += computeEnumSize(10, self.orientation);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserStructureProto*) parseFromData:(NSData*) data {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromData:data] build];
}
+ (FullUserStructureProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromInputStream:input] build];
}
+ (FullUserStructureProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto_Builder*) builder {
  return [[[FullUserStructureProto_Builder alloc] init] autorelease];
}
+ (FullUserStructureProto_Builder*) builderWithPrototype:(FullUserStructureProto*) prototype {
  return [[FullUserStructureProto builder] mergeFrom:prototype];
}
- (FullUserStructureProto_Builder*) builder {
  return [FullUserStructureProto builder];
}
@end

@interface FullUserStructureProto_Builder()
@property (retain) FullUserStructureProto* result;
@end

@implementation FullUserStructureProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserStructureProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserStructureProto_Builder*) clear {
  self.result = [[[FullUserStructureProto alloc] init] autorelease];
  return self;
}
- (FullUserStructureProto_Builder*) clone {
  return [FullUserStructureProto builderWithPrototype:result];
}
- (FullUserStructureProto*) defaultInstance {
  return [FullUserStructureProto defaultInstance];
}
- (FullUserStructureProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserStructureProto*) buildPartial {
  FullUserStructureProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserStructureProto_Builder*) mergeFrom:(FullUserStructureProto*) other {
  if (other == [FullUserStructureProto defaultInstance]) {
    return self;
  }
  if (other.hasUserStructId) {
    [self setUserStructId:other.userStructId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasLastRetrieved) {
    [self setLastRetrieved:other.lastRetrieved];
  }
  if (other.hasCoordinates) {
    [self mergeCoordinates:other.coordinates];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasPurchaseTime) {
    [self setPurchaseTime:other.purchaseTime];
  }
  if (other.hasLastUpgradeTime) {
    [self setLastUpgradeTime:other.lastUpgradeTime];
  }
  if (other.hasIsComplete) {
    [self setIsComplete:other.isComplete];
  }
  if (other.hasOrientation) {
    [self setOrientation:other.orientation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserStructId:[input readInt32]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 24: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 32: {
        [self setLastRetrieved:[input readInt64]];
        break;
      }
      case 42: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoordinates) {
          [subBuilder mergeFrom:self.coordinates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoordinates:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 56: {
        [self setPurchaseTime:[input readInt64]];
        break;
      }
      case 64: {
        [self setLastUpgradeTime:[input readInt64]];
        break;
      }
      case 72: {
        [self setIsComplete:[input readBool]];
        break;
      }
      case 80: {
        int32_t value = [input readEnum];
        if (StructOrientationIsValidValue(value)) {
          [self setOrientation:value];
        } else {
          [unknownFields mergeVarintField:10 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserStructId {
  return result.hasUserStructId;
}
- (int32_t) userStructId {
  return result.userStructId;
}
- (FullUserStructureProto_Builder*) setUserStructId:(int32_t) value {
  result.hasUserStructId = YES;
  result.userStructId = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearUserStructId {
  result.hasUserStructId = NO;
  result.userStructId = 0;
  return self;
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserStructureProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (FullUserStructureProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasLastRetrieved {
  return result.hasLastRetrieved;
}
- (int64_t) lastRetrieved {
  return result.lastRetrieved;
}
- (FullUserStructureProto_Builder*) setLastRetrieved:(int64_t) value {
  result.hasLastRetrieved = YES;
  result.lastRetrieved = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearLastRetrieved {
  result.hasLastRetrieved = NO;
  result.lastRetrieved = 0L;
  return self;
}
- (BOOL) hasCoordinates {
  return result.hasCoordinates;
}
- (CoordinateProto*) coordinates {
  return result.coordinates;
}
- (FullUserStructureProto_Builder*) setCoordinates:(CoordinateProto*) value {
  result.hasCoordinates = YES;
  result.coordinates = value;
  return self;
}
- (FullUserStructureProto_Builder*) setCoordinatesBuilder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoordinates:[builderForValue build]];
}
- (FullUserStructureProto_Builder*) mergeCoordinates:(CoordinateProto*) value {
  if (result.hasCoordinates &&
      result.coordinates != [CoordinateProto defaultInstance]) {
    result.coordinates =
      [[[CoordinateProto builderWithPrototype:result.coordinates] mergeFrom:value] buildPartial];
  } else {
    result.coordinates = value;
  }
  result.hasCoordinates = YES;
  return self;
}
- (FullUserStructureProto_Builder*) clearCoordinates {
  result.hasCoordinates = NO;
  result.coordinates = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (FullUserStructureProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasPurchaseTime {
  return result.hasPurchaseTime;
}
- (int64_t) purchaseTime {
  return result.purchaseTime;
}
- (FullUserStructureProto_Builder*) setPurchaseTime:(int64_t) value {
  result.hasPurchaseTime = YES;
  result.purchaseTime = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearPurchaseTime {
  result.hasPurchaseTime = NO;
  result.purchaseTime = 0L;
  return self;
}
- (BOOL) hasLastUpgradeTime {
  return result.hasLastUpgradeTime;
}
- (int64_t) lastUpgradeTime {
  return result.lastUpgradeTime;
}
- (FullUserStructureProto_Builder*) setLastUpgradeTime:(int64_t) value {
  result.hasLastUpgradeTime = YES;
  result.lastUpgradeTime = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearLastUpgradeTime {
  result.hasLastUpgradeTime = NO;
  result.lastUpgradeTime = 0L;
  return self;
}
- (BOOL) hasIsComplete {
  return result.hasIsComplete;
}
- (BOOL) isComplete {
  return result.isComplete;
}
- (FullUserStructureProto_Builder*) setIsComplete:(BOOL) value {
  result.hasIsComplete = YES;
  result.isComplete = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearIsComplete {
  result.hasIsComplete = NO;
  result.isComplete = NO;
  return self;
}
- (BOOL) hasOrientation {
  return result.hasOrientation;
}
- (StructOrientation) orientation {
  return result.orientation;
}
- (FullUserStructureProto_Builder*) setOrientation:(StructOrientation) value {
  result.hasOrientation = YES;
  result.orientation = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearOrientation {
  result.hasOrientation = NO;
  result.orientation = StructOrientationPosition1;
  return self;
}
@end

@interface FullUserEquipProto ()
@property int32_t userId;
@property int32_t equipId;
@property int32_t quantity;
@property BOOL isStolen;
@end

@implementation FullUserEquipProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasEquipId {
  return !!hasEquipId_;
}
- (void) setHasEquipId:(BOOL) value {
  hasEquipId_ = !!value;
}
@synthesize equipId;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value {
  hasQuantity_ = !!value;
}
@synthesize quantity;
- (BOOL) hasIsStolen {
  return !!hasIsStolen_;
}
- (void) setHasIsStolen:(BOOL) value {
  hasIsStolen_ = !!value;
}
- (BOOL) isStolen {
  return !!isStolen_;
}
- (void) setIsStolen:(BOOL) value {
  isStolen_ = !!value;
}
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.equipId = 0;
    self.quantity = 0;
    self.isStolen = NO;
  }
  return self;
}
static FullUserEquipProto* defaultFullUserEquipProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserEquipProto class]) {
    defaultFullUserEquipProtoInstance = [[FullUserEquipProto alloc] init];
  }
}
+ (FullUserEquipProto*) defaultInstance {
  return defaultFullUserEquipProtoInstance;
}
- (FullUserEquipProto*) defaultInstance {
  return defaultFullUserEquipProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasEquipId) {
    return NO;
  }
  if (!self.hasQuantity) {
    return NO;
  }
  if (!self.hasIsStolen) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasEquipId) {
    [output writeInt32:2 value:self.equipId];
  }
  if (self.hasQuantity) {
    [output writeInt32:3 value:self.quantity];
  }
  if (self.hasIsStolen) {
    [output writeBool:4 value:self.isStolen];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasEquipId) {
    size += computeInt32Size(2, self.equipId);
  }
  if (self.hasQuantity) {
    size += computeInt32Size(3, self.quantity);
  }
  if (self.hasIsStolen) {
    size += computeBoolSize(4, self.isStolen);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserEquipProto*) parseFromData:(NSData*) data {
  return (FullUserEquipProto*)[[[FullUserEquipProto builder] mergeFromData:data] build];
}
+ (FullUserEquipProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserEquipProto*)[[[FullUserEquipProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserEquipProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserEquipProto*)[[[FullUserEquipProto builder] mergeFromInputStream:input] build];
}
+ (FullUserEquipProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserEquipProto*)[[[FullUserEquipProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserEquipProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserEquipProto*)[[[FullUserEquipProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserEquipProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserEquipProto*)[[[FullUserEquipProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserEquipProto_Builder*) builder {
  return [[[FullUserEquipProto_Builder alloc] init] autorelease];
}
+ (FullUserEquipProto_Builder*) builderWithPrototype:(FullUserEquipProto*) prototype {
  return [[FullUserEquipProto builder] mergeFrom:prototype];
}
- (FullUserEquipProto_Builder*) builder {
  return [FullUserEquipProto builder];
}
@end

@interface FullUserEquipProto_Builder()
@property (retain) FullUserEquipProto* result;
@end

@implementation FullUserEquipProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserEquipProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserEquipProto_Builder*) clear {
  self.result = [[[FullUserEquipProto alloc] init] autorelease];
  return self;
}
- (FullUserEquipProto_Builder*) clone {
  return [FullUserEquipProto builderWithPrototype:result];
}
- (FullUserEquipProto*) defaultInstance {
  return [FullUserEquipProto defaultInstance];
}
- (FullUserEquipProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserEquipProto*) buildPartial {
  FullUserEquipProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserEquipProto_Builder*) mergeFrom:(FullUserEquipProto*) other {
  if (other == [FullUserEquipProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasEquipId) {
    [self setEquipId:other.equipId];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  if (other.hasIsStolen) {
    [self setIsStolen:other.isStolen];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserEquipProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserEquipProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setEquipId:[input readInt32]];
        break;
      }
      case 24: {
        [self setQuantity:[input readInt32]];
        break;
      }
      case 32: {
        [self setIsStolen:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserEquipProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserEquipProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasEquipId {
  return result.hasEquipId;
}
- (int32_t) equipId {
  return result.equipId;
}
- (FullUserEquipProto_Builder*) setEquipId:(int32_t) value {
  result.hasEquipId = YES;
  result.equipId = value;
  return self;
}
- (FullUserEquipProto_Builder*) clearEquipId {
  result.hasEquipId = NO;
  result.equipId = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (FullUserEquipProto_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (FullUserEquipProto_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
- (BOOL) hasIsStolen {
  return result.hasIsStolen;
}
- (BOOL) isStolen {
  return result.isStolen;
}
- (FullUserEquipProto_Builder*) setIsStolen:(BOOL) value {
  result.hasIsStolen = YES;
  result.isStolen = value;
  return self;
}
- (FullUserEquipProto_Builder*) clearIsStolen {
  result.hasIsStolen = NO;
  result.isStolen = NO;
  return self;
}
@end

@interface FullStructureProto ()
@property int32_t structId;
@property (retain) NSString* name;
@property int32_t income;
@property int32_t minutesToGain;
@property int32_t minutesToBuild;
@property int32_t minutesToUpgradeBase;
@property int32_t coinPrice;
@property int32_t diamondPrice;
@property int32_t minLevel;
@property int32_t xLength;
@property int32_t yLength;
@property int32_t upgradeCoinCostBase;
@property int32_t upgradeDiamondCostBase;
@property int32_t instaBuildDiamondCostBase;
@property int32_t instaRetrieveDiamondCostBase;
@property int32_t instaUpgradeDiamondCostBase;
@end

@implementation FullStructureProto

- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value {
  hasStructId_ = !!value;
}
@synthesize structId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasIncome {
  return !!hasIncome_;
}
- (void) setHasIncome:(BOOL) value {
  hasIncome_ = !!value;
}
@synthesize income;
- (BOOL) hasMinutesToGain {
  return !!hasMinutesToGain_;
}
- (void) setHasMinutesToGain:(BOOL) value {
  hasMinutesToGain_ = !!value;
}
@synthesize minutesToGain;
- (BOOL) hasMinutesToBuild {
  return !!hasMinutesToBuild_;
}
- (void) setHasMinutesToBuild:(BOOL) value {
  hasMinutesToBuild_ = !!value;
}
@synthesize minutesToBuild;
- (BOOL) hasMinutesToUpgradeBase {
  return !!hasMinutesToUpgradeBase_;
}
- (void) setHasMinutesToUpgradeBase:(BOOL) value {
  hasMinutesToUpgradeBase_ = !!value;
}
@synthesize minutesToUpgradeBase;
- (BOOL) hasCoinPrice {
  return !!hasCoinPrice_;
}
- (void) setHasCoinPrice:(BOOL) value {
  hasCoinPrice_ = !!value;
}
@synthesize coinPrice;
- (BOOL) hasDiamondPrice {
  return !!hasDiamondPrice_;
}
- (void) setHasDiamondPrice:(BOOL) value {
  hasDiamondPrice_ = !!value;
}
@synthesize diamondPrice;
- (BOOL) hasMinLevel {
  return !!hasMinLevel_;
}
- (void) setHasMinLevel:(BOOL) value {
  hasMinLevel_ = !!value;
}
@synthesize minLevel;
- (BOOL) hasXLength {
  return !!hasXLength_;
}
- (void) setHasXLength:(BOOL) value {
  hasXLength_ = !!value;
}
@synthesize xLength;
- (BOOL) hasYLength {
  return !!hasYLength_;
}
- (void) setHasYLength:(BOOL) value {
  hasYLength_ = !!value;
}
@synthesize yLength;
- (BOOL) hasUpgradeCoinCostBase {
  return !!hasUpgradeCoinCostBase_;
}
- (void) setHasUpgradeCoinCostBase:(BOOL) value {
  hasUpgradeCoinCostBase_ = !!value;
}
@synthesize upgradeCoinCostBase;
- (BOOL) hasUpgradeDiamondCostBase {
  return !!hasUpgradeDiamondCostBase_;
}
- (void) setHasUpgradeDiamondCostBase:(BOOL) value {
  hasUpgradeDiamondCostBase_ = !!value;
}
@synthesize upgradeDiamondCostBase;
- (BOOL) hasInstaBuildDiamondCostBase {
  return !!hasInstaBuildDiamondCostBase_;
}
- (void) setHasInstaBuildDiamondCostBase:(BOOL) value {
  hasInstaBuildDiamondCostBase_ = !!value;
}
@synthesize instaBuildDiamondCostBase;
- (BOOL) hasInstaRetrieveDiamondCostBase {
  return !!hasInstaRetrieveDiamondCostBase_;
}
- (void) setHasInstaRetrieveDiamondCostBase:(BOOL) value {
  hasInstaRetrieveDiamondCostBase_ = !!value;
}
@synthesize instaRetrieveDiamondCostBase;
- (BOOL) hasInstaUpgradeDiamondCostBase {
  return !!hasInstaUpgradeDiamondCostBase_;
}
- (void) setHasInstaUpgradeDiamondCostBase:(BOOL) value {
  hasInstaUpgradeDiamondCostBase_ = !!value;
}
@synthesize instaUpgradeDiamondCostBase;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.structId = 0;
    self.name = @"";
    self.income = 0;
    self.minutesToGain = 0;
    self.minutesToBuild = 0;
    self.minutesToUpgradeBase = 0;
    self.coinPrice = 0;
    self.diamondPrice = 0;
    self.minLevel = 0;
    self.xLength = 0;
    self.yLength = 0;
    self.upgradeCoinCostBase = 0;
    self.upgradeDiamondCostBase = 0;
    self.instaBuildDiamondCostBase = 0;
    self.instaRetrieveDiamondCostBase = 0;
    self.instaUpgradeDiamondCostBase = 0;
  }
  return self;
}
static FullStructureProto* defaultFullStructureProtoInstance = nil;
+ (void) initialize {
  if (self == [FullStructureProto class]) {
    defaultFullStructureProtoInstance = [[FullStructureProto alloc] init];
  }
}
+ (FullStructureProto*) defaultInstance {
  return defaultFullStructureProtoInstance;
}
- (FullStructureProto*) defaultInstance {
  return defaultFullStructureProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStructId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasIncome) {
    return NO;
  }
  if (!self.hasMinutesToGain) {
    return NO;
  }
  if (!self.hasMinutesToBuild) {
    return NO;
  }
  if (!self.hasMinutesToUpgradeBase) {
    return NO;
  }
  if (!self.hasCoinPrice) {
    return NO;
  }
  if (!self.hasDiamondPrice) {
    return NO;
  }
  if (!self.hasMinLevel) {
    return NO;
  }
  if (!self.hasXLength) {
    return NO;
  }
  if (!self.hasYLength) {
    return NO;
  }
  if (!self.hasUpgradeCoinCostBase) {
    return NO;
  }
  if (!self.hasUpgradeDiamondCostBase) {
    return NO;
  }
  if (!self.hasInstaBuildDiamondCostBase) {
    return NO;
  }
  if (!self.hasInstaRetrieveDiamondCostBase) {
    return NO;
  }
  if (!self.hasInstaUpgradeDiamondCostBase) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStructId) {
    [output writeInt32:1 value:self.structId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasIncome) {
    [output writeInt32:3 value:self.income];
  }
  if (self.hasMinutesToGain) {
    [output writeInt32:4 value:self.minutesToGain];
  }
  if (self.hasMinutesToBuild) {
    [output writeInt32:5 value:self.minutesToBuild];
  }
  if (self.hasMinutesToUpgradeBase) {
    [output writeInt32:6 value:self.minutesToUpgradeBase];
  }
  if (self.hasCoinPrice) {
    [output writeInt32:7 value:self.coinPrice];
  }
  if (self.hasDiamondPrice) {
    [output writeInt32:8 value:self.diamondPrice];
  }
  if (self.hasMinLevel) {
    [output writeInt32:9 value:self.minLevel];
  }
  if (self.hasXLength) {
    [output writeInt32:10 value:self.xLength];
  }
  if (self.hasYLength) {
    [output writeInt32:11 value:self.yLength];
  }
  if (self.hasUpgradeCoinCostBase) {
    [output writeInt32:12 value:self.upgradeCoinCostBase];
  }
  if (self.hasUpgradeDiamondCostBase) {
    [output writeInt32:13 value:self.upgradeDiamondCostBase];
  }
  if (self.hasInstaBuildDiamondCostBase) {
    [output writeInt32:14 value:self.instaBuildDiamondCostBase];
  }
  if (self.hasInstaRetrieveDiamondCostBase) {
    [output writeInt32:15 value:self.instaRetrieveDiamondCostBase];
  }
  if (self.hasInstaUpgradeDiamondCostBase) {
    [output writeInt32:16 value:self.instaUpgradeDiamondCostBase];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStructId) {
    size += computeInt32Size(1, self.structId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasIncome) {
    size += computeInt32Size(3, self.income);
  }
  if (self.hasMinutesToGain) {
    size += computeInt32Size(4, self.minutesToGain);
  }
  if (self.hasMinutesToBuild) {
    size += computeInt32Size(5, self.minutesToBuild);
  }
  if (self.hasMinutesToUpgradeBase) {
    size += computeInt32Size(6, self.minutesToUpgradeBase);
  }
  if (self.hasCoinPrice) {
    size += computeInt32Size(7, self.coinPrice);
  }
  if (self.hasDiamondPrice) {
    size += computeInt32Size(8, self.diamondPrice);
  }
  if (self.hasMinLevel) {
    size += computeInt32Size(9, self.minLevel);
  }
  if (self.hasXLength) {
    size += computeInt32Size(10, self.xLength);
  }
  if (self.hasYLength) {
    size += computeInt32Size(11, self.yLength);
  }
  if (self.hasUpgradeCoinCostBase) {
    size += computeInt32Size(12, self.upgradeCoinCostBase);
  }
  if (self.hasUpgradeDiamondCostBase) {
    size += computeInt32Size(13, self.upgradeDiamondCostBase);
  }
  if (self.hasInstaBuildDiamondCostBase) {
    size += computeInt32Size(14, self.instaBuildDiamondCostBase);
  }
  if (self.hasInstaRetrieveDiamondCostBase) {
    size += computeInt32Size(15, self.instaRetrieveDiamondCostBase);
  }
  if (self.hasInstaUpgradeDiamondCostBase) {
    size += computeInt32Size(16, self.instaUpgradeDiamondCostBase);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullStructureProto*) parseFromData:(NSData*) data {
  return (FullStructureProto*)[[[FullStructureProto builder] mergeFromData:data] build];
}
+ (FullStructureProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullStructureProto*)[[[FullStructureProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullStructureProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullStructureProto*)[[[FullStructureProto builder] mergeFromInputStream:input] build];
}
+ (FullStructureProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullStructureProto*)[[[FullStructureProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullStructureProto*)[[[FullStructureProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullStructureProto*)[[[FullStructureProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullStructureProto_Builder*) builder {
  return [[[FullStructureProto_Builder alloc] init] autorelease];
}
+ (FullStructureProto_Builder*) builderWithPrototype:(FullStructureProto*) prototype {
  return [[FullStructureProto builder] mergeFrom:prototype];
}
- (FullStructureProto_Builder*) builder {
  return [FullStructureProto builder];
}
@end

@interface FullStructureProto_Builder()
@property (retain) FullStructureProto* result;
@end

@implementation FullStructureProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullStructureProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullStructureProto_Builder*) clear {
  self.result = [[[FullStructureProto alloc] init] autorelease];
  return self;
}
- (FullStructureProto_Builder*) clone {
  return [FullStructureProto builderWithPrototype:result];
}
- (FullStructureProto*) defaultInstance {
  return [FullStructureProto defaultInstance];
}
- (FullStructureProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullStructureProto*) buildPartial {
  FullStructureProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullStructureProto_Builder*) mergeFrom:(FullStructureProto*) other {
  if (other == [FullStructureProto defaultInstance]) {
    return self;
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasIncome) {
    [self setIncome:other.income];
  }
  if (other.hasMinutesToGain) {
    [self setMinutesToGain:other.minutesToGain];
  }
  if (other.hasMinutesToBuild) {
    [self setMinutesToBuild:other.minutesToBuild];
  }
  if (other.hasMinutesToUpgradeBase) {
    [self setMinutesToUpgradeBase:other.minutesToUpgradeBase];
  }
  if (other.hasCoinPrice) {
    [self setCoinPrice:other.coinPrice];
  }
  if (other.hasDiamondPrice) {
    [self setDiamondPrice:other.diamondPrice];
  }
  if (other.hasMinLevel) {
    [self setMinLevel:other.minLevel];
  }
  if (other.hasXLength) {
    [self setXLength:other.xLength];
  }
  if (other.hasYLength) {
    [self setYLength:other.yLength];
  }
  if (other.hasUpgradeCoinCostBase) {
    [self setUpgradeCoinCostBase:other.upgradeCoinCostBase];
  }
  if (other.hasUpgradeDiamondCostBase) {
    [self setUpgradeDiamondCostBase:other.upgradeDiamondCostBase];
  }
  if (other.hasInstaBuildDiamondCostBase) {
    [self setInstaBuildDiamondCostBase:other.instaBuildDiamondCostBase];
  }
  if (other.hasInstaRetrieveDiamondCostBase) {
    [self setInstaRetrieveDiamondCostBase:other.instaRetrieveDiamondCostBase];
  }
  if (other.hasInstaUpgradeDiamondCostBase) {
    [self setInstaUpgradeDiamondCostBase:other.instaUpgradeDiamondCostBase];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setIncome:[input readInt32]];
        break;
      }
      case 32: {
        [self setMinutesToGain:[input readInt32]];
        break;
      }
      case 40: {
        [self setMinutesToBuild:[input readInt32]];
        break;
      }
      case 48: {
        [self setMinutesToUpgradeBase:[input readInt32]];
        break;
      }
      case 56: {
        [self setCoinPrice:[input readInt32]];
        break;
      }
      case 64: {
        [self setDiamondPrice:[input readInt32]];
        break;
      }
      case 72: {
        [self setMinLevel:[input readInt32]];
        break;
      }
      case 80: {
        [self setXLength:[input readInt32]];
        break;
      }
      case 88: {
        [self setYLength:[input readInt32]];
        break;
      }
      case 96: {
        [self setUpgradeCoinCostBase:[input readInt32]];
        break;
      }
      case 104: {
        [self setUpgradeDiamondCostBase:[input readInt32]];
        break;
      }
      case 112: {
        [self setInstaBuildDiamondCostBase:[input readInt32]];
        break;
      }
      case 120: {
        [self setInstaRetrieveDiamondCostBase:[input readInt32]];
        break;
      }
      case 128: {
        [self setInstaUpgradeDiamondCostBase:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (FullStructureProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (FullStructureProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullStructureProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullStructureProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasIncome {
  return result.hasIncome;
}
- (int32_t) income {
  return result.income;
}
- (FullStructureProto_Builder*) setIncome:(int32_t) value {
  result.hasIncome = YES;
  result.income = value;
  return self;
}
- (FullStructureProto_Builder*) clearIncome {
  result.hasIncome = NO;
  result.income = 0;
  return self;
}
- (BOOL) hasMinutesToGain {
  return result.hasMinutesToGain;
}
- (int32_t) minutesToGain {
  return result.minutesToGain;
}
- (FullStructureProto_Builder*) setMinutesToGain:(int32_t) value {
  result.hasMinutesToGain = YES;
  result.minutesToGain = value;
  return self;
}
- (FullStructureProto_Builder*) clearMinutesToGain {
  result.hasMinutesToGain = NO;
  result.minutesToGain = 0;
  return self;
}
- (BOOL) hasMinutesToBuild {
  return result.hasMinutesToBuild;
}
- (int32_t) minutesToBuild {
  return result.minutesToBuild;
}
- (FullStructureProto_Builder*) setMinutesToBuild:(int32_t) value {
  result.hasMinutesToBuild = YES;
  result.minutesToBuild = value;
  return self;
}
- (FullStructureProto_Builder*) clearMinutesToBuild {
  result.hasMinutesToBuild = NO;
  result.minutesToBuild = 0;
  return self;
}
- (BOOL) hasMinutesToUpgradeBase {
  return result.hasMinutesToUpgradeBase;
}
- (int32_t) minutesToUpgradeBase {
  return result.minutesToUpgradeBase;
}
- (FullStructureProto_Builder*) setMinutesToUpgradeBase:(int32_t) value {
  result.hasMinutesToUpgradeBase = YES;
  result.minutesToUpgradeBase = value;
  return self;
}
- (FullStructureProto_Builder*) clearMinutesToUpgradeBase {
  result.hasMinutesToUpgradeBase = NO;
  result.minutesToUpgradeBase = 0;
  return self;
}
- (BOOL) hasCoinPrice {
  return result.hasCoinPrice;
}
- (int32_t) coinPrice {
  return result.coinPrice;
}
- (FullStructureProto_Builder*) setCoinPrice:(int32_t) value {
  result.hasCoinPrice = YES;
  result.coinPrice = value;
  return self;
}
- (FullStructureProto_Builder*) clearCoinPrice {
  result.hasCoinPrice = NO;
  result.coinPrice = 0;
  return self;
}
- (BOOL) hasDiamondPrice {
  return result.hasDiamondPrice;
}
- (int32_t) diamondPrice {
  return result.diamondPrice;
}
- (FullStructureProto_Builder*) setDiamondPrice:(int32_t) value {
  result.hasDiamondPrice = YES;
  result.diamondPrice = value;
  return self;
}
- (FullStructureProto_Builder*) clearDiamondPrice {
  result.hasDiamondPrice = NO;
  result.diamondPrice = 0;
  return self;
}
- (BOOL) hasMinLevel {
  return result.hasMinLevel;
}
- (int32_t) minLevel {
  return result.minLevel;
}
- (FullStructureProto_Builder*) setMinLevel:(int32_t) value {
  result.hasMinLevel = YES;
  result.minLevel = value;
  return self;
}
- (FullStructureProto_Builder*) clearMinLevel {
  result.hasMinLevel = NO;
  result.minLevel = 0;
  return self;
}
- (BOOL) hasXLength {
  return result.hasXLength;
}
- (int32_t) xLength {
  return result.xLength;
}
- (FullStructureProto_Builder*) setXLength:(int32_t) value {
  result.hasXLength = YES;
  result.xLength = value;
  return self;
}
- (FullStructureProto_Builder*) clearXLength {
  result.hasXLength = NO;
  result.xLength = 0;
  return self;
}
- (BOOL) hasYLength {
  return result.hasYLength;
}
- (int32_t) yLength {
  return result.yLength;
}
- (FullStructureProto_Builder*) setYLength:(int32_t) value {
  result.hasYLength = YES;
  result.yLength = value;
  return self;
}
- (FullStructureProto_Builder*) clearYLength {
  result.hasYLength = NO;
  result.yLength = 0;
  return self;
}
- (BOOL) hasUpgradeCoinCostBase {
  return result.hasUpgradeCoinCostBase;
}
- (int32_t) upgradeCoinCostBase {
  return result.upgradeCoinCostBase;
}
- (FullStructureProto_Builder*) setUpgradeCoinCostBase:(int32_t) value {
  result.hasUpgradeCoinCostBase = YES;
  result.upgradeCoinCostBase = value;
  return self;
}
- (FullStructureProto_Builder*) clearUpgradeCoinCostBase {
  result.hasUpgradeCoinCostBase = NO;
  result.upgradeCoinCostBase = 0;
  return self;
}
- (BOOL) hasUpgradeDiamondCostBase {
  return result.hasUpgradeDiamondCostBase;
}
- (int32_t) upgradeDiamondCostBase {
  return result.upgradeDiamondCostBase;
}
- (FullStructureProto_Builder*) setUpgradeDiamondCostBase:(int32_t) value {
  result.hasUpgradeDiamondCostBase = YES;
  result.upgradeDiamondCostBase = value;
  return self;
}
- (FullStructureProto_Builder*) clearUpgradeDiamondCostBase {
  result.hasUpgradeDiamondCostBase = NO;
  result.upgradeDiamondCostBase = 0;
  return self;
}
- (BOOL) hasInstaBuildDiamondCostBase {
  return result.hasInstaBuildDiamondCostBase;
}
- (int32_t) instaBuildDiamondCostBase {
  return result.instaBuildDiamondCostBase;
}
- (FullStructureProto_Builder*) setInstaBuildDiamondCostBase:(int32_t) value {
  result.hasInstaBuildDiamondCostBase = YES;
  result.instaBuildDiamondCostBase = value;
  return self;
}
- (FullStructureProto_Builder*) clearInstaBuildDiamondCostBase {
  result.hasInstaBuildDiamondCostBase = NO;
  result.instaBuildDiamondCostBase = 0;
  return self;
}
- (BOOL) hasInstaRetrieveDiamondCostBase {
  return result.hasInstaRetrieveDiamondCostBase;
}
- (int32_t) instaRetrieveDiamondCostBase {
  return result.instaRetrieveDiamondCostBase;
}
- (FullStructureProto_Builder*) setInstaRetrieveDiamondCostBase:(int32_t) value {
  result.hasInstaRetrieveDiamondCostBase = YES;
  result.instaRetrieveDiamondCostBase = value;
  return self;
}
- (FullStructureProto_Builder*) clearInstaRetrieveDiamondCostBase {
  result.hasInstaRetrieveDiamondCostBase = NO;
  result.instaRetrieveDiamondCostBase = 0;
  return self;
}
- (BOOL) hasInstaUpgradeDiamondCostBase {
  return result.hasInstaUpgradeDiamondCostBase;
}
- (int32_t) instaUpgradeDiamondCostBase {
  return result.instaUpgradeDiamondCostBase;
}
- (FullStructureProto_Builder*) setInstaUpgradeDiamondCostBase:(int32_t) value {
  result.hasInstaUpgradeDiamondCostBase = YES;
  result.instaUpgradeDiamondCostBase = value;
  return self;
}
- (FullStructureProto_Builder*) clearInstaUpgradeDiamondCostBase {
  result.hasInstaUpgradeDiamondCostBase = NO;
  result.instaUpgradeDiamondCostBase = 0;
  return self;
}
@end

@interface FullTaskProto ()
@property int32_t taskId;
@property (retain) NSString* name;
@property int32_t cityId;
@property int32_t numRequiredForCompletion;
@property int32_t energyCost;
@property int32_t minCoinsGained;
@property int32_t maxCoinsGained;
@property Float32 chanceOfEquipLoot;
@property (retain) NSMutableArray* mutablePotentialLootEquipIdsList;
@property int32_t expGained;
@property int32_t assetNumWithinCity;
@property (retain) NSMutableArray* mutableEquipReqsList;
@end

@implementation FullTaskProto

- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasNumRequiredForCompletion {
  return !!hasNumRequiredForCompletion_;
}
- (void) setHasNumRequiredForCompletion:(BOOL) value {
  hasNumRequiredForCompletion_ = !!value;
}
@synthesize numRequiredForCompletion;
- (BOOL) hasEnergyCost {
  return !!hasEnergyCost_;
}
- (void) setHasEnergyCost:(BOOL) value {
  hasEnergyCost_ = !!value;
}
@synthesize energyCost;
- (BOOL) hasMinCoinsGained {
  return !!hasMinCoinsGained_;
}
- (void) setHasMinCoinsGained:(BOOL) value {
  hasMinCoinsGained_ = !!value;
}
@synthesize minCoinsGained;
- (BOOL) hasMaxCoinsGained {
  return !!hasMaxCoinsGained_;
}
- (void) setHasMaxCoinsGained:(BOOL) value {
  hasMaxCoinsGained_ = !!value;
}
@synthesize maxCoinsGained;
- (BOOL) hasChanceOfEquipLoot {
  return !!hasChanceOfEquipLoot_;
}
- (void) setHasChanceOfEquipLoot:(BOOL) value {
  hasChanceOfEquipLoot_ = !!value;
}
@synthesize chanceOfEquipLoot;
@synthesize mutablePotentialLootEquipIdsList;
- (BOOL) hasExpGained {
  return !!hasExpGained_;
}
- (void) setHasExpGained:(BOOL) value {
  hasExpGained_ = !!value;
}
@synthesize expGained;
- (BOOL) hasAssetNumWithinCity {
  return !!hasAssetNumWithinCity_;
}
- (void) setHasAssetNumWithinCity:(BOOL) value {
  hasAssetNumWithinCity_ = !!value;
}
@synthesize assetNumWithinCity;
@synthesize mutableEquipReqsList;
- (void) dealloc {
  self.name = nil;
  self.mutablePotentialLootEquipIdsList = nil;
  self.mutableEquipReqsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.taskId = 0;
    self.name = @"";
    self.cityId = 0;
    self.numRequiredForCompletion = 0;
    self.energyCost = 0;
    self.minCoinsGained = 0;
    self.maxCoinsGained = 0;
    self.chanceOfEquipLoot = 0;
    self.expGained = 0;
    self.assetNumWithinCity = 0;
  }
  return self;
}
static FullTaskProto* defaultFullTaskProtoInstance = nil;
+ (void) initialize {
  if (self == [FullTaskProto class]) {
    defaultFullTaskProtoInstance = [[FullTaskProto alloc] init];
  }
}
+ (FullTaskProto*) defaultInstance {
  return defaultFullTaskProtoInstance;
}
- (FullTaskProto*) defaultInstance {
  return defaultFullTaskProtoInstance;
}
- (NSArray*) potentialLootEquipIdsList {
  return mutablePotentialLootEquipIdsList;
}
- (int32_t) potentialLootEquipIdsAtIndex:(int32_t) index {
  id value = [mutablePotentialLootEquipIdsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) equipReqsList {
  return mutableEquipReqsList;
}
- (FullTaskProto_FullTaskEquipReqProto*) equipReqsAtIndex:(int32_t) index {
  id value = [mutableEquipReqsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasTaskId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasNumRequiredForCompletion) {
    return NO;
  }
  if (!self.hasEnergyCost) {
    return NO;
  }
  if (!self.hasMinCoinsGained) {
    return NO;
  }
  if (!self.hasMaxCoinsGained) {
    return NO;
  }
  if (!self.hasChanceOfEquipLoot) {
    return NO;
  }
  if (!self.hasExpGained) {
    return NO;
  }
  if (!self.hasAssetNumWithinCity) {
    return NO;
  }
  for (FullTaskProto_FullTaskEquipReqProto* element in self.equipReqsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTaskId) {
    [output writeInt32:1 value:self.taskId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCityId) {
    [output writeInt32:3 value:self.cityId];
  }
  if (self.hasNumRequiredForCompletion) {
    [output writeInt32:4 value:self.numRequiredForCompletion];
  }
  if (self.hasEnergyCost) {
    [output writeInt32:5 value:self.energyCost];
  }
  if (self.hasMinCoinsGained) {
    [output writeInt32:6 value:self.minCoinsGained];
  }
  if (self.hasMaxCoinsGained) {
    [output writeInt32:7 value:self.maxCoinsGained];
  }
  if (self.hasChanceOfEquipLoot) {
    [output writeFloat:8 value:self.chanceOfEquipLoot];
  }
  for (NSNumber* value in self.mutablePotentialLootEquipIdsList) {
    [output writeInt32:9 value:[value intValue]];
  }
  if (self.hasExpGained) {
    [output writeInt32:10 value:self.expGained];
  }
  if (self.hasAssetNumWithinCity) {
    [output writeInt32:11 value:self.assetNumWithinCity];
  }
  for (FullTaskProto_FullTaskEquipReqProto* element in self.equipReqsList) {
    [output writeMessage:12 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTaskId) {
    size += computeInt32Size(1, self.taskId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasCityId) {
    size += computeInt32Size(3, self.cityId);
  }
  if (self.hasNumRequiredForCompletion) {
    size += computeInt32Size(4, self.numRequiredForCompletion);
  }
  if (self.hasEnergyCost) {
    size += computeInt32Size(5, self.energyCost);
  }
  if (self.hasMinCoinsGained) {
    size += computeInt32Size(6, self.minCoinsGained);
  }
  if (self.hasMaxCoinsGained) {
    size += computeInt32Size(7, self.maxCoinsGained);
  }
  if (self.hasChanceOfEquipLoot) {
    size += computeFloatSize(8, self.chanceOfEquipLoot);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutablePotentialLootEquipIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutablePotentialLootEquipIdsList.count;
  }
  if (self.hasExpGained) {
    size += computeInt32Size(10, self.expGained);
  }
  if (self.hasAssetNumWithinCity) {
    size += computeInt32Size(11, self.assetNumWithinCity);
  }
  for (FullTaskProto_FullTaskEquipReqProto* element in self.equipReqsList) {
    size += computeMessageSize(12, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullTaskProto*) parseFromData:(NSData*) data {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromData:data] build];
}
+ (FullTaskProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromInputStream:input] build];
}
+ (FullTaskProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto_Builder*) builder {
  return [[[FullTaskProto_Builder alloc] init] autorelease];
}
+ (FullTaskProto_Builder*) builderWithPrototype:(FullTaskProto*) prototype {
  return [[FullTaskProto builder] mergeFrom:prototype];
}
- (FullTaskProto_Builder*) builder {
  return [FullTaskProto builder];
}
@end

@interface FullTaskProto_FullTaskEquipReqProto ()
@property int32_t taskId;
@property int32_t equipId;
@property int32_t quantity;
@end

@implementation FullTaskProto_FullTaskEquipReqProto

- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasEquipId {
  return !!hasEquipId_;
}
- (void) setHasEquipId:(BOOL) value {
  hasEquipId_ = !!value;
}
@synthesize equipId;
- (BOOL) hasQuantity {
  return !!hasQuantity_;
}
- (void) setHasQuantity:(BOOL) value {
  hasQuantity_ = !!value;
}
@synthesize quantity;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.taskId = 0;
    self.equipId = 0;
    self.quantity = 0;
  }
  return self;
}
static FullTaskProto_FullTaskEquipReqProto* defaultFullTaskProto_FullTaskEquipReqProtoInstance = nil;
+ (void) initialize {
  if (self == [FullTaskProto_FullTaskEquipReqProto class]) {
    defaultFullTaskProto_FullTaskEquipReqProtoInstance = [[FullTaskProto_FullTaskEquipReqProto alloc] init];
  }
}
+ (FullTaskProto_FullTaskEquipReqProto*) defaultInstance {
  return defaultFullTaskProto_FullTaskEquipReqProtoInstance;
}
- (FullTaskProto_FullTaskEquipReqProto*) defaultInstance {
  return defaultFullTaskProto_FullTaskEquipReqProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTaskId) {
    return NO;
  }
  if (!self.hasEquipId) {
    return NO;
  }
  if (!self.hasQuantity) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTaskId) {
    [output writeInt32:1 value:self.taskId];
  }
  if (self.hasEquipId) {
    [output writeInt32:2 value:self.equipId];
  }
  if (self.hasQuantity) {
    [output writeInt32:3 value:self.quantity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTaskId) {
    size += computeInt32Size(1, self.taskId);
  }
  if (self.hasEquipId) {
    size += computeInt32Size(2, self.equipId);
  }
  if (self.hasQuantity) {
    size += computeInt32Size(3, self.quantity);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullTaskProto_FullTaskEquipReqProto*) parseFromData:(NSData*) data {
  return (FullTaskProto_FullTaskEquipReqProto*)[[[FullTaskProto_FullTaskEquipReqProto builder] mergeFromData:data] build];
}
+ (FullTaskProto_FullTaskEquipReqProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto_FullTaskEquipReqProto*)[[[FullTaskProto_FullTaskEquipReqProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto_FullTaskEquipReqProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullTaskProto_FullTaskEquipReqProto*)[[[FullTaskProto_FullTaskEquipReqProto builder] mergeFromInputStream:input] build];
}
+ (FullTaskProto_FullTaskEquipReqProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto_FullTaskEquipReqProto*)[[[FullTaskProto_FullTaskEquipReqProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto_FullTaskEquipReqProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullTaskProto_FullTaskEquipReqProto*)[[[FullTaskProto_FullTaskEquipReqProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullTaskProto_FullTaskEquipReqProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto_FullTaskEquipReqProto*)[[[FullTaskProto_FullTaskEquipReqProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto_FullTaskEquipReqProto_Builder*) builder {
  return [[[FullTaskProto_FullTaskEquipReqProto_Builder alloc] init] autorelease];
}
+ (FullTaskProto_FullTaskEquipReqProto_Builder*) builderWithPrototype:(FullTaskProto_FullTaskEquipReqProto*) prototype {
  return [[FullTaskProto_FullTaskEquipReqProto builder] mergeFrom:prototype];
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) builder {
  return [FullTaskProto_FullTaskEquipReqProto builder];
}
@end

@interface FullTaskProto_FullTaskEquipReqProto_Builder()
@property (retain) FullTaskProto_FullTaskEquipReqProto* result;
@end

@implementation FullTaskProto_FullTaskEquipReqProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullTaskProto_FullTaskEquipReqProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) clear {
  self.result = [[[FullTaskProto_FullTaskEquipReqProto alloc] init] autorelease];
  return self;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) clone {
  return [FullTaskProto_FullTaskEquipReqProto builderWithPrototype:result];
}
- (FullTaskProto_FullTaskEquipReqProto*) defaultInstance {
  return [FullTaskProto_FullTaskEquipReqProto defaultInstance];
}
- (FullTaskProto_FullTaskEquipReqProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullTaskProto_FullTaskEquipReqProto*) buildPartial {
  FullTaskProto_FullTaskEquipReqProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) mergeFrom:(FullTaskProto_FullTaskEquipReqProto*) other {
  if (other == [FullTaskProto_FullTaskEquipReqProto defaultInstance]) {
    return self;
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasEquipId) {
    [self setEquipId:other.equipId];
  }
  if (other.hasQuantity) {
    [self setQuantity:other.quantity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 16: {
        [self setEquipId:[input readInt32]];
        break;
      }
      case 24: {
        [self setQuantity:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasEquipId {
  return result.hasEquipId;
}
- (int32_t) equipId {
  return result.equipId;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) setEquipId:(int32_t) value {
  result.hasEquipId = YES;
  result.equipId = value;
  return self;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) clearEquipId {
  result.hasEquipId = NO;
  result.equipId = 0;
  return self;
}
- (BOOL) hasQuantity {
  return result.hasQuantity;
}
- (int32_t) quantity {
  return result.quantity;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) setQuantity:(int32_t) value {
  result.hasQuantity = YES;
  result.quantity = value;
  return self;
}
- (FullTaskProto_FullTaskEquipReqProto_Builder*) clearQuantity {
  result.hasQuantity = NO;
  result.quantity = 0;
  return self;
}
@end

@interface FullTaskProto_Builder()
@property (retain) FullTaskProto* result;
@end

@implementation FullTaskProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullTaskProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullTaskProto_Builder*) clear {
  self.result = [[[FullTaskProto alloc] init] autorelease];
  return self;
}
- (FullTaskProto_Builder*) clone {
  return [FullTaskProto builderWithPrototype:result];
}
- (FullTaskProto*) defaultInstance {
  return [FullTaskProto defaultInstance];
}
- (FullTaskProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullTaskProto*) buildPartial {
  FullTaskProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullTaskProto_Builder*) mergeFrom:(FullTaskProto*) other {
  if (other == [FullTaskProto defaultInstance]) {
    return self;
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasNumRequiredForCompletion) {
    [self setNumRequiredForCompletion:other.numRequiredForCompletion];
  }
  if (other.hasEnergyCost) {
    [self setEnergyCost:other.energyCost];
  }
  if (other.hasMinCoinsGained) {
    [self setMinCoinsGained:other.minCoinsGained];
  }
  if (other.hasMaxCoinsGained) {
    [self setMaxCoinsGained:other.maxCoinsGained];
  }
  if (other.hasChanceOfEquipLoot) {
    [self setChanceOfEquipLoot:other.chanceOfEquipLoot];
  }
  if (other.mutablePotentialLootEquipIdsList.count > 0) {
    if (result.mutablePotentialLootEquipIdsList == nil) {
      result.mutablePotentialLootEquipIdsList = [NSMutableArray array];
    }
    [result.mutablePotentialLootEquipIdsList addObjectsFromArray:other.mutablePotentialLootEquipIdsList];
  }
  if (other.hasExpGained) {
    [self setExpGained:other.expGained];
  }
  if (other.hasAssetNumWithinCity) {
    [self setAssetNumWithinCity:other.assetNumWithinCity];
  }
  if (other.mutableEquipReqsList.count > 0) {
    if (result.mutableEquipReqsList == nil) {
      result.mutableEquipReqsList = [NSMutableArray array];
    }
    [result.mutableEquipReqsList addObjectsFromArray:other.mutableEquipReqsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumRequiredForCompletion:[input readInt32]];
        break;
      }
      case 40: {
        [self setEnergyCost:[input readInt32]];
        break;
      }
      case 48: {
        [self setMinCoinsGained:[input readInt32]];
        break;
      }
      case 56: {
        [self setMaxCoinsGained:[input readInt32]];
        break;
      }
      case 69: {
        [self setChanceOfEquipLoot:[input readFloat]];
        break;
      }
      case 72: {
        [self addPotentialLootEquipIds:[input readInt32]];
        break;
      }
      case 80: {
        [self setExpGained:[input readInt32]];
        break;
      }
      case 88: {
        [self setAssetNumWithinCity:[input readInt32]];
        break;
      }
      case 98: {
        FullTaskProto_FullTaskEquipReqProto_Builder* subBuilder = [FullTaskProto_FullTaskEquipReqProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEquipReqs:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (FullTaskProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (FullTaskProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullTaskProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullTaskProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (FullTaskProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (FullTaskProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasNumRequiredForCompletion {
  return result.hasNumRequiredForCompletion;
}
- (int32_t) numRequiredForCompletion {
  return result.numRequiredForCompletion;
}
- (FullTaskProto_Builder*) setNumRequiredForCompletion:(int32_t) value {
  result.hasNumRequiredForCompletion = YES;
  result.numRequiredForCompletion = value;
  return self;
}
- (FullTaskProto_Builder*) clearNumRequiredForCompletion {
  result.hasNumRequiredForCompletion = NO;
  result.numRequiredForCompletion = 0;
  return self;
}
- (BOOL) hasEnergyCost {
  return result.hasEnergyCost;
}
- (int32_t) energyCost {
  return result.energyCost;
}
- (FullTaskProto_Builder*) setEnergyCost:(int32_t) value {
  result.hasEnergyCost = YES;
  result.energyCost = value;
  return self;
}
- (FullTaskProto_Builder*) clearEnergyCost {
  result.hasEnergyCost = NO;
  result.energyCost = 0;
  return self;
}
- (BOOL) hasMinCoinsGained {
  return result.hasMinCoinsGained;
}
- (int32_t) minCoinsGained {
  return result.minCoinsGained;
}
- (FullTaskProto_Builder*) setMinCoinsGained:(int32_t) value {
  result.hasMinCoinsGained = YES;
  result.minCoinsGained = value;
  return self;
}
- (FullTaskProto_Builder*) clearMinCoinsGained {
  result.hasMinCoinsGained = NO;
  result.minCoinsGained = 0;
  return self;
}
- (BOOL) hasMaxCoinsGained {
  return result.hasMaxCoinsGained;
}
- (int32_t) maxCoinsGained {
  return result.maxCoinsGained;
}
- (FullTaskProto_Builder*) setMaxCoinsGained:(int32_t) value {
  result.hasMaxCoinsGained = YES;
  result.maxCoinsGained = value;
  return self;
}
- (FullTaskProto_Builder*) clearMaxCoinsGained {
  result.hasMaxCoinsGained = NO;
  result.maxCoinsGained = 0;
  return self;
}
- (BOOL) hasChanceOfEquipLoot {
  return result.hasChanceOfEquipLoot;
}
- (Float32) chanceOfEquipLoot {
  return result.chanceOfEquipLoot;
}
- (FullTaskProto_Builder*) setChanceOfEquipLoot:(Float32) value {
  result.hasChanceOfEquipLoot = YES;
  result.chanceOfEquipLoot = value;
  return self;
}
- (FullTaskProto_Builder*) clearChanceOfEquipLoot {
  result.hasChanceOfEquipLoot = NO;
  result.chanceOfEquipLoot = 0;
  return self;
}
- (NSArray*) potentialLootEquipIdsList {
  if (result.mutablePotentialLootEquipIdsList == nil) {
    return [NSArray array];
  }
  return result.mutablePotentialLootEquipIdsList;
}
- (int32_t) potentialLootEquipIdsAtIndex:(int32_t) index {
  return [result potentialLootEquipIdsAtIndex:index];
}
- (FullTaskProto_Builder*) replacePotentialLootEquipIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutablePotentialLootEquipIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullTaskProto_Builder*) addPotentialLootEquipIds:(int32_t) value {
  if (result.mutablePotentialLootEquipIdsList == nil) {
    result.mutablePotentialLootEquipIdsList = [NSMutableArray array];
  }
  [result.mutablePotentialLootEquipIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullTaskProto_Builder*) addAllPotentialLootEquipIds:(NSArray*) values {
  if (result.mutablePotentialLootEquipIdsList == nil) {
    result.mutablePotentialLootEquipIdsList = [NSMutableArray array];
  }
  [result.mutablePotentialLootEquipIdsList addObjectsFromArray:values];
  return self;
}
- (FullTaskProto_Builder*) clearPotentialLootEquipIdsList {
  result.mutablePotentialLootEquipIdsList = nil;
  return self;
}
- (BOOL) hasExpGained {
  return result.hasExpGained;
}
- (int32_t) expGained {
  return result.expGained;
}
- (FullTaskProto_Builder*) setExpGained:(int32_t) value {
  result.hasExpGained = YES;
  result.expGained = value;
  return self;
}
- (FullTaskProto_Builder*) clearExpGained {
  result.hasExpGained = NO;
  result.expGained = 0;
  return self;
}
- (BOOL) hasAssetNumWithinCity {
  return result.hasAssetNumWithinCity;
}
- (int32_t) assetNumWithinCity {
  return result.assetNumWithinCity;
}
- (FullTaskProto_Builder*) setAssetNumWithinCity:(int32_t) value {
  result.hasAssetNumWithinCity = YES;
  result.assetNumWithinCity = value;
  return self;
}
- (FullTaskProto_Builder*) clearAssetNumWithinCity {
  result.hasAssetNumWithinCity = NO;
  result.assetNumWithinCity = 0;
  return self;
}
- (NSArray*) equipReqsList {
  if (result.mutableEquipReqsList == nil) { return [NSArray array]; }
  return result.mutableEquipReqsList;
}
- (FullTaskProto_FullTaskEquipReqProto*) equipReqsAtIndex:(int32_t) index {
  return [result equipReqsAtIndex:index];
}
- (FullTaskProto_Builder*) replaceEquipReqsAtIndex:(int32_t) index with:(FullTaskProto_FullTaskEquipReqProto*) value {
  [result.mutableEquipReqsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FullTaskProto_Builder*) addAllEquipReqs:(NSArray*) values {
  if (result.mutableEquipReqsList == nil) {
    result.mutableEquipReqsList = [NSMutableArray array];
  }
  [result.mutableEquipReqsList addObjectsFromArray:values];
  return self;
}
- (FullTaskProto_Builder*) clearEquipReqsList {
  result.mutableEquipReqsList = nil;
  return self;
}
- (FullTaskProto_Builder*) addEquipReqs:(FullTaskProto_FullTaskEquipReqProto*) value {
  if (result.mutableEquipReqsList == nil) {
    result.mutableEquipReqsList = [NSMutableArray array];
  }
  [result.mutableEquipReqsList addObject:value];
  return self;
}
@end

@interface FullCityProto ()
@property int32_t cityId;
@property (retain) NSString* name;
@property int32_t minLevel;
@property int32_t expGainedBaseOnRankup;
@property int32_t coinsGainedBaseOnRankup;
@property (retain) NSMutableArray* mutableTaskIdsList;
@end

@implementation FullCityProto

- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasMinLevel {
  return !!hasMinLevel_;
}
- (void) setHasMinLevel:(BOOL) value {
  hasMinLevel_ = !!value;
}
@synthesize minLevel;
- (BOOL) hasExpGainedBaseOnRankup {
  return !!hasExpGainedBaseOnRankup_;
}
- (void) setHasExpGainedBaseOnRankup:(BOOL) value {
  hasExpGainedBaseOnRankup_ = !!value;
}
@synthesize expGainedBaseOnRankup;
- (BOOL) hasCoinsGainedBaseOnRankup {
  return !!hasCoinsGainedBaseOnRankup_;
}
- (void) setHasCoinsGainedBaseOnRankup:(BOOL) value {
  hasCoinsGainedBaseOnRankup_ = !!value;
}
@synthesize coinsGainedBaseOnRankup;
@synthesize mutableTaskIdsList;
- (void) dealloc {
  self.name = nil;
  self.mutableTaskIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cityId = 0;
    self.name = @"";
    self.minLevel = 0;
    self.expGainedBaseOnRankup = 0;
    self.coinsGainedBaseOnRankup = 0;
  }
  return self;
}
static FullCityProto* defaultFullCityProtoInstance = nil;
+ (void) initialize {
  if (self == [FullCityProto class]) {
    defaultFullCityProtoInstance = [[FullCityProto alloc] init];
  }
}
+ (FullCityProto*) defaultInstance {
  return defaultFullCityProtoInstance;
}
- (FullCityProto*) defaultInstance {
  return defaultFullCityProtoInstance;
}
- (NSArray*) taskIdsList {
  return mutableTaskIdsList;
}
- (int32_t) taskIdsAtIndex:(int32_t) index {
  id value = [mutableTaskIdsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasMinLevel) {
    return NO;
  }
  if (!self.hasExpGainedBaseOnRankup) {
    return NO;
  }
  if (!self.hasCoinsGainedBaseOnRankup) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCityId) {
    [output writeInt32:1 value:self.cityId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasMinLevel) {
    [output writeInt32:3 value:self.minLevel];
  }
  if (self.hasExpGainedBaseOnRankup) {
    [output writeInt32:4 value:self.expGainedBaseOnRankup];
  }
  if (self.hasCoinsGainedBaseOnRankup) {
    [output writeInt32:5 value:self.coinsGainedBaseOnRankup];
  }
  for (NSNumber* value in self.mutableTaskIdsList) {
    [output writeInt32:6 value:[value intValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCityId) {
    size += computeInt32Size(1, self.cityId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasMinLevel) {
    size += computeInt32Size(3, self.minLevel);
  }
  if (self.hasExpGainedBaseOnRankup) {
    size += computeInt32Size(4, self.expGainedBaseOnRankup);
  }
  if (self.hasCoinsGainedBaseOnRankup) {
    size += computeInt32Size(5, self.coinsGainedBaseOnRankup);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableTaskIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableTaskIdsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullCityProto*) parseFromData:(NSData*) data {
  return (FullCityProto*)[[[FullCityProto builder] mergeFromData:data] build];
}
+ (FullCityProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullCityProto*)[[[FullCityProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullCityProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullCityProto*)[[[FullCityProto builder] mergeFromInputStream:input] build];
}
+ (FullCityProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullCityProto*)[[[FullCityProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullCityProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullCityProto*)[[[FullCityProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullCityProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullCityProto*)[[[FullCityProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullCityProto_Builder*) builder {
  return [[[FullCityProto_Builder alloc] init] autorelease];
}
+ (FullCityProto_Builder*) builderWithPrototype:(FullCityProto*) prototype {
  return [[FullCityProto builder] mergeFrom:prototype];
}
- (FullCityProto_Builder*) builder {
  return [FullCityProto builder];
}
@end

@interface FullCityProto_Builder()
@property (retain) FullCityProto* result;
@end

@implementation FullCityProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullCityProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullCityProto_Builder*) clear {
  self.result = [[[FullCityProto alloc] init] autorelease];
  return self;
}
- (FullCityProto_Builder*) clone {
  return [FullCityProto builderWithPrototype:result];
}
- (FullCityProto*) defaultInstance {
  return [FullCityProto defaultInstance];
}
- (FullCityProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullCityProto*) buildPartial {
  FullCityProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullCityProto_Builder*) mergeFrom:(FullCityProto*) other {
  if (other == [FullCityProto defaultInstance]) {
    return self;
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasMinLevel) {
    [self setMinLevel:other.minLevel];
  }
  if (other.hasExpGainedBaseOnRankup) {
    [self setExpGainedBaseOnRankup:other.expGainedBaseOnRankup];
  }
  if (other.hasCoinsGainedBaseOnRankup) {
    [self setCoinsGainedBaseOnRankup:other.coinsGainedBaseOnRankup];
  }
  if (other.mutableTaskIdsList.count > 0) {
    if (result.mutableTaskIdsList == nil) {
      result.mutableTaskIdsList = [NSMutableArray array];
    }
    [result.mutableTaskIdsList addObjectsFromArray:other.mutableTaskIdsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullCityProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullCityProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setMinLevel:[input readInt32]];
        break;
      }
      case 32: {
        [self setExpGainedBaseOnRankup:[input readInt32]];
        break;
      }
      case 40: {
        [self setCoinsGainedBaseOnRankup:[input readInt32]];
        break;
      }
      case 48: {
        [self addTaskIds:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (FullCityProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (FullCityProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullCityProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullCityProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasMinLevel {
  return result.hasMinLevel;
}
- (int32_t) minLevel {
  return result.minLevel;
}
- (FullCityProto_Builder*) setMinLevel:(int32_t) value {
  result.hasMinLevel = YES;
  result.minLevel = value;
  return self;
}
- (FullCityProto_Builder*) clearMinLevel {
  result.hasMinLevel = NO;
  result.minLevel = 0;
  return self;
}
- (BOOL) hasExpGainedBaseOnRankup {
  return result.hasExpGainedBaseOnRankup;
}
- (int32_t) expGainedBaseOnRankup {
  return result.expGainedBaseOnRankup;
}
- (FullCityProto_Builder*) setExpGainedBaseOnRankup:(int32_t) value {
  result.hasExpGainedBaseOnRankup = YES;
  result.expGainedBaseOnRankup = value;
  return self;
}
- (FullCityProto_Builder*) clearExpGainedBaseOnRankup {
  result.hasExpGainedBaseOnRankup = NO;
  result.expGainedBaseOnRankup = 0;
  return self;
}
- (BOOL) hasCoinsGainedBaseOnRankup {
  return result.hasCoinsGainedBaseOnRankup;
}
- (int32_t) coinsGainedBaseOnRankup {
  return result.coinsGainedBaseOnRankup;
}
- (FullCityProto_Builder*) setCoinsGainedBaseOnRankup:(int32_t) value {
  result.hasCoinsGainedBaseOnRankup = YES;
  result.coinsGainedBaseOnRankup = value;
  return self;
}
- (FullCityProto_Builder*) clearCoinsGainedBaseOnRankup {
  result.hasCoinsGainedBaseOnRankup = NO;
  result.coinsGainedBaseOnRankup = 0;
  return self;
}
- (NSArray*) taskIdsList {
  if (result.mutableTaskIdsList == nil) {
    return [NSArray array];
  }
  return result.mutableTaskIdsList;
}
- (int32_t) taskIdsAtIndex:(int32_t) index {
  return [result taskIdsAtIndex:index];
}
- (FullCityProto_Builder*) replaceTaskIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableTaskIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullCityProto_Builder*) addTaskIds:(int32_t) value {
  if (result.mutableTaskIdsList == nil) {
    result.mutableTaskIdsList = [NSMutableArray array];
  }
  [result.mutableTaskIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullCityProto_Builder*) addAllTaskIds:(NSArray*) values {
  if (result.mutableTaskIdsList == nil) {
    result.mutableTaskIdsList = [NSMutableArray array];
  }
  [result.mutableTaskIdsList addObjectsFromArray:values];
  return self;
}
- (FullCityProto_Builder*) clearTaskIdsList {
  result.mutableTaskIdsList = nil;
  return self;
}
@end

@interface FullUserCityExpansionDataProto ()
@property int32_t userId;
@property int32_t nearLeftExpansions;
@property int32_t farLeftExpansions;
@property int32_t farRightExpansions;
@property BOOL isExpanding;
@property int64_t lastExpandTime;
@property ExpansionDirection lastExpandDirection;
@end

@implementation FullUserCityExpansionDataProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasNearLeftExpansions {
  return !!hasNearLeftExpansions_;
}
- (void) setHasNearLeftExpansions:(BOOL) value {
  hasNearLeftExpansions_ = !!value;
}
@synthesize nearLeftExpansions;
- (BOOL) hasFarLeftExpansions {
  return !!hasFarLeftExpansions_;
}
- (void) setHasFarLeftExpansions:(BOOL) value {
  hasFarLeftExpansions_ = !!value;
}
@synthesize farLeftExpansions;
- (BOOL) hasFarRightExpansions {
  return !!hasFarRightExpansions_;
}
- (void) setHasFarRightExpansions:(BOOL) value {
  hasFarRightExpansions_ = !!value;
}
@synthesize farRightExpansions;
- (BOOL) hasIsExpanding {
  return !!hasIsExpanding_;
}
- (void) setHasIsExpanding:(BOOL) value {
  hasIsExpanding_ = !!value;
}
- (BOOL) isExpanding {
  return !!isExpanding_;
}
- (void) setIsExpanding:(BOOL) value {
  isExpanding_ = !!value;
}
- (BOOL) hasLastExpandTime {
  return !!hasLastExpandTime_;
}
- (void) setHasLastExpandTime:(BOOL) value {
  hasLastExpandTime_ = !!value;
}
@synthesize lastExpandTime;
- (BOOL) hasLastExpandDirection {
  return !!hasLastExpandDirection_;
}
- (void) setHasLastExpandDirection:(BOOL) value {
  hasLastExpandDirection_ = !!value;
}
@synthesize lastExpandDirection;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.nearLeftExpansions = 0;
    self.farLeftExpansions = 0;
    self.farRightExpansions = 0;
    self.isExpanding = NO;
    self.lastExpandTime = 0L;
    self.lastExpandDirection = ExpansionDirectionNearLeft;
  }
  return self;
}
static FullUserCityExpansionDataProto* defaultFullUserCityExpansionDataProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserCityExpansionDataProto class]) {
    defaultFullUserCityExpansionDataProtoInstance = [[FullUserCityExpansionDataProto alloc] init];
  }
}
+ (FullUserCityExpansionDataProto*) defaultInstance {
  return defaultFullUserCityExpansionDataProtoInstance;
}
- (FullUserCityExpansionDataProto*) defaultInstance {
  return defaultFullUserCityExpansionDataProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasNearLeftExpansions) {
    return NO;
  }
  if (!self.hasFarLeftExpansions) {
    return NO;
  }
  if (!self.hasFarRightExpansions) {
    return NO;
  }
  if (!self.hasIsExpanding) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasNearLeftExpansions) {
    [output writeInt32:2 value:self.nearLeftExpansions];
  }
  if (self.hasFarLeftExpansions) {
    [output writeInt32:3 value:self.farLeftExpansions];
  }
  if (self.hasFarRightExpansions) {
    [output writeInt32:4 value:self.farRightExpansions];
  }
  if (self.hasIsExpanding) {
    [output writeBool:5 value:self.isExpanding];
  }
  if (self.hasLastExpandTime) {
    [output writeInt64:6 value:self.lastExpandTime];
  }
  if (self.hasLastExpandDirection) {
    [output writeEnum:7 value:self.lastExpandDirection];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasNearLeftExpansions) {
    size += computeInt32Size(2, self.nearLeftExpansions);
  }
  if (self.hasFarLeftExpansions) {
    size += computeInt32Size(3, self.farLeftExpansions);
  }
  if (self.hasFarRightExpansions) {
    size += computeInt32Size(4, self.farRightExpansions);
  }
  if (self.hasIsExpanding) {
    size += computeBoolSize(5, self.isExpanding);
  }
  if (self.hasLastExpandTime) {
    size += computeInt64Size(6, self.lastExpandTime);
  }
  if (self.hasLastExpandDirection) {
    size += computeEnumSize(7, self.lastExpandDirection);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserCityExpansionDataProto*) parseFromData:(NSData*) data {
  return (FullUserCityExpansionDataProto*)[[[FullUserCityExpansionDataProto builder] mergeFromData:data] build];
}
+ (FullUserCityExpansionDataProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCityExpansionDataProto*)[[[FullUserCityExpansionDataProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserCityExpansionDataProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserCityExpansionDataProto*)[[[FullUserCityExpansionDataProto builder] mergeFromInputStream:input] build];
}
+ (FullUserCityExpansionDataProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCityExpansionDataProto*)[[[FullUserCityExpansionDataProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserCityExpansionDataProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserCityExpansionDataProto*)[[[FullUserCityExpansionDataProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserCityExpansionDataProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCityExpansionDataProto*)[[[FullUserCityExpansionDataProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserCityExpansionDataProto_Builder*) builder {
  return [[[FullUserCityExpansionDataProto_Builder alloc] init] autorelease];
}
+ (FullUserCityExpansionDataProto_Builder*) builderWithPrototype:(FullUserCityExpansionDataProto*) prototype {
  return [[FullUserCityExpansionDataProto builder] mergeFrom:prototype];
}
- (FullUserCityExpansionDataProto_Builder*) builder {
  return [FullUserCityExpansionDataProto builder];
}
@end

@interface FullUserCityExpansionDataProto_Builder()
@property (retain) FullUserCityExpansionDataProto* result;
@end

@implementation FullUserCityExpansionDataProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserCityExpansionDataProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserCityExpansionDataProto_Builder*) clear {
  self.result = [[[FullUserCityExpansionDataProto alloc] init] autorelease];
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clone {
  return [FullUserCityExpansionDataProto builderWithPrototype:result];
}
- (FullUserCityExpansionDataProto*) defaultInstance {
  return [FullUserCityExpansionDataProto defaultInstance];
}
- (FullUserCityExpansionDataProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserCityExpansionDataProto*) buildPartial {
  FullUserCityExpansionDataProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserCityExpansionDataProto_Builder*) mergeFrom:(FullUserCityExpansionDataProto*) other {
  if (other == [FullUserCityExpansionDataProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasNearLeftExpansions) {
    [self setNearLeftExpansions:other.nearLeftExpansions];
  }
  if (other.hasFarLeftExpansions) {
    [self setFarLeftExpansions:other.farLeftExpansions];
  }
  if (other.hasFarRightExpansions) {
    [self setFarRightExpansions:other.farRightExpansions];
  }
  if (other.hasIsExpanding) {
    [self setIsExpanding:other.isExpanding];
  }
  if (other.hasLastExpandTime) {
    [self setLastExpandTime:other.lastExpandTime];
  }
  if (other.hasLastExpandDirection) {
    [self setLastExpandDirection:other.lastExpandDirection];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserCityExpansionDataProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setNearLeftExpansions:[input readInt32]];
        break;
      }
      case 24: {
        [self setFarLeftExpansions:[input readInt32]];
        break;
      }
      case 32: {
        [self setFarRightExpansions:[input readInt32]];
        break;
      }
      case 40: {
        [self setIsExpanding:[input readBool]];
        break;
      }
      case 48: {
        [self setLastExpandTime:[input readInt64]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (ExpansionDirectionIsValidValue(value)) {
          [self setLastExpandDirection:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserCityExpansionDataProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasNearLeftExpansions {
  return result.hasNearLeftExpansions;
}
- (int32_t) nearLeftExpansions {
  return result.nearLeftExpansions;
}
- (FullUserCityExpansionDataProto_Builder*) setNearLeftExpansions:(int32_t) value {
  result.hasNearLeftExpansions = YES;
  result.nearLeftExpansions = value;
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clearNearLeftExpansions {
  result.hasNearLeftExpansions = NO;
  result.nearLeftExpansions = 0;
  return self;
}
- (BOOL) hasFarLeftExpansions {
  return result.hasFarLeftExpansions;
}
- (int32_t) farLeftExpansions {
  return result.farLeftExpansions;
}
- (FullUserCityExpansionDataProto_Builder*) setFarLeftExpansions:(int32_t) value {
  result.hasFarLeftExpansions = YES;
  result.farLeftExpansions = value;
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clearFarLeftExpansions {
  result.hasFarLeftExpansions = NO;
  result.farLeftExpansions = 0;
  return self;
}
- (BOOL) hasFarRightExpansions {
  return result.hasFarRightExpansions;
}
- (int32_t) farRightExpansions {
  return result.farRightExpansions;
}
- (FullUserCityExpansionDataProto_Builder*) setFarRightExpansions:(int32_t) value {
  result.hasFarRightExpansions = YES;
  result.farRightExpansions = value;
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clearFarRightExpansions {
  result.hasFarRightExpansions = NO;
  result.farRightExpansions = 0;
  return self;
}
- (BOOL) hasIsExpanding {
  return result.hasIsExpanding;
}
- (BOOL) isExpanding {
  return result.isExpanding;
}
- (FullUserCityExpansionDataProto_Builder*) setIsExpanding:(BOOL) value {
  result.hasIsExpanding = YES;
  result.isExpanding = value;
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clearIsExpanding {
  result.hasIsExpanding = NO;
  result.isExpanding = NO;
  return self;
}
- (BOOL) hasLastExpandTime {
  return result.hasLastExpandTime;
}
- (int64_t) lastExpandTime {
  return result.lastExpandTime;
}
- (FullUserCityExpansionDataProto_Builder*) setLastExpandTime:(int64_t) value {
  result.hasLastExpandTime = YES;
  result.lastExpandTime = value;
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clearLastExpandTime {
  result.hasLastExpandTime = NO;
  result.lastExpandTime = 0L;
  return self;
}
- (BOOL) hasLastExpandDirection {
  return result.hasLastExpandDirection;
}
- (ExpansionDirection) lastExpandDirection {
  return result.lastExpandDirection;
}
- (FullUserCityExpansionDataProto_Builder*) setLastExpandDirection:(ExpansionDirection) value {
  result.hasLastExpandDirection = YES;
  result.lastExpandDirection = value;
  return self;
}
- (FullUserCityExpansionDataProto_Builder*) clearLastExpandDirection {
  result.hasLastExpandDirection = NO;
  result.lastExpandDirection = ExpansionDirectionNearLeft;
  return self;
}
@end

@interface FullUserCityProto ()
@property int32_t userId;
@property int32_t cityId;
@property int32_t currentRank;
@property int32_t numTasksCurrentlyCompleteInRank;
@end

@implementation FullUserCityProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasCurrentRank {
  return !!hasCurrentRank_;
}
- (void) setHasCurrentRank:(BOOL) value {
  hasCurrentRank_ = !!value;
}
@synthesize currentRank;
- (BOOL) hasNumTasksCurrentlyCompleteInRank {
  return !!hasNumTasksCurrentlyCompleteInRank_;
}
- (void) setHasNumTasksCurrentlyCompleteInRank:(BOOL) value {
  hasNumTasksCurrentlyCompleteInRank_ = !!value;
}
@synthesize numTasksCurrentlyCompleteInRank;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.cityId = 0;
    self.currentRank = 0;
    self.numTasksCurrentlyCompleteInRank = 0;
  }
  return self;
}
static FullUserCityProto* defaultFullUserCityProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserCityProto class]) {
    defaultFullUserCityProtoInstance = [[FullUserCityProto alloc] init];
  }
}
+ (FullUserCityProto*) defaultInstance {
  return defaultFullUserCityProtoInstance;
}
- (FullUserCityProto*) defaultInstance {
  return defaultFullUserCityProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasCurrentRank) {
    return NO;
  }
  if (!self.hasNumTasksCurrentlyCompleteInRank) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasCityId) {
    [output writeInt32:2 value:self.cityId];
  }
  if (self.hasCurrentRank) {
    [output writeInt32:3 value:self.currentRank];
  }
  if (self.hasNumTasksCurrentlyCompleteInRank) {
    [output writeInt32:4 value:self.numTasksCurrentlyCompleteInRank];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasCityId) {
    size += computeInt32Size(2, self.cityId);
  }
  if (self.hasCurrentRank) {
    size += computeInt32Size(3, self.currentRank);
  }
  if (self.hasNumTasksCurrentlyCompleteInRank) {
    size += computeInt32Size(4, self.numTasksCurrentlyCompleteInRank);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserCityProto*) parseFromData:(NSData*) data {
  return (FullUserCityProto*)[[[FullUserCityProto builder] mergeFromData:data] build];
}
+ (FullUserCityProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCityProto*)[[[FullUserCityProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserCityProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserCityProto*)[[[FullUserCityProto builder] mergeFromInputStream:input] build];
}
+ (FullUserCityProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCityProto*)[[[FullUserCityProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserCityProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserCityProto*)[[[FullUserCityProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserCityProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCityProto*)[[[FullUserCityProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserCityProto_Builder*) builder {
  return [[[FullUserCityProto_Builder alloc] init] autorelease];
}
+ (FullUserCityProto_Builder*) builderWithPrototype:(FullUserCityProto*) prototype {
  return [[FullUserCityProto builder] mergeFrom:prototype];
}
- (FullUserCityProto_Builder*) builder {
  return [FullUserCityProto builder];
}
@end

@interface FullUserCityProto_Builder()
@property (retain) FullUserCityProto* result;
@end

@implementation FullUserCityProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserCityProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserCityProto_Builder*) clear {
  self.result = [[[FullUserCityProto alloc] init] autorelease];
  return self;
}
- (FullUserCityProto_Builder*) clone {
  return [FullUserCityProto builderWithPrototype:result];
}
- (FullUserCityProto*) defaultInstance {
  return [FullUserCityProto defaultInstance];
}
- (FullUserCityProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserCityProto*) buildPartial {
  FullUserCityProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserCityProto_Builder*) mergeFrom:(FullUserCityProto*) other {
  if (other == [FullUserCityProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasCurrentRank) {
    [self setCurrentRank:other.currentRank];
  }
  if (other.hasNumTasksCurrentlyCompleteInRank) {
    [self setNumTasksCurrentlyCompleteInRank:other.numTasksCurrentlyCompleteInRank];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserCityProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserCityProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 24: {
        [self setCurrentRank:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumTasksCurrentlyCompleteInRank:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserCityProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserCityProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (FullUserCityProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (FullUserCityProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasCurrentRank {
  return result.hasCurrentRank;
}
- (int32_t) currentRank {
  return result.currentRank;
}
- (FullUserCityProto_Builder*) setCurrentRank:(int32_t) value {
  result.hasCurrentRank = YES;
  result.currentRank = value;
  return self;
}
- (FullUserCityProto_Builder*) clearCurrentRank {
  result.hasCurrentRank = NO;
  result.currentRank = 0;
  return self;
}
- (BOOL) hasNumTasksCurrentlyCompleteInRank {
  return result.hasNumTasksCurrentlyCompleteInRank;
}
- (int32_t) numTasksCurrentlyCompleteInRank {
  return result.numTasksCurrentlyCompleteInRank;
}
- (FullUserCityProto_Builder*) setNumTasksCurrentlyCompleteInRank:(int32_t) value {
  result.hasNumTasksCurrentlyCompleteInRank = YES;
  result.numTasksCurrentlyCompleteInRank = value;
  return self;
}
- (FullUserCityProto_Builder*) clearNumTasksCurrentlyCompleteInRank {
  result.hasNumTasksCurrentlyCompleteInRank = NO;
  result.numTasksCurrentlyCompleteInRank = 0;
  return self;
}
@end

@interface CoordinateProto ()
@property int32_t x;
@property int32_t y;
@end

@implementation CoordinateProto

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) value {
  hasX_ = !!value;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) value {
  hasY_ = !!value;
}
@synthesize y;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
  }
  return self;
}
static CoordinateProto* defaultCoordinateProtoInstance = nil;
+ (void) initialize {
  if (self == [CoordinateProto class]) {
    defaultCoordinateProtoInstance = [[CoordinateProto alloc] init];
  }
}
+ (CoordinateProto*) defaultInstance {
  return defaultCoordinateProtoInstance;
}
- (CoordinateProto*) defaultInstance {
  return defaultCoordinateProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasX) {
    return NO;
  }
  if (!self.hasY) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeInt32:1 value:self.x];
  }
  if (self.hasY) {
    [output writeInt32:2 value:self.y];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasX) {
    size += computeInt32Size(1, self.x);
  }
  if (self.hasY) {
    size += computeInt32Size(2, self.y);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CoordinateProto*) parseFromData:(NSData*) data {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromData:data] build];
}
+ (CoordinateProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto*) parseFromInputStream:(NSInputStream*) input {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromInputStream:input] build];
}
+ (CoordinateProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromCodedInputStream:input] build];
}
+ (CoordinateProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto_Builder*) builder {
  return [[[CoordinateProto_Builder alloc] init] autorelease];
}
+ (CoordinateProto_Builder*) builderWithPrototype:(CoordinateProto*) prototype {
  return [[CoordinateProto builder] mergeFrom:prototype];
}
- (CoordinateProto_Builder*) builder {
  return [CoordinateProto builder];
}
@end

@interface CoordinateProto_Builder()
@property (retain) CoordinateProto* result;
@end

@implementation CoordinateProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CoordinateProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CoordinateProto_Builder*) clear {
  self.result = [[[CoordinateProto alloc] init] autorelease];
  return self;
}
- (CoordinateProto_Builder*) clone {
  return [CoordinateProto builderWithPrototype:result];
}
- (CoordinateProto*) defaultInstance {
  return [CoordinateProto defaultInstance];
}
- (CoordinateProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CoordinateProto*) buildPartial {
  CoordinateProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CoordinateProto_Builder*) mergeFrom:(CoordinateProto*) other {
  if (other == [CoordinateProto defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CoordinateProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CoordinateProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setX:[input readInt32]];
        break;
      }
      case 16: {
        [self setY:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return result.hasX;
}
- (int32_t) x {
  return result.x;
}
- (CoordinateProto_Builder*) setX:(int32_t) value {
  result.hasX = YES;
  result.x = value;
  return self;
}
- (CoordinateProto_Builder*) clearX {
  result.hasX = NO;
  result.x = 0;
  return self;
}
- (BOOL) hasY {
  return result.hasY;
}
- (int32_t) y {
  return result.y;
}
- (CoordinateProto_Builder*) setY:(int32_t) value {
  result.hasY = YES;
  result.y = value;
  return self;
}
- (CoordinateProto_Builder*) clearY {
  result.hasY = NO;
  result.y = 0;
  return self;
}
@end

@interface LocationProto ()
@property Float64 latitude;
@property Float64 longitude;
@end

@implementation LocationProto

- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) value {
  hasLatitude_ = !!value;
}
@synthesize latitude;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) value {
  hasLongitude_ = !!value;
}
@synthesize longitude;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.latitude = 0;
    self.longitude = 0;
  }
  return self;
}
static LocationProto* defaultLocationProtoInstance = nil;
+ (void) initialize {
  if (self == [LocationProto class]) {
    defaultLocationProtoInstance = [[LocationProto alloc] init];
  }
}
+ (LocationProto*) defaultInstance {
  return defaultLocationProtoInstance;
}
- (LocationProto*) defaultInstance {
  return defaultLocationProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLatitude) {
    return NO;
  }
  if (!self.hasLongitude) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLatitude) {
    [output writeDouble:1 value:self.latitude];
  }
  if (self.hasLongitude) {
    [output writeDouble:2 value:self.longitude];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLatitude) {
    size += computeDoubleSize(1, self.latitude);
  }
  if (self.hasLongitude) {
    size += computeDoubleSize(2, self.longitude);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LocationProto*) parseFromData:(NSData*) data {
  return (LocationProto*)[[[LocationProto builder] mergeFromData:data] build];
}
+ (LocationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LocationProto*)[[[LocationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LocationProto*) parseFromInputStream:(NSInputStream*) input {
  return (LocationProto*)[[[LocationProto builder] mergeFromInputStream:input] build];
}
+ (LocationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LocationProto*)[[[LocationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LocationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LocationProto*)[[[LocationProto builder] mergeFromCodedInputStream:input] build];
}
+ (LocationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LocationProto*)[[[LocationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LocationProto_Builder*) builder {
  return [[[LocationProto_Builder alloc] init] autorelease];
}
+ (LocationProto_Builder*) builderWithPrototype:(LocationProto*) prototype {
  return [[LocationProto builder] mergeFrom:prototype];
}
- (LocationProto_Builder*) builder {
  return [LocationProto builder];
}
@end

@interface LocationProto_Builder()
@property (retain) LocationProto* result;
@end

@implementation LocationProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LocationProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LocationProto_Builder*) clear {
  self.result = [[[LocationProto alloc] init] autorelease];
  return self;
}
- (LocationProto_Builder*) clone {
  return [LocationProto builderWithPrototype:result];
}
- (LocationProto*) defaultInstance {
  return [LocationProto defaultInstance];
}
- (LocationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LocationProto*) buildPartial {
  LocationProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LocationProto_Builder*) mergeFrom:(LocationProto*) other {
  if (other == [LocationProto defaultInstance]) {
    return self;
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LocationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LocationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 9: {
        [self setLatitude:[input readDouble]];
        break;
      }
      case 17: {
        [self setLongitude:[input readDouble]];
        break;
      }
    }
  }
}
- (BOOL) hasLatitude {
  return result.hasLatitude;
}
- (Float64) latitude {
  return result.latitude;
}
- (LocationProto_Builder*) setLatitude:(Float64) value {
  result.hasLatitude = YES;
  result.latitude = value;
  return self;
}
- (LocationProto_Builder*) clearLatitude {
  result.hasLatitude = NO;
  result.latitude = 0;
  return self;
}
- (BOOL) hasLongitude {
  return result.hasLongitude;
}
- (Float64) longitude {
  return result.longitude;
}
- (LocationProto_Builder*) setLongitude:(Float64) value {
  result.hasLongitude = YES;
  result.longitude = value;
  return self;
}
- (LocationProto_Builder*) clearLongitude {
  result.hasLongitude = NO;
  result.longitude = 0;
  return self;
}
@end

@interface NeutralCityElementProto ()
@property int32_t cityId;
@property int32_t assetId;
@property (retain) NSString* name;
@property NeutralCityElementProto_NeutralCityElemType type;
@property (retain) CoordinateProto* coords;
@property int32_t xLength;
@property int32_t yLength;
@property (retain) NSString* imgId;
@property StructOrientation orientation;
@end

@implementation NeutralCityElementProto

- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasAssetId {
  return !!hasAssetId_;
}
- (void) setHasAssetId:(BOOL) value {
  hasAssetId_ = !!value;
}
@synthesize assetId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasCoords {
  return !!hasCoords_;
}
- (void) setHasCoords:(BOOL) value {
  hasCoords_ = !!value;
}
@synthesize coords;
- (BOOL) hasXLength {
  return !!hasXLength_;
}
- (void) setHasXLength:(BOOL) value {
  hasXLength_ = !!value;
}
@synthesize xLength;
- (BOOL) hasYLength {
  return !!hasYLength_;
}
- (void) setHasYLength:(BOOL) value {
  hasYLength_ = !!value;
}
@synthesize yLength;
- (BOOL) hasImgId {
  return !!hasImgId_;
}
- (void) setHasImgId:(BOOL) value {
  hasImgId_ = !!value;
}
@synthesize imgId;
- (BOOL) hasOrientation {
  return !!hasOrientation_;
}
- (void) setHasOrientation:(BOOL) value {
  hasOrientation_ = !!value;
}
@synthesize orientation;
- (void) dealloc {
  self.name = nil;
  self.coords = nil;
  self.imgId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.cityId = 0;
    self.assetId = 0;
    self.name = @"";
    self.type = NeutralCityElementProto_NeutralCityElemTypePerson;
    self.coords = [CoordinateProto defaultInstance];
    self.xLength = 0;
    self.yLength = 0;
    self.imgId = @"";
    self.orientation = StructOrientationPosition1;
  }
  return self;
}
static NeutralCityElementProto* defaultNeutralCityElementProtoInstance = nil;
+ (void) initialize {
  if (self == [NeutralCityElementProto class]) {
    defaultNeutralCityElementProtoInstance = [[NeutralCityElementProto alloc] init];
  }
}
+ (NeutralCityElementProto*) defaultInstance {
  return defaultNeutralCityElementProtoInstance;
}
- (NeutralCityElementProto*) defaultInstance {
  return defaultNeutralCityElementProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasAssetId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasCoords) {
    return NO;
  }
  if (!self.hasImgId) {
    return NO;
  }
  if (!self.coords.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCityId) {
    [output writeInt32:1 value:self.cityId];
  }
  if (self.hasAssetId) {
    [output writeInt32:2 value:self.assetId];
  }
  if (self.hasType) {
    [output writeEnum:3 value:self.type];
  }
  if (self.hasCoords) {
    [output writeMessage:4 value:self.coords];
  }
  if (self.hasXLength) {
    [output writeInt32:5 value:self.xLength];
  }
  if (self.hasYLength) {
    [output writeInt32:6 value:self.yLength];
  }
  if (self.hasImgId) {
    [output writeString:7 value:self.imgId];
  }
  if (self.hasOrientation) {
    [output writeEnum:8 value:self.orientation];
  }
  if (self.hasName) {
    [output writeString:9 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCityId) {
    size += computeInt32Size(1, self.cityId);
  }
  if (self.hasAssetId) {
    size += computeInt32Size(2, self.assetId);
  }
  if (self.hasType) {
    size += computeEnumSize(3, self.type);
  }
  if (self.hasCoords) {
    size += computeMessageSize(4, self.coords);
  }
  if (self.hasXLength) {
    size += computeInt32Size(5, self.xLength);
  }
  if (self.hasYLength) {
    size += computeInt32Size(6, self.yLength);
  }
  if (self.hasImgId) {
    size += computeStringSize(7, self.imgId);
  }
  if (self.hasOrientation) {
    size += computeEnumSize(8, self.orientation);
  }
  if (self.hasName) {
    size += computeStringSize(9, self.name);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (NeutralCityElementProto*) parseFromData:(NSData*) data {
  return (NeutralCityElementProto*)[[[NeutralCityElementProto builder] mergeFromData:data] build];
}
+ (NeutralCityElementProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NeutralCityElementProto*)[[[NeutralCityElementProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (NeutralCityElementProto*) parseFromInputStream:(NSInputStream*) input {
  return (NeutralCityElementProto*)[[[NeutralCityElementProto builder] mergeFromInputStream:input] build];
}
+ (NeutralCityElementProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NeutralCityElementProto*)[[[NeutralCityElementProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NeutralCityElementProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (NeutralCityElementProto*)[[[NeutralCityElementProto builder] mergeFromCodedInputStream:input] build];
}
+ (NeutralCityElementProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NeutralCityElementProto*)[[[NeutralCityElementProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NeutralCityElementProto_Builder*) builder {
  return [[[NeutralCityElementProto_Builder alloc] init] autorelease];
}
+ (NeutralCityElementProto_Builder*) builderWithPrototype:(NeutralCityElementProto*) prototype {
  return [[NeutralCityElementProto builder] mergeFrom:prototype];
}
- (NeutralCityElementProto_Builder*) builder {
  return [NeutralCityElementProto builder];
}
@end

BOOL NeutralCityElementProto_NeutralCityElemTypeIsValidValue(NeutralCityElementProto_NeutralCityElemType value) {
  switch (value) {
    case NeutralCityElementProto_NeutralCityElemTypePerson:
    case NeutralCityElementProto_NeutralCityElemTypeBuilding:
    case NeutralCityElementProto_NeutralCityElemTypeDecoration:
      return YES;
    default:
      return NO;
  }
}
@interface NeutralCityElementProto_Builder()
@property (retain) NeutralCityElementProto* result;
@end

@implementation NeutralCityElementProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[NeutralCityElementProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (NeutralCityElementProto_Builder*) clear {
  self.result = [[[NeutralCityElementProto alloc] init] autorelease];
  return self;
}
- (NeutralCityElementProto_Builder*) clone {
  return [NeutralCityElementProto builderWithPrototype:result];
}
- (NeutralCityElementProto*) defaultInstance {
  return [NeutralCityElementProto defaultInstance];
}
- (NeutralCityElementProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (NeutralCityElementProto*) buildPartial {
  NeutralCityElementProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (NeutralCityElementProto_Builder*) mergeFrom:(NeutralCityElementProto*) other {
  if (other == [NeutralCityElementProto defaultInstance]) {
    return self;
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasAssetId) {
    [self setAssetId:other.assetId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCoords) {
    [self mergeCoords:other.coords];
  }
  if (other.hasXLength) {
    [self setXLength:other.xLength];
  }
  if (other.hasYLength) {
    [self setYLength:other.yLength];
  }
  if (other.hasImgId) {
    [self setImgId:other.imgId];
  }
  if (other.hasOrientation) {
    [self setOrientation:other.orientation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (NeutralCityElementProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (NeutralCityElementProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 16: {
        [self setAssetId:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (NeutralCityElementProto_NeutralCityElemTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoords) {
          [subBuilder mergeFrom:self.coords];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoords:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setXLength:[input readInt32]];
        break;
      }
      case 48: {
        [self setYLength:[input readInt32]];
        break;
      }
      case 58: {
        [self setImgId:[input readString]];
        break;
      }
      case 64: {
        int32_t value = [input readEnum];
        if (StructOrientationIsValidValue(value)) {
          [self setOrientation:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 74: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (NeutralCityElementProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasAssetId {
  return result.hasAssetId;
}
- (int32_t) assetId {
  return result.assetId;
}
- (NeutralCityElementProto_Builder*) setAssetId:(int32_t) value {
  result.hasAssetId = YES;
  result.assetId = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearAssetId {
  result.hasAssetId = NO;
  result.assetId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (NeutralCityElementProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (NeutralCityElementProto_NeutralCityElemType) type {
  return result.type;
}
- (NeutralCityElementProto_Builder*) setType:(NeutralCityElementProto_NeutralCityElemType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearType {
  result.hasType = NO;
  result.type = NeutralCityElementProto_NeutralCityElemTypePerson;
  return self;
}
- (BOOL) hasCoords {
  return result.hasCoords;
}
- (CoordinateProto*) coords {
  return result.coords;
}
- (NeutralCityElementProto_Builder*) setCoords:(CoordinateProto*) value {
  result.hasCoords = YES;
  result.coords = value;
  return self;
}
- (NeutralCityElementProto_Builder*) setCoordsBuilder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoords:[builderForValue build]];
}
- (NeutralCityElementProto_Builder*) mergeCoords:(CoordinateProto*) value {
  if (result.hasCoords &&
      result.coords != [CoordinateProto defaultInstance]) {
    result.coords =
      [[[CoordinateProto builderWithPrototype:result.coords] mergeFrom:value] buildPartial];
  } else {
    result.coords = value;
  }
  result.hasCoords = YES;
  return self;
}
- (NeutralCityElementProto_Builder*) clearCoords {
  result.hasCoords = NO;
  result.coords = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasXLength {
  return result.hasXLength;
}
- (int32_t) xLength {
  return result.xLength;
}
- (NeutralCityElementProto_Builder*) setXLength:(int32_t) value {
  result.hasXLength = YES;
  result.xLength = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearXLength {
  result.hasXLength = NO;
  result.xLength = 0;
  return self;
}
- (BOOL) hasYLength {
  return result.hasYLength;
}
- (int32_t) yLength {
  return result.yLength;
}
- (NeutralCityElementProto_Builder*) setYLength:(int32_t) value {
  result.hasYLength = YES;
  result.yLength = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearYLength {
  result.hasYLength = NO;
  result.yLength = 0;
  return self;
}
- (BOOL) hasImgId {
  return result.hasImgId;
}
- (NSString*) imgId {
  return result.imgId;
}
- (NeutralCityElementProto_Builder*) setImgId:(NSString*) value {
  result.hasImgId = YES;
  result.imgId = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearImgId {
  result.hasImgId = NO;
  result.imgId = @"";
  return self;
}
- (BOOL) hasOrientation {
  return result.hasOrientation;
}
- (StructOrientation) orientation {
  return result.orientation;
}
- (NeutralCityElementProto_Builder*) setOrientation:(StructOrientation) value {
  result.hasOrientation = YES;
  result.orientation = value;
  return self;
}
- (NeutralCityElementProto_Builder*) clearOrientation {
  result.hasOrientation = NO;
  result.orientation = StructOrientationPosition1;
  return self;
}
@end

@interface FullMarketplacePostProto ()
@property int32_t marketplacePostId;
@property int32_t posterId;
@property MarketplacePostType postType;
@property int64_t timeOfPost;
@property (retain) FullEquipProto* postedEquip;
@property int32_t diamondCost;
@property int32_t coinCost;
@end

@implementation FullMarketplacePostProto

- (BOOL) hasMarketplacePostId {
  return !!hasMarketplacePostId_;
}
- (void) setHasMarketplacePostId:(BOOL) value {
  hasMarketplacePostId_ = !!value;
}
@synthesize marketplacePostId;
- (BOOL) hasPosterId {
  return !!hasPosterId_;
}
- (void) setHasPosterId:(BOOL) value {
  hasPosterId_ = !!value;
}
@synthesize posterId;
- (BOOL) hasPostType {
  return !!hasPostType_;
}
- (void) setHasPostType:(BOOL) value {
  hasPostType_ = !!value;
}
@synthesize postType;
- (BOOL) hasTimeOfPost {
  return !!hasTimeOfPost_;
}
- (void) setHasTimeOfPost:(BOOL) value {
  hasTimeOfPost_ = !!value;
}
@synthesize timeOfPost;
- (BOOL) hasPostedEquip {
  return !!hasPostedEquip_;
}
- (void) setHasPostedEquip:(BOOL) value {
  hasPostedEquip_ = !!value;
}
@synthesize postedEquip;
- (BOOL) hasDiamondCost {
  return !!hasDiamondCost_;
}
- (void) setHasDiamondCost:(BOOL) value {
  hasDiamondCost_ = !!value;
}
@synthesize diamondCost;
- (BOOL) hasCoinCost {
  return !!hasCoinCost_;
}
- (void) setHasCoinCost:(BOOL) value {
  hasCoinCost_ = !!value;
}
@synthesize coinCost;
- (void) dealloc {
  self.postedEquip = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.marketplacePostId = 0;
    self.posterId = 0;
    self.postType = MarketplacePostTypePremiumEquipPost;
    self.timeOfPost = 0L;
    self.postedEquip = [FullEquipProto defaultInstance];
    self.diamondCost = 0;
    self.coinCost = 0;
  }
  return self;
}
static FullMarketplacePostProto* defaultFullMarketplacePostProtoInstance = nil;
+ (void) initialize {
  if (self == [FullMarketplacePostProto class]) {
    defaultFullMarketplacePostProtoInstance = [[FullMarketplacePostProto alloc] init];
  }
}
+ (FullMarketplacePostProto*) defaultInstance {
  return defaultFullMarketplacePostProtoInstance;
}
- (FullMarketplacePostProto*) defaultInstance {
  return defaultFullMarketplacePostProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMarketplacePostId) {
    return NO;
  }
  if (!self.hasPosterId) {
    return NO;
  }
  if (!self.hasPostType) {
    return NO;
  }
  if (!self.hasTimeOfPost) {
    return NO;
  }
  if (!self.hasPostedEquip) {
    return NO;
  }
  if (!self.postedEquip.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMarketplacePostId) {
    [output writeInt32:1 value:self.marketplacePostId];
  }
  if (self.hasPosterId) {
    [output writeInt32:2 value:self.posterId];
  }
  if (self.hasPostType) {
    [output writeEnum:3 value:self.postType];
  }
  if (self.hasTimeOfPost) {
    [output writeInt64:4 value:self.timeOfPost];
  }
  if (self.hasPostedEquip) {
    [output writeMessage:5 value:self.postedEquip];
  }
  if (self.hasDiamondCost) {
    [output writeInt32:6 value:self.diamondCost];
  }
  if (self.hasCoinCost) {
    [output writeInt32:7 value:self.coinCost];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMarketplacePostId) {
    size += computeInt32Size(1, self.marketplacePostId);
  }
  if (self.hasPosterId) {
    size += computeInt32Size(2, self.posterId);
  }
  if (self.hasPostType) {
    size += computeEnumSize(3, self.postType);
  }
  if (self.hasTimeOfPost) {
    size += computeInt64Size(4, self.timeOfPost);
  }
  if (self.hasPostedEquip) {
    size += computeMessageSize(5, self.postedEquip);
  }
  if (self.hasDiamondCost) {
    size += computeInt32Size(6, self.diamondCost);
  }
  if (self.hasCoinCost) {
    size += computeInt32Size(7, self.coinCost);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullMarketplacePostProto*) parseFromData:(NSData*) data {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromData:data] build];
}
+ (FullMarketplacePostProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullMarketplacePostProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromInputStream:input] build];
}
+ (FullMarketplacePostProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullMarketplacePostProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullMarketplacePostProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullMarketplacePostProto_Builder*) builder {
  return [[[FullMarketplacePostProto_Builder alloc] init] autorelease];
}
+ (FullMarketplacePostProto_Builder*) builderWithPrototype:(FullMarketplacePostProto*) prototype {
  return [[FullMarketplacePostProto builder] mergeFrom:prototype];
}
- (FullMarketplacePostProto_Builder*) builder {
  return [FullMarketplacePostProto builder];
}
@end

@interface FullMarketplacePostProto_Builder()
@property (retain) FullMarketplacePostProto* result;
@end

@implementation FullMarketplacePostProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullMarketplacePostProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullMarketplacePostProto_Builder*) clear {
  self.result = [[[FullMarketplacePostProto alloc] init] autorelease];
  return self;
}
- (FullMarketplacePostProto_Builder*) clone {
  return [FullMarketplacePostProto builderWithPrototype:result];
}
- (FullMarketplacePostProto*) defaultInstance {
  return [FullMarketplacePostProto defaultInstance];
}
- (FullMarketplacePostProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullMarketplacePostProto*) buildPartial {
  FullMarketplacePostProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullMarketplacePostProto_Builder*) mergeFrom:(FullMarketplacePostProto*) other {
  if (other == [FullMarketplacePostProto defaultInstance]) {
    return self;
  }
  if (other.hasMarketplacePostId) {
    [self setMarketplacePostId:other.marketplacePostId];
  }
  if (other.hasPosterId) {
    [self setPosterId:other.posterId];
  }
  if (other.hasPostType) {
    [self setPostType:other.postType];
  }
  if (other.hasTimeOfPost) {
    [self setTimeOfPost:other.timeOfPost];
  }
  if (other.hasPostedEquip) {
    [self mergePostedEquip:other.postedEquip];
  }
  if (other.hasDiamondCost) {
    [self setDiamondCost:other.diamondCost];
  }
  if (other.hasCoinCost) {
    [self setCoinCost:other.coinCost];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullMarketplacePostProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullMarketplacePostProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMarketplacePostId:[input readInt32]];
        break;
      }
      case 16: {
        [self setPosterId:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (MarketplacePostTypeIsValidValue(value)) {
          [self setPostType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setTimeOfPost:[input readInt64]];
        break;
      }
      case 42: {
        FullEquipProto_Builder* subBuilder = [FullEquipProto builder];
        if (self.hasPostedEquip) {
          [subBuilder mergeFrom:self.postedEquip];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPostedEquip:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        [self setDiamondCost:[input readInt32]];
        break;
      }
      case 56: {
        [self setCoinCost:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMarketplacePostId {
  return result.hasMarketplacePostId;
}
- (int32_t) marketplacePostId {
  return result.marketplacePostId;
}
- (FullMarketplacePostProto_Builder*) setMarketplacePostId:(int32_t) value {
  result.hasMarketplacePostId = YES;
  result.marketplacePostId = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearMarketplacePostId {
  result.hasMarketplacePostId = NO;
  result.marketplacePostId = 0;
  return self;
}
- (BOOL) hasPosterId {
  return result.hasPosterId;
}
- (int32_t) posterId {
  return result.posterId;
}
- (FullMarketplacePostProto_Builder*) setPosterId:(int32_t) value {
  result.hasPosterId = YES;
  result.posterId = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPosterId {
  result.hasPosterId = NO;
  result.posterId = 0;
  return self;
}
- (BOOL) hasPostType {
  return result.hasPostType;
}
- (MarketplacePostType) postType {
  return result.postType;
}
- (FullMarketplacePostProto_Builder*) setPostType:(MarketplacePostType) value {
  result.hasPostType = YES;
  result.postType = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPostType {
  result.hasPostType = NO;
  result.postType = MarketplacePostTypePremiumEquipPost;
  return self;
}
- (BOOL) hasTimeOfPost {
  return result.hasTimeOfPost;
}
- (int64_t) timeOfPost {
  return result.timeOfPost;
}
- (FullMarketplacePostProto_Builder*) setTimeOfPost:(int64_t) value {
  result.hasTimeOfPost = YES;
  result.timeOfPost = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearTimeOfPost {
  result.hasTimeOfPost = NO;
  result.timeOfPost = 0L;
  return self;
}
- (BOOL) hasPostedEquip {
  return result.hasPostedEquip;
}
- (FullEquipProto*) postedEquip {
  return result.postedEquip;
}
- (FullMarketplacePostProto_Builder*) setPostedEquip:(FullEquipProto*) value {
  result.hasPostedEquip = YES;
  result.postedEquip = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) setPostedEquipBuilder:(FullEquipProto_Builder*) builderForValue {
  return [self setPostedEquip:[builderForValue build]];
}
- (FullMarketplacePostProto_Builder*) mergePostedEquip:(FullEquipProto*) value {
  if (result.hasPostedEquip &&
      result.postedEquip != [FullEquipProto defaultInstance]) {
    result.postedEquip =
      [[[FullEquipProto builderWithPrototype:result.postedEquip] mergeFrom:value] buildPartial];
  } else {
    result.postedEquip = value;
  }
  result.hasPostedEquip = YES;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPostedEquip {
  result.hasPostedEquip = NO;
  result.postedEquip = [FullEquipProto defaultInstance];
  return self;
}
- (BOOL) hasDiamondCost {
  return result.hasDiamondCost;
}
- (int32_t) diamondCost {
  return result.diamondCost;
}
- (FullMarketplacePostProto_Builder*) setDiamondCost:(int32_t) value {
  result.hasDiamondCost = YES;
  result.diamondCost = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearDiamondCost {
  result.hasDiamondCost = NO;
  result.diamondCost = 0;
  return self;
}
- (BOOL) hasCoinCost {
  return result.hasCoinCost;
}
- (int32_t) coinCost {
  return result.coinCost;
}
- (FullMarketplacePostProto_Builder*) setCoinCost:(int32_t) value {
  result.hasCoinCost = YES;
  result.coinCost = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearCoinCost {
  result.hasCoinCost = NO;
  result.coinCost = 0;
  return self;
}
@end

@interface FullUserCritstructProto ()
@property CritStructType type;
@property (retain) CoordinateProto* coords;
@property StructOrientation orientation;
@end

@implementation FullUserCritstructProto

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasCoords {
  return !!hasCoords_;
}
- (void) setHasCoords:(BOOL) value {
  hasCoords_ = !!value;
}
@synthesize coords;
- (BOOL) hasOrientation {
  return !!hasOrientation_;
}
- (void) setHasOrientation:(BOOL) value {
  hasOrientation_ = !!value;
}
@synthesize orientation;
- (void) dealloc {
  self.coords = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = CritStructTypeAviary;
    self.coords = [CoordinateProto defaultInstance];
    self.orientation = StructOrientationPosition1;
  }
  return self;
}
static FullUserCritstructProto* defaultFullUserCritstructProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserCritstructProto class]) {
    defaultFullUserCritstructProtoInstance = [[FullUserCritstructProto alloc] init];
  }
}
+ (FullUserCritstructProto*) defaultInstance {
  return defaultFullUserCritstructProtoInstance;
}
- (FullUserCritstructProto*) defaultInstance {
  return defaultFullUserCritstructProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasCoords) {
    return NO;
  }
  if (!self.hasOrientation) {
    return NO;
  }
  if (!self.coords.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasCoords) {
    [output writeMessage:2 value:self.coords];
  }
  if (self.hasOrientation) {
    [output writeEnum:3 value:self.orientation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeEnumSize(1, self.type);
  }
  if (self.hasCoords) {
    size += computeMessageSize(2, self.coords);
  }
  if (self.hasOrientation) {
    size += computeEnumSize(3, self.orientation);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserCritstructProto*) parseFromData:(NSData*) data {
  return (FullUserCritstructProto*)[[[FullUserCritstructProto builder] mergeFromData:data] build];
}
+ (FullUserCritstructProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCritstructProto*)[[[FullUserCritstructProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserCritstructProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserCritstructProto*)[[[FullUserCritstructProto builder] mergeFromInputStream:input] build];
}
+ (FullUserCritstructProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCritstructProto*)[[[FullUserCritstructProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserCritstructProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserCritstructProto*)[[[FullUserCritstructProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserCritstructProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserCritstructProto*)[[[FullUserCritstructProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserCritstructProto_Builder*) builder {
  return [[[FullUserCritstructProto_Builder alloc] init] autorelease];
}
+ (FullUserCritstructProto_Builder*) builderWithPrototype:(FullUserCritstructProto*) prototype {
  return [[FullUserCritstructProto builder] mergeFrom:prototype];
}
- (FullUserCritstructProto_Builder*) builder {
  return [FullUserCritstructProto builder];
}
@end

@interface FullUserCritstructProto_Builder()
@property (retain) FullUserCritstructProto* result;
@end

@implementation FullUserCritstructProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserCritstructProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserCritstructProto_Builder*) clear {
  self.result = [[[FullUserCritstructProto alloc] init] autorelease];
  return self;
}
- (FullUserCritstructProto_Builder*) clone {
  return [FullUserCritstructProto builderWithPrototype:result];
}
- (FullUserCritstructProto*) defaultInstance {
  return [FullUserCritstructProto defaultInstance];
}
- (FullUserCritstructProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserCritstructProto*) buildPartial {
  FullUserCritstructProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserCritstructProto_Builder*) mergeFrom:(FullUserCritstructProto*) other {
  if (other == [FullUserCritstructProto defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCoords) {
    [self mergeCoords:other.coords];
  }
  if (other.hasOrientation) {
    [self setOrientation:other.orientation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserCritstructProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserCritstructProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (CritStructTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoords) {
          [subBuilder mergeFrom:self.coords];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoords:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (StructOrientationIsValidValue(value)) {
          [self setOrientation:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (CritStructType) type {
  return result.type;
}
- (FullUserCritstructProto_Builder*) setType:(CritStructType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (FullUserCritstructProto_Builder*) clearType {
  result.hasType = NO;
  result.type = CritStructTypeAviary;
  return self;
}
- (BOOL) hasCoords {
  return result.hasCoords;
}
- (CoordinateProto*) coords {
  return result.coords;
}
- (FullUserCritstructProto_Builder*) setCoords:(CoordinateProto*) value {
  result.hasCoords = YES;
  result.coords = value;
  return self;
}
- (FullUserCritstructProto_Builder*) setCoordsBuilder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoords:[builderForValue build]];
}
- (FullUserCritstructProto_Builder*) mergeCoords:(CoordinateProto*) value {
  if (result.hasCoords &&
      result.coords != [CoordinateProto defaultInstance]) {
    result.coords =
      [[[CoordinateProto builderWithPrototype:result.coords] mergeFrom:value] buildPartial];
  } else {
    result.coords = value;
  }
  result.hasCoords = YES;
  return self;
}
- (FullUserCritstructProto_Builder*) clearCoords {
  result.hasCoords = NO;
  result.coords = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasOrientation {
  return result.hasOrientation;
}
- (StructOrientation) orientation {
  return result.orientation;
}
- (FullUserCritstructProto_Builder*) setOrientation:(StructOrientation) value {
  result.hasOrientation = YES;
  result.orientation = value;
  return self;
}
- (FullUserCritstructProto_Builder*) clearOrientation {
  result.hasOrientation = NO;
  result.orientation = StructOrientationPosition1;
  return self;
}
@end

@interface MinimumUserTaskProto ()
@property int32_t userId;
@property int32_t taskId;
@property int32_t numTimesActed;
@end

@implementation MinimumUserTaskProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasTaskId {
  return !!hasTaskId_;
}
- (void) setHasTaskId:(BOOL) value {
  hasTaskId_ = !!value;
}
@synthesize taskId;
- (BOOL) hasNumTimesActed {
  return !!hasNumTimesActed_;
}
- (void) setHasNumTimesActed:(BOOL) value {
  hasNumTimesActed_ = !!value;
}
@synthesize numTimesActed;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.taskId = 0;
    self.numTimesActed = 0;
  }
  return self;
}
static MinimumUserTaskProto* defaultMinimumUserTaskProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserTaskProto class]) {
    defaultMinimumUserTaskProtoInstance = [[MinimumUserTaskProto alloc] init];
  }
}
+ (MinimumUserTaskProto*) defaultInstance {
  return defaultMinimumUserTaskProtoInstance;
}
- (MinimumUserTaskProto*) defaultInstance {
  return defaultMinimumUserTaskProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasTaskId) {
    return NO;
  }
  if (!self.hasNumTimesActed) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasTaskId) {
    [output writeInt32:2 value:self.taskId];
  }
  if (self.hasNumTimesActed) {
    [output writeInt32:3 value:self.numTimesActed];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasTaskId) {
    size += computeInt32Size(2, self.taskId);
  }
  if (self.hasNumTimesActed) {
    size += computeInt32Size(3, self.numTimesActed);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserTaskProto*) parseFromData:(NSData*) data {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromData:data] build];
}
+ (MinimumUserTaskProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserTaskProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserTaskProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserTaskProto*)[[[MinimumUserTaskProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserTaskProto_Builder*) builder {
  return [[[MinimumUserTaskProto_Builder alloc] init] autorelease];
}
+ (MinimumUserTaskProto_Builder*) builderWithPrototype:(MinimumUserTaskProto*) prototype {
  return [[MinimumUserTaskProto builder] mergeFrom:prototype];
}
- (MinimumUserTaskProto_Builder*) builder {
  return [MinimumUserTaskProto builder];
}
@end

@interface MinimumUserTaskProto_Builder()
@property (retain) MinimumUserTaskProto* result;
@end

@implementation MinimumUserTaskProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserTaskProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserTaskProto_Builder*) clear {
  self.result = [[[MinimumUserTaskProto alloc] init] autorelease];
  return self;
}
- (MinimumUserTaskProto_Builder*) clone {
  return [MinimumUserTaskProto builderWithPrototype:result];
}
- (MinimumUserTaskProto*) defaultInstance {
  return [MinimumUserTaskProto defaultInstance];
}
- (MinimumUserTaskProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserTaskProto*) buildPartial {
  MinimumUserTaskProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserTaskProto_Builder*) mergeFrom:(MinimumUserTaskProto*) other {
  if (other == [MinimumUserTaskProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasTaskId) {
    [self setTaskId:other.taskId];
  }
  if (other.hasNumTimesActed) {
    [self setNumTimesActed:other.numTimesActed];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setTaskId:[input readInt32]];
        break;
      }
      case 24: {
        [self setNumTimesActed:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserTaskProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserTaskProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasTaskId {
  return result.hasTaskId;
}
- (int32_t) taskId {
  return result.taskId;
}
- (MinimumUserTaskProto_Builder*) setTaskId:(int32_t) value {
  result.hasTaskId = YES;
  result.taskId = value;
  return self;
}
- (MinimumUserTaskProto_Builder*) clearTaskId {
  result.hasTaskId = NO;
  result.taskId = 0;
  return self;
}
- (BOOL) hasNumTimesActed {
  return result.hasNumTimesActed;
}
- (int32_t) numTimesActed {
  return result.numTimesActed;
}
- (MinimumUserTaskProto_Builder*) setNumTimesActed:(int32_t) value {
  result.hasNumTimesActed = YES;
  result.numTimesActed = value;
  return self;
}
- (MinimumUserTaskProto_Builder*) clearNumTimesActed {
  result.hasNumTimesActed = NO;
  result.numTimesActed = 0;
  return self;
}
@end

@interface MinimumUserQuestTaskProto ()
@property int32_t userId;
@property int32_t questId;
@property (retain) FullTaskProto* task;
@property int32_t numTimesActed;
@end

@implementation MinimumUserQuestTaskProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasTask {
  return !!hasTask_;
}
- (void) setHasTask:(BOOL) value {
  hasTask_ = !!value;
}
@synthesize task;
- (BOOL) hasNumTimesActed {
  return !!hasNumTimesActed_;
}
- (void) setHasNumTimesActed:(BOOL) value {
  hasNumTimesActed_ = !!value;
}
@synthesize numTimesActed;
- (void) dealloc {
  self.task = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.questId = 0;
    self.task = [FullTaskProto defaultInstance];
    self.numTimesActed = 0;
  }
  return self;
}
static MinimumUserQuestTaskProto* defaultMinimumUserQuestTaskProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserQuestTaskProto class]) {
    defaultMinimumUserQuestTaskProtoInstance = [[MinimumUserQuestTaskProto alloc] init];
  }
}
+ (MinimumUserQuestTaskProto*) defaultInstance {
  return defaultMinimumUserQuestTaskProtoInstance;
}
- (MinimumUserQuestTaskProto*) defaultInstance {
  return defaultMinimumUserQuestTaskProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasQuestId) {
    return NO;
  }
  if (!self.hasTask) {
    return NO;
  }
  if (!self.hasNumTimesActed) {
    return NO;
  }
  if (!self.task.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasTask) {
    [output writeMessage:3 value:self.task];
  }
  if (self.hasNumTimesActed) {
    [output writeInt32:4 value:self.numTimesActed];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasTask) {
    size += computeMessageSize(3, self.task);
  }
  if (self.hasNumTimesActed) {
    size += computeInt32Size(4, self.numTimesActed);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserQuestTaskProto*) parseFromData:(NSData*) data {
  return (MinimumUserQuestTaskProto*)[[[MinimumUserQuestTaskProto builder] mergeFromData:data] build];
}
+ (MinimumUserQuestTaskProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserQuestTaskProto*)[[[MinimumUserQuestTaskProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserQuestTaskProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserQuestTaskProto*)[[[MinimumUserQuestTaskProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserQuestTaskProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserQuestTaskProto*)[[[MinimumUserQuestTaskProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserQuestTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserQuestTaskProto*)[[[MinimumUserQuestTaskProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserQuestTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserQuestTaskProto*)[[[MinimumUserQuestTaskProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserQuestTaskProto_Builder*) builder {
  return [[[MinimumUserQuestTaskProto_Builder alloc] init] autorelease];
}
+ (MinimumUserQuestTaskProto_Builder*) builderWithPrototype:(MinimumUserQuestTaskProto*) prototype {
  return [[MinimumUserQuestTaskProto builder] mergeFrom:prototype];
}
- (MinimumUserQuestTaskProto_Builder*) builder {
  return [MinimumUserQuestTaskProto builder];
}
@end

@interface MinimumUserQuestTaskProto_Builder()
@property (retain) MinimumUserQuestTaskProto* result;
@end

@implementation MinimumUserQuestTaskProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserQuestTaskProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserQuestTaskProto_Builder*) clear {
  self.result = [[[MinimumUserQuestTaskProto alloc] init] autorelease];
  return self;
}
- (MinimumUserQuestTaskProto_Builder*) clone {
  return [MinimumUserQuestTaskProto builderWithPrototype:result];
}
- (MinimumUserQuestTaskProto*) defaultInstance {
  return [MinimumUserQuestTaskProto defaultInstance];
}
- (MinimumUserQuestTaskProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserQuestTaskProto*) buildPartial {
  MinimumUserQuestTaskProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserQuestTaskProto_Builder*) mergeFrom:(MinimumUserQuestTaskProto*) other {
  if (other == [MinimumUserQuestTaskProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasTask) {
    [self mergeTask:other.task];
  }
  if (other.hasNumTimesActed) {
    [self setNumTimesActed:other.numTimesActed];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserQuestTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserQuestTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 26: {
        FullTaskProto_Builder* subBuilder = [FullTaskProto builder];
        if (self.hasTask) {
          [subBuilder mergeFrom:self.task];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTask:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setNumTimesActed:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserQuestTaskProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserQuestTaskProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (MinimumUserQuestTaskProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (MinimumUserQuestTaskProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasTask {
  return result.hasTask;
}
- (FullTaskProto*) task {
  return result.task;
}
- (MinimumUserQuestTaskProto_Builder*) setTask:(FullTaskProto*) value {
  result.hasTask = YES;
  result.task = value;
  return self;
}
- (MinimumUserQuestTaskProto_Builder*) setTaskBuilder:(FullTaskProto_Builder*) builderForValue {
  return [self setTask:[builderForValue build]];
}
- (MinimumUserQuestTaskProto_Builder*) mergeTask:(FullTaskProto*) value {
  if (result.hasTask &&
      result.task != [FullTaskProto defaultInstance]) {
    result.task =
      [[[FullTaskProto builderWithPrototype:result.task] mergeFrom:value] buildPartial];
  } else {
    result.task = value;
  }
  result.hasTask = YES;
  return self;
}
- (MinimumUserQuestTaskProto_Builder*) clearTask {
  result.hasTask = NO;
  result.task = [FullTaskProto defaultInstance];
  return self;
}
- (BOOL) hasNumTimesActed {
  return result.hasNumTimesActed;
}
- (int32_t) numTimesActed {
  return result.numTimesActed;
}
- (MinimumUserQuestTaskProto_Builder*) setNumTimesActed:(int32_t) value {
  result.hasNumTimesActed = YES;
  result.numTimesActed = value;
  return self;
}
- (MinimumUserQuestTaskProto_Builder*) clearNumTimesActed {
  result.hasNumTimesActed = NO;
  result.numTimesActed = 0;
  return self;
}
@end

@interface FullUserQuestDataLargeProto ()
@property int32_t userId;
@property int32_t questId;
@property BOOL redeemed;
@property (retain) NSMutableArray* mutableRequiredTasksProgressList;
@property (retain) NSMutableArray* mutableRequiredDefeatTypeJobProgressList;
@property (retain) NSMutableArray* mutableRequiredBuildStructJobProgressList;
@property (retain) NSMutableArray* mutableRequiredUpgradeStructJobProgressList;
@property (retain) NSMutableArray* mutableRequiredPossessEquipJobProgressList;
@end

@implementation FullUserQuestDataLargeProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasRedeemed {
  return !!hasRedeemed_;
}
- (void) setHasRedeemed:(BOOL) value {
  hasRedeemed_ = !!value;
}
- (BOOL) redeemed {
  return !!redeemed_;
}
- (void) setRedeemed:(BOOL) value {
  redeemed_ = !!value;
}
@synthesize mutableRequiredTasksProgressList;
@synthesize mutableRequiredDefeatTypeJobProgressList;
@synthesize mutableRequiredBuildStructJobProgressList;
@synthesize mutableRequiredUpgradeStructJobProgressList;
@synthesize mutableRequiredPossessEquipJobProgressList;
- (void) dealloc {
  self.mutableRequiredTasksProgressList = nil;
  self.mutableRequiredDefeatTypeJobProgressList = nil;
  self.mutableRequiredBuildStructJobProgressList = nil;
  self.mutableRequiredUpgradeStructJobProgressList = nil;
  self.mutableRequiredPossessEquipJobProgressList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.questId = 0;
    self.redeemed = NO;
  }
  return self;
}
static FullUserQuestDataLargeProto* defaultFullUserQuestDataLargeProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserQuestDataLargeProto class]) {
    defaultFullUserQuestDataLargeProtoInstance = [[FullUserQuestDataLargeProto alloc] init];
  }
}
+ (FullUserQuestDataLargeProto*) defaultInstance {
  return defaultFullUserQuestDataLargeProtoInstance;
}
- (FullUserQuestDataLargeProto*) defaultInstance {
  return defaultFullUserQuestDataLargeProtoInstance;
}
- (NSArray*) requiredTasksProgressList {
  return mutableRequiredTasksProgressList;
}
- (MinimumUserQuestTaskProto*) requiredTasksProgressAtIndex:(int32_t) index {
  id value = [mutableRequiredTasksProgressList objectAtIndex:index];
  return value;
}
- (NSArray*) requiredDefeatTypeJobProgressList {
  return mutableRequiredDefeatTypeJobProgressList;
}
- (MinimumUserDefeatTypeJobProto*) requiredDefeatTypeJobProgressAtIndex:(int32_t) index {
  id value = [mutableRequiredDefeatTypeJobProgressList objectAtIndex:index];
  return value;
}
- (NSArray*) requiredBuildStructJobProgressList {
  return mutableRequiredBuildStructJobProgressList;
}
- (MinimumUserBuildStructJobProto*) requiredBuildStructJobProgressAtIndex:(int32_t) index {
  id value = [mutableRequiredBuildStructJobProgressList objectAtIndex:index];
  return value;
}
- (NSArray*) requiredUpgradeStructJobProgressList {
  return mutableRequiredUpgradeStructJobProgressList;
}
- (MinimumUserUpgradeStructJobProto*) requiredUpgradeStructJobProgressAtIndex:(int32_t) index {
  id value = [mutableRequiredUpgradeStructJobProgressList objectAtIndex:index];
  return value;
}
- (NSArray*) requiredPossessEquipJobProgressList {
  return mutableRequiredPossessEquipJobProgressList;
}
- (MinimumUserPossessEquipJobProto*) requiredPossessEquipJobProgressAtIndex:(int32_t) index {
  id value = [mutableRequiredPossessEquipJobProgressList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasQuestId) {
    return NO;
  }
  if (!self.hasRedeemed) {
    return NO;
  }
  for (MinimumUserQuestTaskProto* element in self.requiredTasksProgressList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (MinimumUserDefeatTypeJobProto* element in self.requiredDefeatTypeJobProgressList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (MinimumUserBuildStructJobProto* element in self.requiredBuildStructJobProgressList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (MinimumUserUpgradeStructJobProto* element in self.requiredUpgradeStructJobProgressList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (MinimumUserPossessEquipJobProto* element in self.requiredPossessEquipJobProgressList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasRedeemed) {
    [output writeBool:3 value:self.redeemed];
  }
  for (MinimumUserQuestTaskProto* element in self.requiredTasksProgressList) {
    [output writeMessage:4 value:element];
  }
  for (MinimumUserDefeatTypeJobProto* element in self.requiredDefeatTypeJobProgressList) {
    [output writeMessage:5 value:element];
  }
  for (MinimumUserBuildStructJobProto* element in self.requiredBuildStructJobProgressList) {
    [output writeMessage:6 value:element];
  }
  for (MinimumUserUpgradeStructJobProto* element in self.requiredUpgradeStructJobProgressList) {
    [output writeMessage:7 value:element];
  }
  for (MinimumUserPossessEquipJobProto* element in self.requiredPossessEquipJobProgressList) {
    [output writeMessage:8 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasRedeemed) {
    size += computeBoolSize(3, self.redeemed);
  }
  for (MinimumUserQuestTaskProto* element in self.requiredTasksProgressList) {
    size += computeMessageSize(4, element);
  }
  for (MinimumUserDefeatTypeJobProto* element in self.requiredDefeatTypeJobProgressList) {
    size += computeMessageSize(5, element);
  }
  for (MinimumUserBuildStructJobProto* element in self.requiredBuildStructJobProgressList) {
    size += computeMessageSize(6, element);
  }
  for (MinimumUserUpgradeStructJobProto* element in self.requiredUpgradeStructJobProgressList) {
    size += computeMessageSize(7, element);
  }
  for (MinimumUserPossessEquipJobProto* element in self.requiredPossessEquipJobProgressList) {
    size += computeMessageSize(8, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserQuestDataLargeProto*) parseFromData:(NSData*) data {
  return (FullUserQuestDataLargeProto*)[[[FullUserQuestDataLargeProto builder] mergeFromData:data] build];
}
+ (FullUserQuestDataLargeProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserQuestDataLargeProto*)[[[FullUserQuestDataLargeProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserQuestDataLargeProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserQuestDataLargeProto*)[[[FullUserQuestDataLargeProto builder] mergeFromInputStream:input] build];
}
+ (FullUserQuestDataLargeProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserQuestDataLargeProto*)[[[FullUserQuestDataLargeProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserQuestDataLargeProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserQuestDataLargeProto*)[[[FullUserQuestDataLargeProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserQuestDataLargeProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserQuestDataLargeProto*)[[[FullUserQuestDataLargeProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserQuestDataLargeProto_Builder*) builder {
  return [[[FullUserQuestDataLargeProto_Builder alloc] init] autorelease];
}
+ (FullUserQuestDataLargeProto_Builder*) builderWithPrototype:(FullUserQuestDataLargeProto*) prototype {
  return [[FullUserQuestDataLargeProto builder] mergeFrom:prototype];
}
- (FullUserQuestDataLargeProto_Builder*) builder {
  return [FullUserQuestDataLargeProto builder];
}
@end

@interface FullUserQuestDataLargeProto_Builder()
@property (retain) FullUserQuestDataLargeProto* result;
@end

@implementation FullUserQuestDataLargeProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserQuestDataLargeProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserQuestDataLargeProto_Builder*) clear {
  self.result = [[[FullUserQuestDataLargeProto alloc] init] autorelease];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clone {
  return [FullUserQuestDataLargeProto builderWithPrototype:result];
}
- (FullUserQuestDataLargeProto*) defaultInstance {
  return [FullUserQuestDataLargeProto defaultInstance];
}
- (FullUserQuestDataLargeProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserQuestDataLargeProto*) buildPartial {
  FullUserQuestDataLargeProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserQuestDataLargeProto_Builder*) mergeFrom:(FullUserQuestDataLargeProto*) other {
  if (other == [FullUserQuestDataLargeProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasRedeemed) {
    [self setRedeemed:other.redeemed];
  }
  if (other.mutableRequiredTasksProgressList.count > 0) {
    if (result.mutableRequiredTasksProgressList == nil) {
      result.mutableRequiredTasksProgressList = [NSMutableArray array];
    }
    [result.mutableRequiredTasksProgressList addObjectsFromArray:other.mutableRequiredTasksProgressList];
  }
  if (other.mutableRequiredDefeatTypeJobProgressList.count > 0) {
    if (result.mutableRequiredDefeatTypeJobProgressList == nil) {
      result.mutableRequiredDefeatTypeJobProgressList = [NSMutableArray array];
    }
    [result.mutableRequiredDefeatTypeJobProgressList addObjectsFromArray:other.mutableRequiredDefeatTypeJobProgressList];
  }
  if (other.mutableRequiredBuildStructJobProgressList.count > 0) {
    if (result.mutableRequiredBuildStructJobProgressList == nil) {
      result.mutableRequiredBuildStructJobProgressList = [NSMutableArray array];
    }
    [result.mutableRequiredBuildStructJobProgressList addObjectsFromArray:other.mutableRequiredBuildStructJobProgressList];
  }
  if (other.mutableRequiredUpgradeStructJobProgressList.count > 0) {
    if (result.mutableRequiredUpgradeStructJobProgressList == nil) {
      result.mutableRequiredUpgradeStructJobProgressList = [NSMutableArray array];
    }
    [result.mutableRequiredUpgradeStructJobProgressList addObjectsFromArray:other.mutableRequiredUpgradeStructJobProgressList];
  }
  if (other.mutableRequiredPossessEquipJobProgressList.count > 0) {
    if (result.mutableRequiredPossessEquipJobProgressList == nil) {
      result.mutableRequiredPossessEquipJobProgressList = [NSMutableArray array];
    }
    [result.mutableRequiredPossessEquipJobProgressList addObjectsFromArray:other.mutableRequiredPossessEquipJobProgressList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserQuestDataLargeProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 24: {
        [self setRedeemed:[input readBool]];
        break;
      }
      case 34: {
        MinimumUserQuestTaskProto_Builder* subBuilder = [MinimumUserQuestTaskProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRequiredTasksProgress:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        MinimumUserDefeatTypeJobProto_Builder* subBuilder = [MinimumUserDefeatTypeJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRequiredDefeatTypeJobProgress:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        MinimumUserBuildStructJobProto_Builder* subBuilder = [MinimumUserBuildStructJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRequiredBuildStructJobProgress:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        MinimumUserUpgradeStructJobProto_Builder* subBuilder = [MinimumUserUpgradeStructJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRequiredUpgradeStructJobProgress:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        MinimumUserPossessEquipJobProto_Builder* subBuilder = [MinimumUserPossessEquipJobProto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRequiredPossessEquipJobProgress:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserQuestDataLargeProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (FullUserQuestDataLargeProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasRedeemed {
  return result.hasRedeemed;
}
- (BOOL) redeemed {
  return result.redeemed;
}
- (FullUserQuestDataLargeProto_Builder*) setRedeemed:(BOOL) value {
  result.hasRedeemed = YES;
  result.redeemed = value;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearRedeemed {
  result.hasRedeemed = NO;
  result.redeemed = NO;
  return self;
}
- (NSArray*) requiredTasksProgressList {
  if (result.mutableRequiredTasksProgressList == nil) { return [NSArray array]; }
  return result.mutableRequiredTasksProgressList;
}
- (MinimumUserQuestTaskProto*) requiredTasksProgressAtIndex:(int32_t) index {
  return [result requiredTasksProgressAtIndex:index];
}
- (FullUserQuestDataLargeProto_Builder*) replaceRequiredTasksProgressAtIndex:(int32_t) index with:(MinimumUserQuestTaskProto*) value {
  [result.mutableRequiredTasksProgressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addAllRequiredTasksProgress:(NSArray*) values {
  if (result.mutableRequiredTasksProgressList == nil) {
    result.mutableRequiredTasksProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredTasksProgressList addObjectsFromArray:values];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearRequiredTasksProgressList {
  result.mutableRequiredTasksProgressList = nil;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addRequiredTasksProgress:(MinimumUserQuestTaskProto*) value {
  if (result.mutableRequiredTasksProgressList == nil) {
    result.mutableRequiredTasksProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredTasksProgressList addObject:value];
  return self;
}
- (NSArray*) requiredDefeatTypeJobProgressList {
  if (result.mutableRequiredDefeatTypeJobProgressList == nil) { return [NSArray array]; }
  return result.mutableRequiredDefeatTypeJobProgressList;
}
- (MinimumUserDefeatTypeJobProto*) requiredDefeatTypeJobProgressAtIndex:(int32_t) index {
  return [result requiredDefeatTypeJobProgressAtIndex:index];
}
- (FullUserQuestDataLargeProto_Builder*) replaceRequiredDefeatTypeJobProgressAtIndex:(int32_t) index with:(MinimumUserDefeatTypeJobProto*) value {
  [result.mutableRequiredDefeatTypeJobProgressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addAllRequiredDefeatTypeJobProgress:(NSArray*) values {
  if (result.mutableRequiredDefeatTypeJobProgressList == nil) {
    result.mutableRequiredDefeatTypeJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredDefeatTypeJobProgressList addObjectsFromArray:values];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearRequiredDefeatTypeJobProgressList {
  result.mutableRequiredDefeatTypeJobProgressList = nil;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addRequiredDefeatTypeJobProgress:(MinimumUserDefeatTypeJobProto*) value {
  if (result.mutableRequiredDefeatTypeJobProgressList == nil) {
    result.mutableRequiredDefeatTypeJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredDefeatTypeJobProgressList addObject:value];
  return self;
}
- (NSArray*) requiredBuildStructJobProgressList {
  if (result.mutableRequiredBuildStructJobProgressList == nil) { return [NSArray array]; }
  return result.mutableRequiredBuildStructJobProgressList;
}
- (MinimumUserBuildStructJobProto*) requiredBuildStructJobProgressAtIndex:(int32_t) index {
  return [result requiredBuildStructJobProgressAtIndex:index];
}
- (FullUserQuestDataLargeProto_Builder*) replaceRequiredBuildStructJobProgressAtIndex:(int32_t) index with:(MinimumUserBuildStructJobProto*) value {
  [result.mutableRequiredBuildStructJobProgressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addAllRequiredBuildStructJobProgress:(NSArray*) values {
  if (result.mutableRequiredBuildStructJobProgressList == nil) {
    result.mutableRequiredBuildStructJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredBuildStructJobProgressList addObjectsFromArray:values];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearRequiredBuildStructJobProgressList {
  result.mutableRequiredBuildStructJobProgressList = nil;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addRequiredBuildStructJobProgress:(MinimumUserBuildStructJobProto*) value {
  if (result.mutableRequiredBuildStructJobProgressList == nil) {
    result.mutableRequiredBuildStructJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredBuildStructJobProgressList addObject:value];
  return self;
}
- (NSArray*) requiredUpgradeStructJobProgressList {
  if (result.mutableRequiredUpgradeStructJobProgressList == nil) { return [NSArray array]; }
  return result.mutableRequiredUpgradeStructJobProgressList;
}
- (MinimumUserUpgradeStructJobProto*) requiredUpgradeStructJobProgressAtIndex:(int32_t) index {
  return [result requiredUpgradeStructJobProgressAtIndex:index];
}
- (FullUserQuestDataLargeProto_Builder*) replaceRequiredUpgradeStructJobProgressAtIndex:(int32_t) index with:(MinimumUserUpgradeStructJobProto*) value {
  [result.mutableRequiredUpgradeStructJobProgressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addAllRequiredUpgradeStructJobProgress:(NSArray*) values {
  if (result.mutableRequiredUpgradeStructJobProgressList == nil) {
    result.mutableRequiredUpgradeStructJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredUpgradeStructJobProgressList addObjectsFromArray:values];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearRequiredUpgradeStructJobProgressList {
  result.mutableRequiredUpgradeStructJobProgressList = nil;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addRequiredUpgradeStructJobProgress:(MinimumUserUpgradeStructJobProto*) value {
  if (result.mutableRequiredUpgradeStructJobProgressList == nil) {
    result.mutableRequiredUpgradeStructJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredUpgradeStructJobProgressList addObject:value];
  return self;
}
- (NSArray*) requiredPossessEquipJobProgressList {
  if (result.mutableRequiredPossessEquipJobProgressList == nil) { return [NSArray array]; }
  return result.mutableRequiredPossessEquipJobProgressList;
}
- (MinimumUserPossessEquipJobProto*) requiredPossessEquipJobProgressAtIndex:(int32_t) index {
  return [result requiredPossessEquipJobProgressAtIndex:index];
}
- (FullUserQuestDataLargeProto_Builder*) replaceRequiredPossessEquipJobProgressAtIndex:(int32_t) index with:(MinimumUserPossessEquipJobProto*) value {
  [result.mutableRequiredPossessEquipJobProgressList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addAllRequiredPossessEquipJobProgress:(NSArray*) values {
  if (result.mutableRequiredPossessEquipJobProgressList == nil) {
    result.mutableRequiredPossessEquipJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredPossessEquipJobProgressList addObjectsFromArray:values];
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) clearRequiredPossessEquipJobProgressList {
  result.mutableRequiredPossessEquipJobProgressList = nil;
  return self;
}
- (FullUserQuestDataLargeProto_Builder*) addRequiredPossessEquipJobProgress:(MinimumUserPossessEquipJobProto*) value {
  if (result.mutableRequiredPossessEquipJobProgressList == nil) {
    result.mutableRequiredPossessEquipJobProgressList = [NSMutableArray array];
  }
  [result.mutableRequiredPossessEquipJobProgressList addObject:value];
  return self;
}
@end

@interface MinimumUserDefeatTypeJobProto ()
@property int32_t userId;
@property int32_t questId;
@property (retain) DefeatTypeJobProto* defeatTypeJobId;
@property int32_t numDefeated;
@end

@implementation MinimumUserDefeatTypeJobProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasDefeatTypeJobId {
  return !!hasDefeatTypeJobId_;
}
- (void) setHasDefeatTypeJobId:(BOOL) value {
  hasDefeatTypeJobId_ = !!value;
}
@synthesize defeatTypeJobId;
- (BOOL) hasNumDefeated {
  return !!hasNumDefeated_;
}
- (void) setHasNumDefeated:(BOOL) value {
  hasNumDefeated_ = !!value;
}
@synthesize numDefeated;
- (void) dealloc {
  self.defeatTypeJobId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.questId = 0;
    self.defeatTypeJobId = [DefeatTypeJobProto defaultInstance];
    self.numDefeated = 0;
  }
  return self;
}
static MinimumUserDefeatTypeJobProto* defaultMinimumUserDefeatTypeJobProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserDefeatTypeJobProto class]) {
    defaultMinimumUserDefeatTypeJobProtoInstance = [[MinimumUserDefeatTypeJobProto alloc] init];
  }
}
+ (MinimumUserDefeatTypeJobProto*) defaultInstance {
  return defaultMinimumUserDefeatTypeJobProtoInstance;
}
- (MinimumUserDefeatTypeJobProto*) defaultInstance {
  return defaultMinimumUserDefeatTypeJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasQuestId) {
    return NO;
  }
  if (!self.hasDefeatTypeJobId) {
    return NO;
  }
  if (!self.hasNumDefeated) {
    return NO;
  }
  if (!self.defeatTypeJobId.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasDefeatTypeJobId) {
    [output writeMessage:3 value:self.defeatTypeJobId];
  }
  if (self.hasNumDefeated) {
    [output writeInt32:4 value:self.numDefeated];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasDefeatTypeJobId) {
    size += computeMessageSize(3, self.defeatTypeJobId);
  }
  if (self.hasNumDefeated) {
    size += computeInt32Size(4, self.numDefeated);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserDefeatTypeJobProto*) parseFromData:(NSData*) data {
  return (MinimumUserDefeatTypeJobProto*)[[[MinimumUserDefeatTypeJobProto builder] mergeFromData:data] build];
}
+ (MinimumUserDefeatTypeJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserDefeatTypeJobProto*)[[[MinimumUserDefeatTypeJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserDefeatTypeJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserDefeatTypeJobProto*)[[[MinimumUserDefeatTypeJobProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserDefeatTypeJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserDefeatTypeJobProto*)[[[MinimumUserDefeatTypeJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserDefeatTypeJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserDefeatTypeJobProto*)[[[MinimumUserDefeatTypeJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserDefeatTypeJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserDefeatTypeJobProto*)[[[MinimumUserDefeatTypeJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserDefeatTypeJobProto_Builder*) builder {
  return [[[MinimumUserDefeatTypeJobProto_Builder alloc] init] autorelease];
}
+ (MinimumUserDefeatTypeJobProto_Builder*) builderWithPrototype:(MinimumUserDefeatTypeJobProto*) prototype {
  return [[MinimumUserDefeatTypeJobProto builder] mergeFrom:prototype];
}
- (MinimumUserDefeatTypeJobProto_Builder*) builder {
  return [MinimumUserDefeatTypeJobProto builder];
}
@end

@interface MinimumUserDefeatTypeJobProto_Builder()
@property (retain) MinimumUserDefeatTypeJobProto* result;
@end

@implementation MinimumUserDefeatTypeJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserDefeatTypeJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserDefeatTypeJobProto_Builder*) clear {
  self.result = [[[MinimumUserDefeatTypeJobProto alloc] init] autorelease];
  return self;
}
- (MinimumUserDefeatTypeJobProto_Builder*) clone {
  return [MinimumUserDefeatTypeJobProto builderWithPrototype:result];
}
- (MinimumUserDefeatTypeJobProto*) defaultInstance {
  return [MinimumUserDefeatTypeJobProto defaultInstance];
}
- (MinimumUserDefeatTypeJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserDefeatTypeJobProto*) buildPartial {
  MinimumUserDefeatTypeJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserDefeatTypeJobProto_Builder*) mergeFrom:(MinimumUserDefeatTypeJobProto*) other {
  if (other == [MinimumUserDefeatTypeJobProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasDefeatTypeJobId) {
    [self mergeDefeatTypeJobId:other.defeatTypeJobId];
  }
  if (other.hasNumDefeated) {
    [self setNumDefeated:other.numDefeated];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserDefeatTypeJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserDefeatTypeJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 26: {
        DefeatTypeJobProto_Builder* subBuilder = [DefeatTypeJobProto builder];
        if (self.hasDefeatTypeJobId) {
          [subBuilder mergeFrom:self.defeatTypeJobId];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDefeatTypeJobId:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setNumDefeated:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserDefeatTypeJobProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserDefeatTypeJobProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (MinimumUserDefeatTypeJobProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (MinimumUserDefeatTypeJobProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasDefeatTypeJobId {
  return result.hasDefeatTypeJobId;
}
- (DefeatTypeJobProto*) defeatTypeJobId {
  return result.defeatTypeJobId;
}
- (MinimumUserDefeatTypeJobProto_Builder*) setDefeatTypeJobId:(DefeatTypeJobProto*) value {
  result.hasDefeatTypeJobId = YES;
  result.defeatTypeJobId = value;
  return self;
}
- (MinimumUserDefeatTypeJobProto_Builder*) setDefeatTypeJobIdBuilder:(DefeatTypeJobProto_Builder*) builderForValue {
  return [self setDefeatTypeJobId:[builderForValue build]];
}
- (MinimumUserDefeatTypeJobProto_Builder*) mergeDefeatTypeJobId:(DefeatTypeJobProto*) value {
  if (result.hasDefeatTypeJobId &&
      result.defeatTypeJobId != [DefeatTypeJobProto defaultInstance]) {
    result.defeatTypeJobId =
      [[[DefeatTypeJobProto builderWithPrototype:result.defeatTypeJobId] mergeFrom:value] buildPartial];
  } else {
    result.defeatTypeJobId = value;
  }
  result.hasDefeatTypeJobId = YES;
  return self;
}
- (MinimumUserDefeatTypeJobProto_Builder*) clearDefeatTypeJobId {
  result.hasDefeatTypeJobId = NO;
  result.defeatTypeJobId = [DefeatTypeJobProto defaultInstance];
  return self;
}
- (BOOL) hasNumDefeated {
  return result.hasNumDefeated;
}
- (int32_t) numDefeated {
  return result.numDefeated;
}
- (MinimumUserDefeatTypeJobProto_Builder*) setNumDefeated:(int32_t) value {
  result.hasNumDefeated = YES;
  result.numDefeated = value;
  return self;
}
- (MinimumUserDefeatTypeJobProto_Builder*) clearNumDefeated {
  result.hasNumDefeated = NO;
  result.numDefeated = 0;
  return self;
}
@end

@interface DefeatTypeJobProto ()
@property int32_t defeatTypeJobId;
@property UserType typeOfEnemy;
@property int32_t numEnemiesToDefeat;
@property int32_t cityId;
@end

@implementation DefeatTypeJobProto

- (BOOL) hasDefeatTypeJobId {
  return !!hasDefeatTypeJobId_;
}
- (void) setHasDefeatTypeJobId:(BOOL) value {
  hasDefeatTypeJobId_ = !!value;
}
@synthesize defeatTypeJobId;
- (BOOL) hasTypeOfEnemy {
  return !!hasTypeOfEnemy_;
}
- (void) setHasTypeOfEnemy:(BOOL) value {
  hasTypeOfEnemy_ = !!value;
}
@synthesize typeOfEnemy;
- (BOOL) hasNumEnemiesToDefeat {
  return !!hasNumEnemiesToDefeat_;
}
- (void) setHasNumEnemiesToDefeat:(BOOL) value {
  hasNumEnemiesToDefeat_ = !!value;
}
@synthesize numEnemiesToDefeat;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.defeatTypeJobId = 0;
    self.typeOfEnemy = UserTypeGoodWarrior;
    self.numEnemiesToDefeat = 0;
    self.cityId = 0;
  }
  return self;
}
static DefeatTypeJobProto* defaultDefeatTypeJobProtoInstance = nil;
+ (void) initialize {
  if (self == [DefeatTypeJobProto class]) {
    defaultDefeatTypeJobProtoInstance = [[DefeatTypeJobProto alloc] init];
  }
}
+ (DefeatTypeJobProto*) defaultInstance {
  return defaultDefeatTypeJobProtoInstance;
}
- (DefeatTypeJobProto*) defaultInstance {
  return defaultDefeatTypeJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDefeatTypeJobId) {
    return NO;
  }
  if (!self.hasTypeOfEnemy) {
    return NO;
  }
  if (!self.hasNumEnemiesToDefeat) {
    return NO;
  }
  if (!self.hasCityId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDefeatTypeJobId) {
    [output writeInt32:1 value:self.defeatTypeJobId];
  }
  if (self.hasTypeOfEnemy) {
    [output writeEnum:2 value:self.typeOfEnemy];
  }
  if (self.hasNumEnemiesToDefeat) {
    [output writeInt32:3 value:self.numEnemiesToDefeat];
  }
  if (self.hasCityId) {
    [output writeInt32:4 value:self.cityId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDefeatTypeJobId) {
    size += computeInt32Size(1, self.defeatTypeJobId);
  }
  if (self.hasTypeOfEnemy) {
    size += computeEnumSize(2, self.typeOfEnemy);
  }
  if (self.hasNumEnemiesToDefeat) {
    size += computeInt32Size(3, self.numEnemiesToDefeat);
  }
  if (self.hasCityId) {
    size += computeInt32Size(4, self.cityId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DefeatTypeJobProto*) parseFromData:(NSData*) data {
  return (DefeatTypeJobProto*)[[[DefeatTypeJobProto builder] mergeFromData:data] build];
}
+ (DefeatTypeJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DefeatTypeJobProto*)[[[DefeatTypeJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DefeatTypeJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (DefeatTypeJobProto*)[[[DefeatTypeJobProto builder] mergeFromInputStream:input] build];
}
+ (DefeatTypeJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DefeatTypeJobProto*)[[[DefeatTypeJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DefeatTypeJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DefeatTypeJobProto*)[[[DefeatTypeJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (DefeatTypeJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DefeatTypeJobProto*)[[[DefeatTypeJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DefeatTypeJobProto_Builder*) builder {
  return [[[DefeatTypeJobProto_Builder alloc] init] autorelease];
}
+ (DefeatTypeJobProto_Builder*) builderWithPrototype:(DefeatTypeJobProto*) prototype {
  return [[DefeatTypeJobProto builder] mergeFrom:prototype];
}
- (DefeatTypeJobProto_Builder*) builder {
  return [DefeatTypeJobProto builder];
}
@end

@interface DefeatTypeJobProto_Builder()
@property (retain) DefeatTypeJobProto* result;
@end

@implementation DefeatTypeJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DefeatTypeJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DefeatTypeJobProto_Builder*) clear {
  self.result = [[[DefeatTypeJobProto alloc] init] autorelease];
  return self;
}
- (DefeatTypeJobProto_Builder*) clone {
  return [DefeatTypeJobProto builderWithPrototype:result];
}
- (DefeatTypeJobProto*) defaultInstance {
  return [DefeatTypeJobProto defaultInstance];
}
- (DefeatTypeJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DefeatTypeJobProto*) buildPartial {
  DefeatTypeJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DefeatTypeJobProto_Builder*) mergeFrom:(DefeatTypeJobProto*) other {
  if (other == [DefeatTypeJobProto defaultInstance]) {
    return self;
  }
  if (other.hasDefeatTypeJobId) {
    [self setDefeatTypeJobId:other.defeatTypeJobId];
  }
  if (other.hasTypeOfEnemy) {
    [self setTypeOfEnemy:other.typeOfEnemy];
  }
  if (other.hasNumEnemiesToDefeat) {
    [self setNumEnemiesToDefeat:other.numEnemiesToDefeat];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DefeatTypeJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DefeatTypeJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDefeatTypeJobId:[input readInt32]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (UserTypeIsValidValue(value)) {
          [self setTypeOfEnemy:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setNumEnemiesToDefeat:[input readInt32]];
        break;
      }
      case 32: {
        [self setCityId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasDefeatTypeJobId {
  return result.hasDefeatTypeJobId;
}
- (int32_t) defeatTypeJobId {
  return result.defeatTypeJobId;
}
- (DefeatTypeJobProto_Builder*) setDefeatTypeJobId:(int32_t) value {
  result.hasDefeatTypeJobId = YES;
  result.defeatTypeJobId = value;
  return self;
}
- (DefeatTypeJobProto_Builder*) clearDefeatTypeJobId {
  result.hasDefeatTypeJobId = NO;
  result.defeatTypeJobId = 0;
  return self;
}
- (BOOL) hasTypeOfEnemy {
  return result.hasTypeOfEnemy;
}
- (UserType) typeOfEnemy {
  return result.typeOfEnemy;
}
- (DefeatTypeJobProto_Builder*) setTypeOfEnemy:(UserType) value {
  result.hasTypeOfEnemy = YES;
  result.typeOfEnemy = value;
  return self;
}
- (DefeatTypeJobProto_Builder*) clearTypeOfEnemy {
  result.hasTypeOfEnemy = NO;
  result.typeOfEnemy = UserTypeGoodWarrior;
  return self;
}
- (BOOL) hasNumEnemiesToDefeat {
  return result.hasNumEnemiesToDefeat;
}
- (int32_t) numEnemiesToDefeat {
  return result.numEnemiesToDefeat;
}
- (DefeatTypeJobProto_Builder*) setNumEnemiesToDefeat:(int32_t) value {
  result.hasNumEnemiesToDefeat = YES;
  result.numEnemiesToDefeat = value;
  return self;
}
- (DefeatTypeJobProto_Builder*) clearNumEnemiesToDefeat {
  result.hasNumEnemiesToDefeat = NO;
  result.numEnemiesToDefeat = 0;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (DefeatTypeJobProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (DefeatTypeJobProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
@end

@interface MinimumUserBuildStructJobProto ()
@property int32_t userId;
@property int32_t questId;
@property (retain) BuildStructJobProto* buildStructJob;
@property int32_t numOfStructUserHas;
@end

@implementation MinimumUserBuildStructJobProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasBuildStructJob {
  return !!hasBuildStructJob_;
}
- (void) setHasBuildStructJob:(BOOL) value {
  hasBuildStructJob_ = !!value;
}
@synthesize buildStructJob;
- (BOOL) hasNumOfStructUserHas {
  return !!hasNumOfStructUserHas_;
}
- (void) setHasNumOfStructUserHas:(BOOL) value {
  hasNumOfStructUserHas_ = !!value;
}
@synthesize numOfStructUserHas;
- (void) dealloc {
  self.buildStructJob = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.questId = 0;
    self.buildStructJob = [BuildStructJobProto defaultInstance];
    self.numOfStructUserHas = 0;
  }
  return self;
}
static MinimumUserBuildStructJobProto* defaultMinimumUserBuildStructJobProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserBuildStructJobProto class]) {
    defaultMinimumUserBuildStructJobProtoInstance = [[MinimumUserBuildStructJobProto alloc] init];
  }
}
+ (MinimumUserBuildStructJobProto*) defaultInstance {
  return defaultMinimumUserBuildStructJobProtoInstance;
}
- (MinimumUserBuildStructJobProto*) defaultInstance {
  return defaultMinimumUserBuildStructJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasQuestId) {
    return NO;
  }
  if (!self.hasBuildStructJob) {
    return NO;
  }
  if (!self.hasNumOfStructUserHas) {
    return NO;
  }
  if (!self.buildStructJob.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasBuildStructJob) {
    [output writeMessage:3 value:self.buildStructJob];
  }
  if (self.hasNumOfStructUserHas) {
    [output writeInt32:4 value:self.numOfStructUserHas];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasBuildStructJob) {
    size += computeMessageSize(3, self.buildStructJob);
  }
  if (self.hasNumOfStructUserHas) {
    size += computeInt32Size(4, self.numOfStructUserHas);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserBuildStructJobProto*) parseFromData:(NSData*) data {
  return (MinimumUserBuildStructJobProto*)[[[MinimumUserBuildStructJobProto builder] mergeFromData:data] build];
}
+ (MinimumUserBuildStructJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserBuildStructJobProto*)[[[MinimumUserBuildStructJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserBuildStructJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserBuildStructJobProto*)[[[MinimumUserBuildStructJobProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserBuildStructJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserBuildStructJobProto*)[[[MinimumUserBuildStructJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserBuildStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserBuildStructJobProto*)[[[MinimumUserBuildStructJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserBuildStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserBuildStructJobProto*)[[[MinimumUserBuildStructJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserBuildStructJobProto_Builder*) builder {
  return [[[MinimumUserBuildStructJobProto_Builder alloc] init] autorelease];
}
+ (MinimumUserBuildStructJobProto_Builder*) builderWithPrototype:(MinimumUserBuildStructJobProto*) prototype {
  return [[MinimumUserBuildStructJobProto builder] mergeFrom:prototype];
}
- (MinimumUserBuildStructJobProto_Builder*) builder {
  return [MinimumUserBuildStructJobProto builder];
}
@end

@interface MinimumUserBuildStructJobProto_Builder()
@property (retain) MinimumUserBuildStructJobProto* result;
@end

@implementation MinimumUserBuildStructJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserBuildStructJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserBuildStructJobProto_Builder*) clear {
  self.result = [[[MinimumUserBuildStructJobProto alloc] init] autorelease];
  return self;
}
- (MinimumUserBuildStructJobProto_Builder*) clone {
  return [MinimumUserBuildStructJobProto builderWithPrototype:result];
}
- (MinimumUserBuildStructJobProto*) defaultInstance {
  return [MinimumUserBuildStructJobProto defaultInstance];
}
- (MinimumUserBuildStructJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserBuildStructJobProto*) buildPartial {
  MinimumUserBuildStructJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserBuildStructJobProto_Builder*) mergeFrom:(MinimumUserBuildStructJobProto*) other {
  if (other == [MinimumUserBuildStructJobProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasBuildStructJob) {
    [self mergeBuildStructJob:other.buildStructJob];
  }
  if (other.hasNumOfStructUserHas) {
    [self setNumOfStructUserHas:other.numOfStructUserHas];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserBuildStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserBuildStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 26: {
        BuildStructJobProto_Builder* subBuilder = [BuildStructJobProto builder];
        if (self.hasBuildStructJob) {
          [subBuilder mergeFrom:self.buildStructJob];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBuildStructJob:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setNumOfStructUserHas:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserBuildStructJobProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserBuildStructJobProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (MinimumUserBuildStructJobProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (MinimumUserBuildStructJobProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasBuildStructJob {
  return result.hasBuildStructJob;
}
- (BuildStructJobProto*) buildStructJob {
  return result.buildStructJob;
}
- (MinimumUserBuildStructJobProto_Builder*) setBuildStructJob:(BuildStructJobProto*) value {
  result.hasBuildStructJob = YES;
  result.buildStructJob = value;
  return self;
}
- (MinimumUserBuildStructJobProto_Builder*) setBuildStructJobBuilder:(BuildStructJobProto_Builder*) builderForValue {
  return [self setBuildStructJob:[builderForValue build]];
}
- (MinimumUserBuildStructJobProto_Builder*) mergeBuildStructJob:(BuildStructJobProto*) value {
  if (result.hasBuildStructJob &&
      result.buildStructJob != [BuildStructJobProto defaultInstance]) {
    result.buildStructJob =
      [[[BuildStructJobProto builderWithPrototype:result.buildStructJob] mergeFrom:value] buildPartial];
  } else {
    result.buildStructJob = value;
  }
  result.hasBuildStructJob = YES;
  return self;
}
- (MinimumUserBuildStructJobProto_Builder*) clearBuildStructJob {
  result.hasBuildStructJob = NO;
  result.buildStructJob = [BuildStructJobProto defaultInstance];
  return self;
}
- (BOOL) hasNumOfStructUserHas {
  return result.hasNumOfStructUserHas;
}
- (int32_t) numOfStructUserHas {
  return result.numOfStructUserHas;
}
- (MinimumUserBuildStructJobProto_Builder*) setNumOfStructUserHas:(int32_t) value {
  result.hasNumOfStructUserHas = YES;
  result.numOfStructUserHas = value;
  return self;
}
- (MinimumUserBuildStructJobProto_Builder*) clearNumOfStructUserHas {
  result.hasNumOfStructUserHas = NO;
  result.numOfStructUserHas = 0;
  return self;
}
@end

@interface BuildStructJobProto ()
@property int32_t buildStructJobId;
@property int32_t structId;
@property int32_t quantityRequired;
@end

@implementation BuildStructJobProto

- (BOOL) hasBuildStructJobId {
  return !!hasBuildStructJobId_;
}
- (void) setHasBuildStructJobId:(BOOL) value {
  hasBuildStructJobId_ = !!value;
}
@synthesize buildStructJobId;
- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value {
  hasStructId_ = !!value;
}
@synthesize structId;
- (BOOL) hasQuantityRequired {
  return !!hasQuantityRequired_;
}
- (void) setHasQuantityRequired:(BOOL) value {
  hasQuantityRequired_ = !!value;
}
@synthesize quantityRequired;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.buildStructJobId = 0;
    self.structId = 0;
    self.quantityRequired = 0;
  }
  return self;
}
static BuildStructJobProto* defaultBuildStructJobProtoInstance = nil;
+ (void) initialize {
  if (self == [BuildStructJobProto class]) {
    defaultBuildStructJobProtoInstance = [[BuildStructJobProto alloc] init];
  }
}
+ (BuildStructJobProto*) defaultInstance {
  return defaultBuildStructJobProtoInstance;
}
- (BuildStructJobProto*) defaultInstance {
  return defaultBuildStructJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBuildStructJobId) {
    return NO;
  }
  if (!self.hasStructId) {
    return NO;
  }
  if (!self.hasQuantityRequired) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBuildStructJobId) {
    [output writeInt32:1 value:self.buildStructJobId];
  }
  if (self.hasStructId) {
    [output writeInt32:2 value:self.structId];
  }
  if (self.hasQuantityRequired) {
    [output writeInt32:3 value:self.quantityRequired];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBuildStructJobId) {
    size += computeInt32Size(1, self.buildStructJobId);
  }
  if (self.hasStructId) {
    size += computeInt32Size(2, self.structId);
  }
  if (self.hasQuantityRequired) {
    size += computeInt32Size(3, self.quantityRequired);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BuildStructJobProto*) parseFromData:(NSData*) data {
  return (BuildStructJobProto*)[[[BuildStructJobProto builder] mergeFromData:data] build];
}
+ (BuildStructJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuildStructJobProto*)[[[BuildStructJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BuildStructJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (BuildStructJobProto*)[[[BuildStructJobProto builder] mergeFromInputStream:input] build];
}
+ (BuildStructJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuildStructJobProto*)[[[BuildStructJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BuildStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BuildStructJobProto*)[[[BuildStructJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (BuildStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuildStructJobProto*)[[[BuildStructJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BuildStructJobProto_Builder*) builder {
  return [[[BuildStructJobProto_Builder alloc] init] autorelease];
}
+ (BuildStructJobProto_Builder*) builderWithPrototype:(BuildStructJobProto*) prototype {
  return [[BuildStructJobProto builder] mergeFrom:prototype];
}
- (BuildStructJobProto_Builder*) builder {
  return [BuildStructJobProto builder];
}
@end

@interface BuildStructJobProto_Builder()
@property (retain) BuildStructJobProto* result;
@end

@implementation BuildStructJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[BuildStructJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BuildStructJobProto_Builder*) clear {
  self.result = [[[BuildStructJobProto alloc] init] autorelease];
  return self;
}
- (BuildStructJobProto_Builder*) clone {
  return [BuildStructJobProto builderWithPrototype:result];
}
- (BuildStructJobProto*) defaultInstance {
  return [BuildStructJobProto defaultInstance];
}
- (BuildStructJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BuildStructJobProto*) buildPartial {
  BuildStructJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (BuildStructJobProto_Builder*) mergeFrom:(BuildStructJobProto*) other {
  if (other == [BuildStructJobProto defaultInstance]) {
    return self;
  }
  if (other.hasBuildStructJobId) {
    [self setBuildStructJobId:other.buildStructJobId];
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasQuantityRequired) {
    [self setQuantityRequired:other.quantityRequired];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BuildStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BuildStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBuildStructJobId:[input readInt32]];
        break;
      }
      case 16: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 24: {
        [self setQuantityRequired:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBuildStructJobId {
  return result.hasBuildStructJobId;
}
- (int32_t) buildStructJobId {
  return result.buildStructJobId;
}
- (BuildStructJobProto_Builder*) setBuildStructJobId:(int32_t) value {
  result.hasBuildStructJobId = YES;
  result.buildStructJobId = value;
  return self;
}
- (BuildStructJobProto_Builder*) clearBuildStructJobId {
  result.hasBuildStructJobId = NO;
  result.buildStructJobId = 0;
  return self;
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (BuildStructJobProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (BuildStructJobProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasQuantityRequired {
  return result.hasQuantityRequired;
}
- (int32_t) quantityRequired {
  return result.quantityRequired;
}
- (BuildStructJobProto_Builder*) setQuantityRequired:(int32_t) value {
  result.hasQuantityRequired = YES;
  result.quantityRequired = value;
  return self;
}
- (BuildStructJobProto_Builder*) clearQuantityRequired {
  result.hasQuantityRequired = NO;
  result.quantityRequired = 0;
  return self;
}
@end

@interface MinimumUserUpgradeStructJobProto ()
@property int32_t userId;
@property int32_t questId;
@property (retain) UpgradeStructJobProto* upgradeStructJob;
@property BOOL isComplete;
@end

@implementation MinimumUserUpgradeStructJobProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasUpgradeStructJob {
  return !!hasUpgradeStructJob_;
}
- (void) setHasUpgradeStructJob:(BOOL) value {
  hasUpgradeStructJob_ = !!value;
}
@synthesize upgradeStructJob;
- (BOOL) hasIsComplete {
  return !!hasIsComplete_;
}
- (void) setHasIsComplete:(BOOL) value {
  hasIsComplete_ = !!value;
}
- (BOOL) isComplete {
  return !!isComplete_;
}
- (void) setIsComplete:(BOOL) value {
  isComplete_ = !!value;
}
- (void) dealloc {
  self.upgradeStructJob = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.questId = 0;
    self.upgradeStructJob = [UpgradeStructJobProto defaultInstance];
    self.isComplete = NO;
  }
  return self;
}
static MinimumUserUpgradeStructJobProto* defaultMinimumUserUpgradeStructJobProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserUpgradeStructJobProto class]) {
    defaultMinimumUserUpgradeStructJobProtoInstance = [[MinimumUserUpgradeStructJobProto alloc] init];
  }
}
+ (MinimumUserUpgradeStructJobProto*) defaultInstance {
  return defaultMinimumUserUpgradeStructJobProtoInstance;
}
- (MinimumUserUpgradeStructJobProto*) defaultInstance {
  return defaultMinimumUserUpgradeStructJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasQuestId) {
    return NO;
  }
  if (!self.hasUpgradeStructJob) {
    return NO;
  }
  if (!self.hasIsComplete) {
    return NO;
  }
  if (!self.upgradeStructJob.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasUpgradeStructJob) {
    [output writeMessage:3 value:self.upgradeStructJob];
  }
  if (self.hasIsComplete) {
    [output writeBool:4 value:self.isComplete];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasUpgradeStructJob) {
    size += computeMessageSize(3, self.upgradeStructJob);
  }
  if (self.hasIsComplete) {
    size += computeBoolSize(4, self.isComplete);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserUpgradeStructJobProto*) parseFromData:(NSData*) data {
  return (MinimumUserUpgradeStructJobProto*)[[[MinimumUserUpgradeStructJobProto builder] mergeFromData:data] build];
}
+ (MinimumUserUpgradeStructJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserUpgradeStructJobProto*)[[[MinimumUserUpgradeStructJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserUpgradeStructJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserUpgradeStructJobProto*)[[[MinimumUserUpgradeStructJobProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserUpgradeStructJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserUpgradeStructJobProto*)[[[MinimumUserUpgradeStructJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserUpgradeStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserUpgradeStructJobProto*)[[[MinimumUserUpgradeStructJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserUpgradeStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserUpgradeStructJobProto*)[[[MinimumUserUpgradeStructJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserUpgradeStructJobProto_Builder*) builder {
  return [[[MinimumUserUpgradeStructJobProto_Builder alloc] init] autorelease];
}
+ (MinimumUserUpgradeStructJobProto_Builder*) builderWithPrototype:(MinimumUserUpgradeStructJobProto*) prototype {
  return [[MinimumUserUpgradeStructJobProto builder] mergeFrom:prototype];
}
- (MinimumUserUpgradeStructJobProto_Builder*) builder {
  return [MinimumUserUpgradeStructJobProto builder];
}
@end

@interface MinimumUserUpgradeStructJobProto_Builder()
@property (retain) MinimumUserUpgradeStructJobProto* result;
@end

@implementation MinimumUserUpgradeStructJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserUpgradeStructJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserUpgradeStructJobProto_Builder*) clear {
  self.result = [[[MinimumUserUpgradeStructJobProto alloc] init] autorelease];
  return self;
}
- (MinimumUserUpgradeStructJobProto_Builder*) clone {
  return [MinimumUserUpgradeStructJobProto builderWithPrototype:result];
}
- (MinimumUserUpgradeStructJobProto*) defaultInstance {
  return [MinimumUserUpgradeStructJobProto defaultInstance];
}
- (MinimumUserUpgradeStructJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserUpgradeStructJobProto*) buildPartial {
  MinimumUserUpgradeStructJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserUpgradeStructJobProto_Builder*) mergeFrom:(MinimumUserUpgradeStructJobProto*) other {
  if (other == [MinimumUserUpgradeStructJobProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasUpgradeStructJob) {
    [self mergeUpgradeStructJob:other.upgradeStructJob];
  }
  if (other.hasIsComplete) {
    [self setIsComplete:other.isComplete];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserUpgradeStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserUpgradeStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 26: {
        UpgradeStructJobProto_Builder* subBuilder = [UpgradeStructJobProto builder];
        if (self.hasUpgradeStructJob) {
          [subBuilder mergeFrom:self.upgradeStructJob];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUpgradeStructJob:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setIsComplete:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserUpgradeStructJobProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserUpgradeStructJobProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (MinimumUserUpgradeStructJobProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (MinimumUserUpgradeStructJobProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasUpgradeStructJob {
  return result.hasUpgradeStructJob;
}
- (UpgradeStructJobProto*) upgradeStructJob {
  return result.upgradeStructJob;
}
- (MinimumUserUpgradeStructJobProto_Builder*) setUpgradeStructJob:(UpgradeStructJobProto*) value {
  result.hasUpgradeStructJob = YES;
  result.upgradeStructJob = value;
  return self;
}
- (MinimumUserUpgradeStructJobProto_Builder*) setUpgradeStructJobBuilder:(UpgradeStructJobProto_Builder*) builderForValue {
  return [self setUpgradeStructJob:[builderForValue build]];
}
- (MinimumUserUpgradeStructJobProto_Builder*) mergeUpgradeStructJob:(UpgradeStructJobProto*) value {
  if (result.hasUpgradeStructJob &&
      result.upgradeStructJob != [UpgradeStructJobProto defaultInstance]) {
    result.upgradeStructJob =
      [[[UpgradeStructJobProto builderWithPrototype:result.upgradeStructJob] mergeFrom:value] buildPartial];
  } else {
    result.upgradeStructJob = value;
  }
  result.hasUpgradeStructJob = YES;
  return self;
}
- (MinimumUserUpgradeStructJobProto_Builder*) clearUpgradeStructJob {
  result.hasUpgradeStructJob = NO;
  result.upgradeStructJob = [UpgradeStructJobProto defaultInstance];
  return self;
}
- (BOOL) hasIsComplete {
  return result.hasIsComplete;
}
- (BOOL) isComplete {
  return result.isComplete;
}
- (MinimumUserUpgradeStructJobProto_Builder*) setIsComplete:(BOOL) value {
  result.hasIsComplete = YES;
  result.isComplete = value;
  return self;
}
- (MinimumUserUpgradeStructJobProto_Builder*) clearIsComplete {
  result.hasIsComplete = NO;
  result.isComplete = NO;
  return self;
}
@end

@interface UpgradeStructJobProto ()
@property int32_t upgradeStructJobId;
@property int32_t structId;
@property int32_t levelReq;
@end

@implementation UpgradeStructJobProto

- (BOOL) hasUpgradeStructJobId {
  return !!hasUpgradeStructJobId_;
}
- (void) setHasUpgradeStructJobId:(BOOL) value {
  hasUpgradeStructJobId_ = !!value;
}
@synthesize upgradeStructJobId;
- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value {
  hasStructId_ = !!value;
}
@synthesize structId;
- (BOOL) hasLevelReq {
  return !!hasLevelReq_;
}
- (void) setHasLevelReq:(BOOL) value {
  hasLevelReq_ = !!value;
}
@synthesize levelReq;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.upgradeStructJobId = 0;
    self.structId = 0;
    self.levelReq = 0;
  }
  return self;
}
static UpgradeStructJobProto* defaultUpgradeStructJobProtoInstance = nil;
+ (void) initialize {
  if (self == [UpgradeStructJobProto class]) {
    defaultUpgradeStructJobProtoInstance = [[UpgradeStructJobProto alloc] init];
  }
}
+ (UpgradeStructJobProto*) defaultInstance {
  return defaultUpgradeStructJobProtoInstance;
}
- (UpgradeStructJobProto*) defaultInstance {
  return defaultUpgradeStructJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUpgradeStructJobId) {
    return NO;
  }
  if (!self.hasStructId) {
    return NO;
  }
  if (!self.hasLevelReq) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpgradeStructJobId) {
    [output writeInt32:1 value:self.upgradeStructJobId];
  }
  if (self.hasStructId) {
    [output writeInt32:2 value:self.structId];
  }
  if (self.hasLevelReq) {
    [output writeInt32:3 value:self.levelReq];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUpgradeStructJobId) {
    size += computeInt32Size(1, self.upgradeStructJobId);
  }
  if (self.hasStructId) {
    size += computeInt32Size(2, self.structId);
  }
  if (self.hasLevelReq) {
    size += computeInt32Size(3, self.levelReq);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UpgradeStructJobProto*) parseFromData:(NSData*) data {
  return (UpgradeStructJobProto*)[[[UpgradeStructJobProto builder] mergeFromData:data] build];
}
+ (UpgradeStructJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeStructJobProto*)[[[UpgradeStructJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UpgradeStructJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (UpgradeStructJobProto*)[[[UpgradeStructJobProto builder] mergeFromInputStream:input] build];
}
+ (UpgradeStructJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeStructJobProto*)[[[UpgradeStructJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpgradeStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UpgradeStructJobProto*)[[[UpgradeStructJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (UpgradeStructJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UpgradeStructJobProto*)[[[UpgradeStructJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UpgradeStructJobProto_Builder*) builder {
  return [[[UpgradeStructJobProto_Builder alloc] init] autorelease];
}
+ (UpgradeStructJobProto_Builder*) builderWithPrototype:(UpgradeStructJobProto*) prototype {
  return [[UpgradeStructJobProto builder] mergeFrom:prototype];
}
- (UpgradeStructJobProto_Builder*) builder {
  return [UpgradeStructJobProto builder];
}
@end

@interface UpgradeStructJobProto_Builder()
@property (retain) UpgradeStructJobProto* result;
@end

@implementation UpgradeStructJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UpgradeStructJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UpgradeStructJobProto_Builder*) clear {
  self.result = [[[UpgradeStructJobProto alloc] init] autorelease];
  return self;
}
- (UpgradeStructJobProto_Builder*) clone {
  return [UpgradeStructJobProto builderWithPrototype:result];
}
- (UpgradeStructJobProto*) defaultInstance {
  return [UpgradeStructJobProto defaultInstance];
}
- (UpgradeStructJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UpgradeStructJobProto*) buildPartial {
  UpgradeStructJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UpgradeStructJobProto_Builder*) mergeFrom:(UpgradeStructJobProto*) other {
  if (other == [UpgradeStructJobProto defaultInstance]) {
    return self;
  }
  if (other.hasUpgradeStructJobId) {
    [self setUpgradeStructJobId:other.upgradeStructJobId];
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasLevelReq) {
    [self setLevelReq:other.levelReq];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UpgradeStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UpgradeStructJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUpgradeStructJobId:[input readInt32]];
        break;
      }
      case 16: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 24: {
        [self setLevelReq:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUpgradeStructJobId {
  return result.hasUpgradeStructJobId;
}
- (int32_t) upgradeStructJobId {
  return result.upgradeStructJobId;
}
- (UpgradeStructJobProto_Builder*) setUpgradeStructJobId:(int32_t) value {
  result.hasUpgradeStructJobId = YES;
  result.upgradeStructJobId = value;
  return self;
}
- (UpgradeStructJobProto_Builder*) clearUpgradeStructJobId {
  result.hasUpgradeStructJobId = NO;
  result.upgradeStructJobId = 0;
  return self;
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (UpgradeStructJobProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (UpgradeStructJobProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasLevelReq {
  return result.hasLevelReq;
}
- (int32_t) levelReq {
  return result.levelReq;
}
- (UpgradeStructJobProto_Builder*) setLevelReq:(int32_t) value {
  result.hasLevelReq = YES;
  result.levelReq = value;
  return self;
}
- (UpgradeStructJobProto_Builder*) clearLevelReq {
  result.hasLevelReq = NO;
  result.levelReq = 0;
  return self;
}
@end

@interface MinimumUserPossessEquipJobProto ()
@property int32_t userId;
@property int32_t questId;
@property (retain) PossessEquipJobProto* possessEquipJobProto;
@property int32_t numEquipUserHas;
@end

@implementation MinimumUserPossessEquipJobProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasPossessEquipJobProto {
  return !!hasPossessEquipJobProto_;
}
- (void) setHasPossessEquipJobProto:(BOOL) value {
  hasPossessEquipJobProto_ = !!value;
}
@synthesize possessEquipJobProto;
- (BOOL) hasNumEquipUserHas {
  return !!hasNumEquipUserHas_;
}
- (void) setHasNumEquipUserHas:(BOOL) value {
  hasNumEquipUserHas_ = !!value;
}
@synthesize numEquipUserHas;
- (void) dealloc {
  self.possessEquipJobProto = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.questId = 0;
    self.possessEquipJobProto = [PossessEquipJobProto defaultInstance];
    self.numEquipUserHas = 0;
  }
  return self;
}
static MinimumUserPossessEquipJobProto* defaultMinimumUserPossessEquipJobProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserPossessEquipJobProto class]) {
    defaultMinimumUserPossessEquipJobProtoInstance = [[MinimumUserPossessEquipJobProto alloc] init];
  }
}
+ (MinimumUserPossessEquipJobProto*) defaultInstance {
  return defaultMinimumUserPossessEquipJobProtoInstance;
}
- (MinimumUserPossessEquipJobProto*) defaultInstance {
  return defaultMinimumUserPossessEquipJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasQuestId) {
    return NO;
  }
  if (!self.hasPossessEquipJobProto) {
    return NO;
  }
  if (!self.hasNumEquipUserHas) {
    return NO;
  }
  if (!self.possessEquipJobProto.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasQuestId) {
    [output writeInt32:2 value:self.questId];
  }
  if (self.hasPossessEquipJobProto) {
    [output writeMessage:3 value:self.possessEquipJobProto];
  }
  if (self.hasNumEquipUserHas) {
    [output writeInt32:4 value:self.numEquipUserHas];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasQuestId) {
    size += computeInt32Size(2, self.questId);
  }
  if (self.hasPossessEquipJobProto) {
    size += computeMessageSize(3, self.possessEquipJobProto);
  }
  if (self.hasNumEquipUserHas) {
    size += computeInt32Size(4, self.numEquipUserHas);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserPossessEquipJobProto*) parseFromData:(NSData*) data {
  return (MinimumUserPossessEquipJobProto*)[[[MinimumUserPossessEquipJobProto builder] mergeFromData:data] build];
}
+ (MinimumUserPossessEquipJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserPossessEquipJobProto*)[[[MinimumUserPossessEquipJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserPossessEquipJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserPossessEquipJobProto*)[[[MinimumUserPossessEquipJobProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserPossessEquipJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserPossessEquipJobProto*)[[[MinimumUserPossessEquipJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserPossessEquipJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserPossessEquipJobProto*)[[[MinimumUserPossessEquipJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserPossessEquipJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserPossessEquipJobProto*)[[[MinimumUserPossessEquipJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserPossessEquipJobProto_Builder*) builder {
  return [[[MinimumUserPossessEquipJobProto_Builder alloc] init] autorelease];
}
+ (MinimumUserPossessEquipJobProto_Builder*) builderWithPrototype:(MinimumUserPossessEquipJobProto*) prototype {
  return [[MinimumUserPossessEquipJobProto builder] mergeFrom:prototype];
}
- (MinimumUserPossessEquipJobProto_Builder*) builder {
  return [MinimumUserPossessEquipJobProto builder];
}
@end

@interface MinimumUserPossessEquipJobProto_Builder()
@property (retain) MinimumUserPossessEquipJobProto* result;
@end

@implementation MinimumUserPossessEquipJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserPossessEquipJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserPossessEquipJobProto_Builder*) clear {
  self.result = [[[MinimumUserPossessEquipJobProto alloc] init] autorelease];
  return self;
}
- (MinimumUserPossessEquipJobProto_Builder*) clone {
  return [MinimumUserPossessEquipJobProto builderWithPrototype:result];
}
- (MinimumUserPossessEquipJobProto*) defaultInstance {
  return [MinimumUserPossessEquipJobProto defaultInstance];
}
- (MinimumUserPossessEquipJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserPossessEquipJobProto*) buildPartial {
  MinimumUserPossessEquipJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserPossessEquipJobProto_Builder*) mergeFrom:(MinimumUserPossessEquipJobProto*) other {
  if (other == [MinimumUserPossessEquipJobProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasPossessEquipJobProto) {
    [self mergePossessEquipJobProto:other.possessEquipJobProto];
  }
  if (other.hasNumEquipUserHas) {
    [self setNumEquipUserHas:other.numEquipUserHas];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserPossessEquipJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserPossessEquipJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 26: {
        PossessEquipJobProto_Builder* subBuilder = [PossessEquipJobProto builder];
        if (self.hasPossessEquipJobProto) {
          [subBuilder mergeFrom:self.possessEquipJobProto];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPossessEquipJobProto:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setNumEquipUserHas:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserPossessEquipJobProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserPossessEquipJobProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (MinimumUserPossessEquipJobProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (MinimumUserPossessEquipJobProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasPossessEquipJobProto {
  return result.hasPossessEquipJobProto;
}
- (PossessEquipJobProto*) possessEquipJobProto {
  return result.possessEquipJobProto;
}
- (MinimumUserPossessEquipJobProto_Builder*) setPossessEquipJobProto:(PossessEquipJobProto*) value {
  result.hasPossessEquipJobProto = YES;
  result.possessEquipJobProto = value;
  return self;
}
- (MinimumUserPossessEquipJobProto_Builder*) setPossessEquipJobProtoBuilder:(PossessEquipJobProto_Builder*) builderForValue {
  return [self setPossessEquipJobProto:[builderForValue build]];
}
- (MinimumUserPossessEquipJobProto_Builder*) mergePossessEquipJobProto:(PossessEquipJobProto*) value {
  if (result.hasPossessEquipJobProto &&
      result.possessEquipJobProto != [PossessEquipJobProto defaultInstance]) {
    result.possessEquipJobProto =
      [[[PossessEquipJobProto builderWithPrototype:result.possessEquipJobProto] mergeFrom:value] buildPartial];
  } else {
    result.possessEquipJobProto = value;
  }
  result.hasPossessEquipJobProto = YES;
  return self;
}
- (MinimumUserPossessEquipJobProto_Builder*) clearPossessEquipJobProto {
  result.hasPossessEquipJobProto = NO;
  result.possessEquipJobProto = [PossessEquipJobProto defaultInstance];
  return self;
}
- (BOOL) hasNumEquipUserHas {
  return result.hasNumEquipUserHas;
}
- (int32_t) numEquipUserHas {
  return result.numEquipUserHas;
}
- (MinimumUserPossessEquipJobProto_Builder*) setNumEquipUserHas:(int32_t) value {
  result.hasNumEquipUserHas = YES;
  result.numEquipUserHas = value;
  return self;
}
- (MinimumUserPossessEquipJobProto_Builder*) clearNumEquipUserHas {
  result.hasNumEquipUserHas = NO;
  result.numEquipUserHas = 0;
  return self;
}
@end

@interface PossessEquipJobProto ()
@property int32_t possessEquipJobId;
@property int32_t equipId;
@property int32_t quantityReq;
@end

@implementation PossessEquipJobProto

- (BOOL) hasPossessEquipJobId {
  return !!hasPossessEquipJobId_;
}
- (void) setHasPossessEquipJobId:(BOOL) value {
  hasPossessEquipJobId_ = !!value;
}
@synthesize possessEquipJobId;
- (BOOL) hasEquipId {
  return !!hasEquipId_;
}
- (void) setHasEquipId:(BOOL) value {
  hasEquipId_ = !!value;
}
@synthesize equipId;
- (BOOL) hasQuantityReq {
  return !!hasQuantityReq_;
}
- (void) setHasQuantityReq:(BOOL) value {
  hasQuantityReq_ = !!value;
}
@synthesize quantityReq;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.possessEquipJobId = 0;
    self.equipId = 0;
    self.quantityReq = 0;
  }
  return self;
}
static PossessEquipJobProto* defaultPossessEquipJobProtoInstance = nil;
+ (void) initialize {
  if (self == [PossessEquipJobProto class]) {
    defaultPossessEquipJobProtoInstance = [[PossessEquipJobProto alloc] init];
  }
}
+ (PossessEquipJobProto*) defaultInstance {
  return defaultPossessEquipJobProtoInstance;
}
- (PossessEquipJobProto*) defaultInstance {
  return defaultPossessEquipJobProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPossessEquipJobId) {
    return NO;
  }
  if (!self.hasEquipId) {
    return NO;
  }
  if (!self.hasQuantityReq) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPossessEquipJobId) {
    [output writeInt32:1 value:self.possessEquipJobId];
  }
  if (self.hasEquipId) {
    [output writeInt32:2 value:self.equipId];
  }
  if (self.hasQuantityReq) {
    [output writeInt32:3 value:self.quantityReq];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPossessEquipJobId) {
    size += computeInt32Size(1, self.possessEquipJobId);
  }
  if (self.hasEquipId) {
    size += computeInt32Size(2, self.equipId);
  }
  if (self.hasQuantityReq) {
    size += computeInt32Size(3, self.quantityReq);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PossessEquipJobProto*) parseFromData:(NSData*) data {
  return (PossessEquipJobProto*)[[[PossessEquipJobProto builder] mergeFromData:data] build];
}
+ (PossessEquipJobProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PossessEquipJobProto*)[[[PossessEquipJobProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PossessEquipJobProto*) parseFromInputStream:(NSInputStream*) input {
  return (PossessEquipJobProto*)[[[PossessEquipJobProto builder] mergeFromInputStream:input] build];
}
+ (PossessEquipJobProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PossessEquipJobProto*)[[[PossessEquipJobProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PossessEquipJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PossessEquipJobProto*)[[[PossessEquipJobProto builder] mergeFromCodedInputStream:input] build];
}
+ (PossessEquipJobProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PossessEquipJobProto*)[[[PossessEquipJobProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PossessEquipJobProto_Builder*) builder {
  return [[[PossessEquipJobProto_Builder alloc] init] autorelease];
}
+ (PossessEquipJobProto_Builder*) builderWithPrototype:(PossessEquipJobProto*) prototype {
  return [[PossessEquipJobProto builder] mergeFrom:prototype];
}
- (PossessEquipJobProto_Builder*) builder {
  return [PossessEquipJobProto builder];
}
@end

@interface PossessEquipJobProto_Builder()
@property (retain) PossessEquipJobProto* result;
@end

@implementation PossessEquipJobProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PossessEquipJobProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PossessEquipJobProto_Builder*) clear {
  self.result = [[[PossessEquipJobProto alloc] init] autorelease];
  return self;
}
- (PossessEquipJobProto_Builder*) clone {
  return [PossessEquipJobProto builderWithPrototype:result];
}
- (PossessEquipJobProto*) defaultInstance {
  return [PossessEquipJobProto defaultInstance];
}
- (PossessEquipJobProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PossessEquipJobProto*) buildPartial {
  PossessEquipJobProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PossessEquipJobProto_Builder*) mergeFrom:(PossessEquipJobProto*) other {
  if (other == [PossessEquipJobProto defaultInstance]) {
    return self;
  }
  if (other.hasPossessEquipJobId) {
    [self setPossessEquipJobId:other.possessEquipJobId];
  }
  if (other.hasEquipId) {
    [self setEquipId:other.equipId];
  }
  if (other.hasQuantityReq) {
    [self setQuantityReq:other.quantityReq];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PossessEquipJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PossessEquipJobProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPossessEquipJobId:[input readInt32]];
        break;
      }
      case 16: {
        [self setEquipId:[input readInt32]];
        break;
      }
      case 24: {
        [self setQuantityReq:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPossessEquipJobId {
  return result.hasPossessEquipJobId;
}
- (int32_t) possessEquipJobId {
  return result.possessEquipJobId;
}
- (PossessEquipJobProto_Builder*) setPossessEquipJobId:(int32_t) value {
  result.hasPossessEquipJobId = YES;
  result.possessEquipJobId = value;
  return self;
}
- (PossessEquipJobProto_Builder*) clearPossessEquipJobId {
  result.hasPossessEquipJobId = NO;
  result.possessEquipJobId = 0;
  return self;
}
- (BOOL) hasEquipId {
  return result.hasEquipId;
}
- (int32_t) equipId {
  return result.equipId;
}
- (PossessEquipJobProto_Builder*) setEquipId:(int32_t) value {
  result.hasEquipId = YES;
  result.equipId = value;
  return self;
}
- (PossessEquipJobProto_Builder*) clearEquipId {
  result.hasEquipId = NO;
  result.equipId = 0;
  return self;
}
- (BOOL) hasQuantityReq {
  return result.hasQuantityReq;
}
- (int32_t) quantityReq {
  return result.quantityReq;
}
- (PossessEquipJobProto_Builder*) setQuantityReq:(int32_t) value {
  result.hasQuantityReq = YES;
  result.quantityReq = value;
  return self;
}
- (PossessEquipJobProto_Builder*) clearQuantityReq {
  result.hasQuantityReq = NO;
  result.quantityReq = 0;
  return self;
}
@end

@interface FullQuestProto ()
@property int32_t questId;
@property int32_t cityId;
@property (retain) NSString* name;
@property (retain) NSString* description;
@property (retain) NSString* doneResponse;
@property (retain) NSString* inProgress;
@property int32_t assetNumWithinCity;
@property int32_t coinsGained;
@property int32_t diamondsGained;
@property int32_t expGained;
@property int32_t equipIdGained;
@property (retain) NSMutableArray* mutableQuestsRequiredForThisList;
@property (retain) NSMutableArray* mutableTaskReqsList;
@property (retain) NSMutableArray* mutableUpgradeStructJobsReqsList;
@property (retain) NSMutableArray* mutableBuildStructJobsReqsList;
@property (retain) NSMutableArray* mutableDefeatTypeReqsList;
@property (retain) NSMutableArray* mutablePossessEquipJobReqsList;
@end

@implementation FullQuestProto

- (BOOL) hasQuestId {
  return !!hasQuestId_;
}
- (void) setHasQuestId:(BOOL) value {
  hasQuestId_ = !!value;
}
@synthesize questId;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (BOOL) hasDoneResponse {
  return !!hasDoneResponse_;
}
- (void) setHasDoneResponse:(BOOL) value {
  hasDoneResponse_ = !!value;
}
@synthesize doneResponse;
- (BOOL) hasInProgress {
  return !!hasInProgress_;
}
- (void) setHasInProgress:(BOOL) value {
  hasInProgress_ = !!value;
}
@synthesize inProgress;
- (BOOL) hasAssetNumWithinCity {
  return !!hasAssetNumWithinCity_;
}
- (void) setHasAssetNumWithinCity:(BOOL) value {
  hasAssetNumWithinCity_ = !!value;
}
@synthesize assetNumWithinCity;
- (BOOL) hasCoinsGained {
  return !!hasCoinsGained_;
}
- (void) setHasCoinsGained:(BOOL) value {
  hasCoinsGained_ = !!value;
}
@synthesize coinsGained;
- (BOOL) hasDiamondsGained {
  return !!hasDiamondsGained_;
}
- (void) setHasDiamondsGained:(BOOL) value {
  hasDiamondsGained_ = !!value;
}
@synthesize diamondsGained;
- (BOOL) hasExpGained {
  return !!hasExpGained_;
}
- (void) setHasExpGained:(BOOL) value {
  hasExpGained_ = !!value;
}
@synthesize expGained;
- (BOOL) hasEquipIdGained {
  return !!hasEquipIdGained_;
}
- (void) setHasEquipIdGained:(BOOL) value {
  hasEquipIdGained_ = !!value;
}
@synthesize equipIdGained;
@synthesize mutableQuestsRequiredForThisList;
@synthesize mutableTaskReqsList;
@synthesize mutableUpgradeStructJobsReqsList;
@synthesize mutableBuildStructJobsReqsList;
@synthesize mutableDefeatTypeReqsList;
@synthesize mutablePossessEquipJobReqsList;
- (void) dealloc {
  self.name = nil;
  self.description = nil;
  self.doneResponse = nil;
  self.inProgress = nil;
  self.mutableQuestsRequiredForThisList = nil;
  self.mutableTaskReqsList = nil;
  self.mutableUpgradeStructJobsReqsList = nil;
  self.mutableBuildStructJobsReqsList = nil;
  self.mutableDefeatTypeReqsList = nil;
  self.mutablePossessEquipJobReqsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.questId = 0;
    self.cityId = 0;
    self.name = @"";
    self.description = @"";
    self.doneResponse = @"";
    self.inProgress = @"";
    self.assetNumWithinCity = 0;
    self.coinsGained = 0;
    self.diamondsGained = 0;
    self.expGained = 0;
    self.equipIdGained = 0;
  }
  return self;
}
static FullQuestProto* defaultFullQuestProtoInstance = nil;
+ (void) initialize {
  if (self == [FullQuestProto class]) {
    defaultFullQuestProtoInstance = [[FullQuestProto alloc] init];
  }
}
+ (FullQuestProto*) defaultInstance {
  return defaultFullQuestProtoInstance;
}
- (FullQuestProto*) defaultInstance {
  return defaultFullQuestProtoInstance;
}
- (NSArray*) questsRequiredForThisList {
  return mutableQuestsRequiredForThisList;
}
- (int32_t) questsRequiredForThisAtIndex:(int32_t) index {
  id value = [mutableQuestsRequiredForThisList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) taskReqsList {
  return mutableTaskReqsList;
}
- (int32_t) taskReqsAtIndex:(int32_t) index {
  id value = [mutableTaskReqsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) upgradeStructJobsReqsList {
  return mutableUpgradeStructJobsReqsList;
}
- (int32_t) upgradeStructJobsReqsAtIndex:(int32_t) index {
  id value = [mutableUpgradeStructJobsReqsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) buildStructJobsReqsList {
  return mutableBuildStructJobsReqsList;
}
- (int32_t) buildStructJobsReqsAtIndex:(int32_t) index {
  id value = [mutableBuildStructJobsReqsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) defeatTypeReqsList {
  return mutableDefeatTypeReqsList;
}
- (int32_t) defeatTypeReqsAtIndex:(int32_t) index {
  id value = [mutableDefeatTypeReqsList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) possessEquipJobReqsList {
  return mutablePossessEquipJobReqsList;
}
- (int32_t) possessEquipJobReqsAtIndex:(int32_t) index {
  id value = [mutablePossessEquipJobReqsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  if (!self.hasQuestId) {
    return NO;
  }
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasDescription) {
    return NO;
  }
  if (!self.hasDoneResponse) {
    return NO;
  }
  if (!self.hasInProgress) {
    return NO;
  }
  if (!self.hasAssetNumWithinCity) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestId) {
    [output writeInt32:1 value:self.questId];
  }
  if (self.hasCityId) {
    [output writeInt32:2 value:self.cityId];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasDescription) {
    [output writeString:4 value:self.description];
  }
  if (self.hasDoneResponse) {
    [output writeString:5 value:self.doneResponse];
  }
  if (self.hasInProgress) {
    [output writeString:6 value:self.inProgress];
  }
  if (self.hasAssetNumWithinCity) {
    [output writeInt32:7 value:self.assetNumWithinCity];
  }
  if (self.hasCoinsGained) {
    [output writeInt32:8 value:self.coinsGained];
  }
  if (self.hasDiamondsGained) {
    [output writeInt32:9 value:self.diamondsGained];
  }
  if (self.hasExpGained) {
    [output writeInt32:10 value:self.expGained];
  }
  if (self.hasEquipIdGained) {
    [output writeInt32:11 value:self.equipIdGained];
  }
  for (NSNumber* value in self.mutableQuestsRequiredForThisList) {
    [output writeInt32:12 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableTaskReqsList) {
    [output writeInt32:13 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableUpgradeStructJobsReqsList) {
    [output writeInt32:14 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableBuildStructJobsReqsList) {
    [output writeInt32:15 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableDefeatTypeReqsList) {
    [output writeInt32:16 value:[value intValue]];
  }
  for (NSNumber* value in self.mutablePossessEquipJobReqsList) {
    [output writeInt32:17 value:[value intValue]];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasQuestId) {
    size += computeInt32Size(1, self.questId);
  }
  if (self.hasCityId) {
    size += computeInt32Size(2, self.cityId);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasDescription) {
    size += computeStringSize(4, self.description);
  }
  if (self.hasDoneResponse) {
    size += computeStringSize(5, self.doneResponse);
  }
  if (self.hasInProgress) {
    size += computeStringSize(6, self.inProgress);
  }
  if (self.hasAssetNumWithinCity) {
    size += computeInt32Size(7, self.assetNumWithinCity);
  }
  if (self.hasCoinsGained) {
    size += computeInt32Size(8, self.coinsGained);
  }
  if (self.hasDiamondsGained) {
    size += computeInt32Size(9, self.diamondsGained);
  }
  if (self.hasExpGained) {
    size += computeInt32Size(10, self.expGained);
  }
  if (self.hasEquipIdGained) {
    size += computeInt32Size(11, self.equipIdGained);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableQuestsRequiredForThisList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableQuestsRequiredForThisList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableTaskReqsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableTaskReqsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUpgradeStructJobsReqsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableUpgradeStructJobsReqsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableBuildStructJobsReqsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableBuildStructJobsReqsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableDefeatTypeReqsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 2 * self.mutableDefeatTypeReqsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutablePossessEquipJobReqsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 2 * self.mutablePossessEquipJobReqsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullQuestProto*) parseFromData:(NSData*) data {
  return (FullQuestProto*)[[[FullQuestProto builder] mergeFromData:data] build];
}
+ (FullQuestProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullQuestProto*)[[[FullQuestProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullQuestProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullQuestProto*)[[[FullQuestProto builder] mergeFromInputStream:input] build];
}
+ (FullQuestProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullQuestProto*)[[[FullQuestProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullQuestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullQuestProto*)[[[FullQuestProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullQuestProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullQuestProto*)[[[FullQuestProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullQuestProto_Builder*) builder {
  return [[[FullQuestProto_Builder alloc] init] autorelease];
}
+ (FullQuestProto_Builder*) builderWithPrototype:(FullQuestProto*) prototype {
  return [[FullQuestProto builder] mergeFrom:prototype];
}
- (FullQuestProto_Builder*) builder {
  return [FullQuestProto builder];
}
@end

@interface FullQuestProto_Builder()
@property (retain) FullQuestProto* result;
@end

@implementation FullQuestProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullQuestProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullQuestProto_Builder*) clear {
  self.result = [[[FullQuestProto alloc] init] autorelease];
  return self;
}
- (FullQuestProto_Builder*) clone {
  return [FullQuestProto builderWithPrototype:result];
}
- (FullQuestProto*) defaultInstance {
  return [FullQuestProto defaultInstance];
}
- (FullQuestProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullQuestProto*) buildPartial {
  FullQuestProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullQuestProto_Builder*) mergeFrom:(FullQuestProto*) other {
  if (other == [FullQuestProto defaultInstance]) {
    return self;
  }
  if (other.hasQuestId) {
    [self setQuestId:other.questId];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  if (other.hasDoneResponse) {
    [self setDoneResponse:other.doneResponse];
  }
  if (other.hasInProgress) {
    [self setInProgress:other.inProgress];
  }
  if (other.hasAssetNumWithinCity) {
    [self setAssetNumWithinCity:other.assetNumWithinCity];
  }
  if (other.hasCoinsGained) {
    [self setCoinsGained:other.coinsGained];
  }
  if (other.hasDiamondsGained) {
    [self setDiamondsGained:other.diamondsGained];
  }
  if (other.hasExpGained) {
    [self setExpGained:other.expGained];
  }
  if (other.hasEquipIdGained) {
    [self setEquipIdGained:other.equipIdGained];
  }
  if (other.mutableQuestsRequiredForThisList.count > 0) {
    if (result.mutableQuestsRequiredForThisList == nil) {
      result.mutableQuestsRequiredForThisList = [NSMutableArray array];
    }
    [result.mutableQuestsRequiredForThisList addObjectsFromArray:other.mutableQuestsRequiredForThisList];
  }
  if (other.mutableTaskReqsList.count > 0) {
    if (result.mutableTaskReqsList == nil) {
      result.mutableTaskReqsList = [NSMutableArray array];
    }
    [result.mutableTaskReqsList addObjectsFromArray:other.mutableTaskReqsList];
  }
  if (other.mutableUpgradeStructJobsReqsList.count > 0) {
    if (result.mutableUpgradeStructJobsReqsList == nil) {
      result.mutableUpgradeStructJobsReqsList = [NSMutableArray array];
    }
    [result.mutableUpgradeStructJobsReqsList addObjectsFromArray:other.mutableUpgradeStructJobsReqsList];
  }
  if (other.mutableBuildStructJobsReqsList.count > 0) {
    if (result.mutableBuildStructJobsReqsList == nil) {
      result.mutableBuildStructJobsReqsList = [NSMutableArray array];
    }
    [result.mutableBuildStructJobsReqsList addObjectsFromArray:other.mutableBuildStructJobsReqsList];
  }
  if (other.mutableDefeatTypeReqsList.count > 0) {
    if (result.mutableDefeatTypeReqsList == nil) {
      result.mutableDefeatTypeReqsList = [NSMutableArray array];
    }
    [result.mutableDefeatTypeReqsList addObjectsFromArray:other.mutableDefeatTypeReqsList];
  }
  if (other.mutablePossessEquipJobReqsList.count > 0) {
    if (result.mutablePossessEquipJobReqsList == nil) {
      result.mutablePossessEquipJobReqsList = [NSMutableArray array];
    }
    [result.mutablePossessEquipJobReqsList addObjectsFromArray:other.mutablePossessEquipJobReqsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullQuestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullQuestProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setQuestId:[input readInt32]];
        break;
      }
      case 16: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setDescription:[input readString]];
        break;
      }
      case 42: {
        [self setDoneResponse:[input readString]];
        break;
      }
      case 50: {
        [self setInProgress:[input readString]];
        break;
      }
      case 56: {
        [self setAssetNumWithinCity:[input readInt32]];
        break;
      }
      case 64: {
        [self setCoinsGained:[input readInt32]];
        break;
      }
      case 72: {
        [self setDiamondsGained:[input readInt32]];
        break;
      }
      case 80: {
        [self setExpGained:[input readInt32]];
        break;
      }
      case 88: {
        [self setEquipIdGained:[input readInt32]];
        break;
      }
      case 96: {
        [self addQuestsRequiredForThis:[input readInt32]];
        break;
      }
      case 104: {
        [self addTaskReqs:[input readInt32]];
        break;
      }
      case 112: {
        [self addUpgradeStructJobsReqs:[input readInt32]];
        break;
      }
      case 120: {
        [self addBuildStructJobsReqs:[input readInt32]];
        break;
      }
      case 128: {
        [self addDefeatTypeReqs:[input readInt32]];
        break;
      }
      case 136: {
        [self addPossessEquipJobReqs:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestId {
  return result.hasQuestId;
}
- (int32_t) questId {
  return result.questId;
}
- (FullQuestProto_Builder*) setQuestId:(int32_t) value {
  result.hasQuestId = YES;
  result.questId = value;
  return self;
}
- (FullQuestProto_Builder*) clearQuestId {
  result.hasQuestId = NO;
  result.questId = 0;
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (FullQuestProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (FullQuestProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullQuestProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullQuestProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (FullQuestProto_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (FullQuestProto_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
- (BOOL) hasDoneResponse {
  return result.hasDoneResponse;
}
- (NSString*) doneResponse {
  return result.doneResponse;
}
- (FullQuestProto_Builder*) setDoneResponse:(NSString*) value {
  result.hasDoneResponse = YES;
  result.doneResponse = value;
  return self;
}
- (FullQuestProto_Builder*) clearDoneResponse {
  result.hasDoneResponse = NO;
  result.doneResponse = @"";
  return self;
}
- (BOOL) hasInProgress {
  return result.hasInProgress;
}
- (NSString*) inProgress {
  return result.inProgress;
}
- (FullQuestProto_Builder*) setInProgress:(NSString*) value {
  result.hasInProgress = YES;
  result.inProgress = value;
  return self;
}
- (FullQuestProto_Builder*) clearInProgress {
  result.hasInProgress = NO;
  result.inProgress = @"";
  return self;
}
- (BOOL) hasAssetNumWithinCity {
  return result.hasAssetNumWithinCity;
}
- (int32_t) assetNumWithinCity {
  return result.assetNumWithinCity;
}
- (FullQuestProto_Builder*) setAssetNumWithinCity:(int32_t) value {
  result.hasAssetNumWithinCity = YES;
  result.assetNumWithinCity = value;
  return self;
}
- (FullQuestProto_Builder*) clearAssetNumWithinCity {
  result.hasAssetNumWithinCity = NO;
  result.assetNumWithinCity = 0;
  return self;
}
- (BOOL) hasCoinsGained {
  return result.hasCoinsGained;
}
- (int32_t) coinsGained {
  return result.coinsGained;
}
- (FullQuestProto_Builder*) setCoinsGained:(int32_t) value {
  result.hasCoinsGained = YES;
  result.coinsGained = value;
  return self;
}
- (FullQuestProto_Builder*) clearCoinsGained {
  result.hasCoinsGained = NO;
  result.coinsGained = 0;
  return self;
}
- (BOOL) hasDiamondsGained {
  return result.hasDiamondsGained;
}
- (int32_t) diamondsGained {
  return result.diamondsGained;
}
- (FullQuestProto_Builder*) setDiamondsGained:(int32_t) value {
  result.hasDiamondsGained = YES;
  result.diamondsGained = value;
  return self;
}
- (FullQuestProto_Builder*) clearDiamondsGained {
  result.hasDiamondsGained = NO;
  result.diamondsGained = 0;
  return self;
}
- (BOOL) hasExpGained {
  return result.hasExpGained;
}
- (int32_t) expGained {
  return result.expGained;
}
- (FullQuestProto_Builder*) setExpGained:(int32_t) value {
  result.hasExpGained = YES;
  result.expGained = value;
  return self;
}
- (FullQuestProto_Builder*) clearExpGained {
  result.hasExpGained = NO;
  result.expGained = 0;
  return self;
}
- (BOOL) hasEquipIdGained {
  return result.hasEquipIdGained;
}
- (int32_t) equipIdGained {
  return result.equipIdGained;
}
- (FullQuestProto_Builder*) setEquipIdGained:(int32_t) value {
  result.hasEquipIdGained = YES;
  result.equipIdGained = value;
  return self;
}
- (FullQuestProto_Builder*) clearEquipIdGained {
  result.hasEquipIdGained = NO;
  result.equipIdGained = 0;
  return self;
}
- (NSArray*) questsRequiredForThisList {
  if (result.mutableQuestsRequiredForThisList == nil) {
    return [NSArray array];
  }
  return result.mutableQuestsRequiredForThisList;
}
- (int32_t) questsRequiredForThisAtIndex:(int32_t) index {
  return [result questsRequiredForThisAtIndex:index];
}
- (FullQuestProto_Builder*) replaceQuestsRequiredForThisAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableQuestsRequiredForThisList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addQuestsRequiredForThis:(int32_t) value {
  if (result.mutableQuestsRequiredForThisList == nil) {
    result.mutableQuestsRequiredForThisList = [NSMutableArray array];
  }
  [result.mutableQuestsRequiredForThisList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addAllQuestsRequiredForThis:(NSArray*) values {
  if (result.mutableQuestsRequiredForThisList == nil) {
    result.mutableQuestsRequiredForThisList = [NSMutableArray array];
  }
  [result.mutableQuestsRequiredForThisList addObjectsFromArray:values];
  return self;
}
- (FullQuestProto_Builder*) clearQuestsRequiredForThisList {
  result.mutableQuestsRequiredForThisList = nil;
  return self;
}
- (NSArray*) taskReqsList {
  if (result.mutableTaskReqsList == nil) {
    return [NSArray array];
  }
  return result.mutableTaskReqsList;
}
- (int32_t) taskReqsAtIndex:(int32_t) index {
  return [result taskReqsAtIndex:index];
}
- (FullQuestProto_Builder*) replaceTaskReqsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableTaskReqsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addTaskReqs:(int32_t) value {
  if (result.mutableTaskReqsList == nil) {
    result.mutableTaskReqsList = [NSMutableArray array];
  }
  [result.mutableTaskReqsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addAllTaskReqs:(NSArray*) values {
  if (result.mutableTaskReqsList == nil) {
    result.mutableTaskReqsList = [NSMutableArray array];
  }
  [result.mutableTaskReqsList addObjectsFromArray:values];
  return self;
}
- (FullQuestProto_Builder*) clearTaskReqsList {
  result.mutableTaskReqsList = nil;
  return self;
}
- (NSArray*) upgradeStructJobsReqsList {
  if (result.mutableUpgradeStructJobsReqsList == nil) {
    return [NSArray array];
  }
  return result.mutableUpgradeStructJobsReqsList;
}
- (int32_t) upgradeStructJobsReqsAtIndex:(int32_t) index {
  return [result upgradeStructJobsReqsAtIndex:index];
}
- (FullQuestProto_Builder*) replaceUpgradeStructJobsReqsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableUpgradeStructJobsReqsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addUpgradeStructJobsReqs:(int32_t) value {
  if (result.mutableUpgradeStructJobsReqsList == nil) {
    result.mutableUpgradeStructJobsReqsList = [NSMutableArray array];
  }
  [result.mutableUpgradeStructJobsReqsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addAllUpgradeStructJobsReqs:(NSArray*) values {
  if (result.mutableUpgradeStructJobsReqsList == nil) {
    result.mutableUpgradeStructJobsReqsList = [NSMutableArray array];
  }
  [result.mutableUpgradeStructJobsReqsList addObjectsFromArray:values];
  return self;
}
- (FullQuestProto_Builder*) clearUpgradeStructJobsReqsList {
  result.mutableUpgradeStructJobsReqsList = nil;
  return self;
}
- (NSArray*) buildStructJobsReqsList {
  if (result.mutableBuildStructJobsReqsList == nil) {
    return [NSArray array];
  }
  return result.mutableBuildStructJobsReqsList;
}
- (int32_t) buildStructJobsReqsAtIndex:(int32_t) index {
  return [result buildStructJobsReqsAtIndex:index];
}
- (FullQuestProto_Builder*) replaceBuildStructJobsReqsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableBuildStructJobsReqsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addBuildStructJobsReqs:(int32_t) value {
  if (result.mutableBuildStructJobsReqsList == nil) {
    result.mutableBuildStructJobsReqsList = [NSMutableArray array];
  }
  [result.mutableBuildStructJobsReqsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addAllBuildStructJobsReqs:(NSArray*) values {
  if (result.mutableBuildStructJobsReqsList == nil) {
    result.mutableBuildStructJobsReqsList = [NSMutableArray array];
  }
  [result.mutableBuildStructJobsReqsList addObjectsFromArray:values];
  return self;
}
- (FullQuestProto_Builder*) clearBuildStructJobsReqsList {
  result.mutableBuildStructJobsReqsList = nil;
  return self;
}
- (NSArray*) defeatTypeReqsList {
  if (result.mutableDefeatTypeReqsList == nil) {
    return [NSArray array];
  }
  return result.mutableDefeatTypeReqsList;
}
- (int32_t) defeatTypeReqsAtIndex:(int32_t) index {
  return [result defeatTypeReqsAtIndex:index];
}
- (FullQuestProto_Builder*) replaceDefeatTypeReqsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableDefeatTypeReqsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addDefeatTypeReqs:(int32_t) value {
  if (result.mutableDefeatTypeReqsList == nil) {
    result.mutableDefeatTypeReqsList = [NSMutableArray array];
  }
  [result.mutableDefeatTypeReqsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addAllDefeatTypeReqs:(NSArray*) values {
  if (result.mutableDefeatTypeReqsList == nil) {
    result.mutableDefeatTypeReqsList = [NSMutableArray array];
  }
  [result.mutableDefeatTypeReqsList addObjectsFromArray:values];
  return self;
}
- (FullQuestProto_Builder*) clearDefeatTypeReqsList {
  result.mutableDefeatTypeReqsList = nil;
  return self;
}
- (NSArray*) possessEquipJobReqsList {
  if (result.mutablePossessEquipJobReqsList == nil) {
    return [NSArray array];
  }
  return result.mutablePossessEquipJobReqsList;
}
- (int32_t) possessEquipJobReqsAtIndex:(int32_t) index {
  return [result possessEquipJobReqsAtIndex:index];
}
- (FullQuestProto_Builder*) replacePossessEquipJobReqsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutablePossessEquipJobReqsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addPossessEquipJobReqs:(int32_t) value {
  if (result.mutablePossessEquipJobReqsList == nil) {
    result.mutablePossessEquipJobReqsList = [NSMutableArray array];
  }
  [result.mutablePossessEquipJobReqsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullQuestProto_Builder*) addAllPossessEquipJobReqs:(NSArray*) values {
  if (result.mutablePossessEquipJobReqsList == nil) {
    result.mutablePossessEquipJobReqsList = [NSMutableArray array];
  }
  [result.mutablePossessEquipJobReqsList addObjectsFromArray:values];
  return self;
}
- (FullQuestProto_Builder*) clearPossessEquipJobReqsList {
  result.mutablePossessEquipJobReqsList = nil;
  return self;
}
@end

