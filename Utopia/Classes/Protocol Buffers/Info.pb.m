// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Info.pb.h"

@implementation InfoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [InfoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL UserTypeIsValidValue(UserType value) {
  switch (value) {
    case UserTypeGoodWarrior:
    case UserTypeGoodArcher:
    case UserTypeGoodMage:
    case UserTypeBadWarrior:
    case UserTypeBadArcher:
    case UserTypeBadMage:
      return YES;
    default:
      return NO;
  }
}
BOOL MarketplacePostTypeIsValidValue(MarketplacePostType value) {
  switch (value) {
    case MarketplacePostTypeEquipPost:
    case MarketplacePostTypeWoodPost:
    case MarketplacePostTypeDiamondPost:
    case MarketplacePostTypeCoinPost:
      return YES;
    default:
      return NO;
  }
}
@interface MinimumUserProto ()
@property int32_t userId;
@property (retain) NSString* name;
@property UserType userType;
@end

@implementation MinimumUserProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value {
  hasUserType_ = !!value;
}
@synthesize userType;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.name = @"";
    self.userType = UserTypeGoodWarrior;
  }
  return self;
}
static MinimumUserProto* defaultMinimumUserProtoInstance = nil;
+ (void) initialize {
  if (self == [MinimumUserProto class]) {
    defaultMinimumUserProtoInstance = [[MinimumUserProto alloc] init];
  }
}
+ (MinimumUserProto*) defaultInstance {
  return defaultMinimumUserProtoInstance;
}
- (MinimumUserProto*) defaultInstance {
  return defaultMinimumUserProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasUserType) {
    [output writeEnum:3 value:self.userType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasUserType) {
    size += computeEnumSize(3, self.userType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (MinimumUserProto*) parseFromData:(NSData*) data {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromData:data] build];
}
+ (MinimumUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromInputStream:input] build];
}
+ (MinimumUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (MinimumUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MinimumUserProto*)[[[MinimumUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MinimumUserProto_Builder*) builder {
  return [[[MinimumUserProto_Builder alloc] init] autorelease];
}
+ (MinimumUserProto_Builder*) builderWithPrototype:(MinimumUserProto*) prototype {
  return [[MinimumUserProto builder] mergeFrom:prototype];
}
- (MinimumUserProto_Builder*) builder {
  return [MinimumUserProto builder];
}
@end

@interface MinimumUserProto_Builder()
@property (retain) MinimumUserProto* result;
@end

@implementation MinimumUserProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[MinimumUserProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (MinimumUserProto_Builder*) clear {
  self.result = [[[MinimumUserProto alloc] init] autorelease];
  return self;
}
- (MinimumUserProto_Builder*) clone {
  return [MinimumUserProto builderWithPrototype:result];
}
- (MinimumUserProto*) defaultInstance {
  return [MinimumUserProto defaultInstance];
}
- (MinimumUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MinimumUserProto*) buildPartial {
  MinimumUserProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (MinimumUserProto_Builder*) mergeFrom:(MinimumUserProto*) other {
  if (other == [MinimumUserProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MinimumUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MinimumUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (UserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (MinimumUserProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (MinimumUserProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (MinimumUserProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (MinimumUserProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (UserType) userType {
  return result.userType;
}
- (MinimumUserProto_Builder*) setUserType:(UserType) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (MinimumUserProto_Builder*) clearUserType {
  result.hasUserType = NO;
  result.userType = UserTypeGoodWarrior;
  return self;
}
@end

@interface FullUserProto ()
@property int32_t userId;
@property (retain) NSString* name;
@property int32_t level;
@property UserType userType;
@property int32_t attack;
@property int32_t defense;
@property int32_t stamina;
@property int32_t energy;
@property int32_t health;
@property int32_t skillPoints;
@property int32_t healthMax;
@property int32_t energyMax;
@property int32_t staminaMax;
@property int32_t diamonds;
@property int32_t coins;
@property int32_t wood;
@property int32_t vaultBalance;
@property int32_t experience;
@property int32_t tasksCompleted;
@property int32_t battlesWon;
@property int32_t battlesLost;
@property int32_t hourlyCoins;
@property (retain) NSString* armyCode;
@property int32_t numReferrals;
@property (retain) NSString* udid;
@property (retain) LocationProto* userLocation;
@end

@implementation FullUserProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) value {
  hasUserType_ = !!value;
}
@synthesize userType;
- (BOOL) hasAttack {
  return !!hasAttack_;
}
- (void) setHasAttack:(BOOL) value {
  hasAttack_ = !!value;
}
@synthesize attack;
- (BOOL) hasDefense {
  return !!hasDefense_;
}
- (void) setHasDefense:(BOOL) value {
  hasDefense_ = !!value;
}
@synthesize defense;
- (BOOL) hasStamina {
  return !!hasStamina_;
}
- (void) setHasStamina:(BOOL) value {
  hasStamina_ = !!value;
}
@synthesize stamina;
- (BOOL) hasEnergy {
  return !!hasEnergy_;
}
- (void) setHasEnergy:(BOOL) value {
  hasEnergy_ = !!value;
}
@synthesize energy;
- (BOOL) hasHealth {
  return !!hasHealth_;
}
- (void) setHasHealth:(BOOL) value {
  hasHealth_ = !!value;
}
@synthesize health;
- (BOOL) hasSkillPoints {
  return !!hasSkillPoints_;
}
- (void) setHasSkillPoints:(BOOL) value {
  hasSkillPoints_ = !!value;
}
@synthesize skillPoints;
- (BOOL) hasHealthMax {
  return !!hasHealthMax_;
}
- (void) setHasHealthMax:(BOOL) value {
  hasHealthMax_ = !!value;
}
@synthesize healthMax;
- (BOOL) hasEnergyMax {
  return !!hasEnergyMax_;
}
- (void) setHasEnergyMax:(BOOL) value {
  hasEnergyMax_ = !!value;
}
@synthesize energyMax;
- (BOOL) hasStaminaMax {
  return !!hasStaminaMax_;
}
- (void) setHasStaminaMax:(BOOL) value {
  hasStaminaMax_ = !!value;
}
@synthesize staminaMax;
- (BOOL) hasDiamonds {
  return !!hasDiamonds_;
}
- (void) setHasDiamonds:(BOOL) value {
  hasDiamonds_ = !!value;
}
@synthesize diamonds;
- (BOOL) hasCoins {
  return !!hasCoins_;
}
- (void) setHasCoins:(BOOL) value {
  hasCoins_ = !!value;
}
@synthesize coins;
- (BOOL) hasWood {
  return !!hasWood_;
}
- (void) setHasWood:(BOOL) value {
  hasWood_ = !!value;
}
@synthesize wood;
- (BOOL) hasVaultBalance {
  return !!hasVaultBalance_;
}
- (void) setHasVaultBalance:(BOOL) value {
  hasVaultBalance_ = !!value;
}
@synthesize vaultBalance;
- (BOOL) hasExperience {
  return !!hasExperience_;
}
- (void) setHasExperience:(BOOL) value {
  hasExperience_ = !!value;
}
@synthesize experience;
- (BOOL) hasTasksCompleted {
  return !!hasTasksCompleted_;
}
- (void) setHasTasksCompleted:(BOOL) value {
  hasTasksCompleted_ = !!value;
}
@synthesize tasksCompleted;
- (BOOL) hasBattlesWon {
  return !!hasBattlesWon_;
}
- (void) setHasBattlesWon:(BOOL) value {
  hasBattlesWon_ = !!value;
}
@synthesize battlesWon;
- (BOOL) hasBattlesLost {
  return !!hasBattlesLost_;
}
- (void) setHasBattlesLost:(BOOL) value {
  hasBattlesLost_ = !!value;
}
@synthesize battlesLost;
- (BOOL) hasHourlyCoins {
  return !!hasHourlyCoins_;
}
- (void) setHasHourlyCoins:(BOOL) value {
  hasHourlyCoins_ = !!value;
}
@synthesize hourlyCoins;
- (BOOL) hasArmyCode {
  return !!hasArmyCode_;
}
- (void) setHasArmyCode:(BOOL) value {
  hasArmyCode_ = !!value;
}
@synthesize armyCode;
- (BOOL) hasNumReferrals {
  return !!hasNumReferrals_;
}
- (void) setHasNumReferrals:(BOOL) value {
  hasNumReferrals_ = !!value;
}
@synthesize numReferrals;
- (BOOL) hasUdid {
  return !!hasUdid_;
}
- (void) setHasUdid:(BOOL) value {
  hasUdid_ = !!value;
}
@synthesize udid;
- (BOOL) hasUserLocation {
  return !!hasUserLocation_;
}
- (void) setHasUserLocation:(BOOL) value {
  hasUserLocation_ = !!value;
}
@synthesize userLocation;
- (void) dealloc {
  self.name = nil;
  self.armyCode = nil;
  self.udid = nil;
  self.userLocation = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.name = @"";
    self.level = 0;
    self.userType = UserTypeGoodWarrior;
    self.attack = 0;
    self.defense = 0;
    self.stamina = 0;
    self.energy = 0;
    self.health = 0;
    self.skillPoints = 0;
    self.healthMax = 0;
    self.energyMax = 0;
    self.staminaMax = 0;
    self.diamonds = 0;
    self.coins = 0;
    self.wood = 0;
    self.vaultBalance = 0;
    self.experience = 0;
    self.tasksCompleted = 0;
    self.battlesWon = 0;
    self.battlesLost = 0;
    self.hourlyCoins = 0;
    self.armyCode = @"";
    self.numReferrals = 0;
    self.udid = @"";
    self.userLocation = [LocationProto defaultInstance];
  }
  return self;
}
static FullUserProto* defaultFullUserProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserProto class]) {
    defaultFullUserProtoInstance = [[FullUserProto alloc] init];
  }
}
+ (FullUserProto*) defaultInstance {
  return defaultFullUserProtoInstance;
}
- (FullUserProto*) defaultInstance {
  return defaultFullUserProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasLevel) {
    return NO;
  }
  if (!self.hasUserType) {
    return NO;
  }
  if (!self.hasAttack) {
    return NO;
  }
  if (!self.hasDefense) {
    return NO;
  }
  if (!self.hasStamina) {
    return NO;
  }
  if (!self.hasEnergy) {
    return NO;
  }
  if (!self.hasHealth) {
    return NO;
  }
  if (!self.hasSkillPoints) {
    return NO;
  }
  if (!self.hasHealthMax) {
    return NO;
  }
  if (!self.hasEnergyMax) {
    return NO;
  }
  if (!self.hasStaminaMax) {
    return NO;
  }
  if (!self.hasDiamonds) {
    return NO;
  }
  if (!self.hasCoins) {
    return NO;
  }
  if (!self.hasWood) {
    return NO;
  }
  if (!self.hasVaultBalance) {
    return NO;
  }
  if (!self.hasExperience) {
    return NO;
  }
  if (!self.hasTasksCompleted) {
    return NO;
  }
  if (!self.hasBattlesWon) {
    return NO;
  }
  if (!self.hasBattlesLost) {
    return NO;
  }
  if (!self.hasHourlyCoins) {
    return NO;
  }
  if (!self.hasArmyCode) {
    return NO;
  }
  if (!self.hasNumReferrals) {
    return NO;
  }
  if (!self.hasUdid) {
    return NO;
  }
  if (!self.hasUserLocation) {
    return NO;
  }
  if (!self.userLocation.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasLevel) {
    [output writeInt32:3 value:self.level];
  }
  if (self.hasUserType) {
    [output writeEnum:4 value:self.userType];
  }
  if (self.hasAttack) {
    [output writeInt32:5 value:self.attack];
  }
  if (self.hasDefense) {
    [output writeInt32:6 value:self.defense];
  }
  if (self.hasStamina) {
    [output writeInt32:7 value:self.stamina];
  }
  if (self.hasEnergy) {
    [output writeInt32:8 value:self.energy];
  }
  if (self.hasHealth) {
    [output writeInt32:9 value:self.health];
  }
  if (self.hasSkillPoints) {
    [output writeInt32:10 value:self.skillPoints];
  }
  if (self.hasHealthMax) {
    [output writeInt32:11 value:self.healthMax];
  }
  if (self.hasEnergyMax) {
    [output writeInt32:12 value:self.energyMax];
  }
  if (self.hasStaminaMax) {
    [output writeInt32:13 value:self.staminaMax];
  }
  if (self.hasDiamonds) {
    [output writeInt32:14 value:self.diamonds];
  }
  if (self.hasCoins) {
    [output writeInt32:15 value:self.coins];
  }
  if (self.hasWood) {
    [output writeInt32:16 value:self.wood];
  }
  if (self.hasVaultBalance) {
    [output writeInt32:17 value:self.vaultBalance];
  }
  if (self.hasExperience) {
    [output writeInt32:18 value:self.experience];
  }
  if (self.hasTasksCompleted) {
    [output writeInt32:19 value:self.tasksCompleted];
  }
  if (self.hasBattlesWon) {
    [output writeInt32:20 value:self.battlesWon];
  }
  if (self.hasBattlesLost) {
    [output writeInt32:21 value:self.battlesLost];
  }
  if (self.hasHourlyCoins) {
    [output writeInt32:22 value:self.hourlyCoins];
  }
  if (self.hasArmyCode) {
    [output writeString:23 value:self.armyCode];
  }
  if (self.hasNumReferrals) {
    [output writeInt32:24 value:self.numReferrals];
  }
  if (self.hasUdid) {
    [output writeString:25 value:self.udid];
  }
  if (self.hasUserLocation) {
    [output writeMessage:26 value:self.userLocation];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasLevel) {
    size += computeInt32Size(3, self.level);
  }
  if (self.hasUserType) {
    size += computeEnumSize(4, self.userType);
  }
  if (self.hasAttack) {
    size += computeInt32Size(5, self.attack);
  }
  if (self.hasDefense) {
    size += computeInt32Size(6, self.defense);
  }
  if (self.hasStamina) {
    size += computeInt32Size(7, self.stamina);
  }
  if (self.hasEnergy) {
    size += computeInt32Size(8, self.energy);
  }
  if (self.hasHealth) {
    size += computeInt32Size(9, self.health);
  }
  if (self.hasSkillPoints) {
    size += computeInt32Size(10, self.skillPoints);
  }
  if (self.hasHealthMax) {
    size += computeInt32Size(11, self.healthMax);
  }
  if (self.hasEnergyMax) {
    size += computeInt32Size(12, self.energyMax);
  }
  if (self.hasStaminaMax) {
    size += computeInt32Size(13, self.staminaMax);
  }
  if (self.hasDiamonds) {
    size += computeInt32Size(14, self.diamonds);
  }
  if (self.hasCoins) {
    size += computeInt32Size(15, self.coins);
  }
  if (self.hasWood) {
    size += computeInt32Size(16, self.wood);
  }
  if (self.hasVaultBalance) {
    size += computeInt32Size(17, self.vaultBalance);
  }
  if (self.hasExperience) {
    size += computeInt32Size(18, self.experience);
  }
  if (self.hasTasksCompleted) {
    size += computeInt32Size(19, self.tasksCompleted);
  }
  if (self.hasBattlesWon) {
    size += computeInt32Size(20, self.battlesWon);
  }
  if (self.hasBattlesLost) {
    size += computeInt32Size(21, self.battlesLost);
  }
  if (self.hasHourlyCoins) {
    size += computeInt32Size(22, self.hourlyCoins);
  }
  if (self.hasArmyCode) {
    size += computeStringSize(23, self.armyCode);
  }
  if (self.hasNumReferrals) {
    size += computeInt32Size(24, self.numReferrals);
  }
  if (self.hasUdid) {
    size += computeStringSize(25, self.udid);
  }
  if (self.hasUserLocation) {
    size += computeMessageSize(26, self.userLocation);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserProto*) parseFromData:(NSData*) data {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromData:data] build];
}
+ (FullUserProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromInputStream:input] build];
}
+ (FullUserProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserProto*)[[[FullUserProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserProto_Builder*) builder {
  return [[[FullUserProto_Builder alloc] init] autorelease];
}
+ (FullUserProto_Builder*) builderWithPrototype:(FullUserProto*) prototype {
  return [[FullUserProto builder] mergeFrom:prototype];
}
- (FullUserProto_Builder*) builder {
  return [FullUserProto builder];
}
@end

@interface FullUserProto_Builder()
@property (retain) FullUserProto* result;
@end

@implementation FullUserProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserProto_Builder*) clear {
  self.result = [[[FullUserProto alloc] init] autorelease];
  return self;
}
- (FullUserProto_Builder*) clone {
  return [FullUserProto builderWithPrototype:result];
}
- (FullUserProto*) defaultInstance {
  return [FullUserProto defaultInstance];
}
- (FullUserProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserProto*) buildPartial {
  FullUserProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserProto_Builder*) mergeFrom:(FullUserProto*) other {
  if (other == [FullUserProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasAttack) {
    [self setAttack:other.attack];
  }
  if (other.hasDefense) {
    [self setDefense:other.defense];
  }
  if (other.hasStamina) {
    [self setStamina:other.stamina];
  }
  if (other.hasEnergy) {
    [self setEnergy:other.energy];
  }
  if (other.hasHealth) {
    [self setHealth:other.health];
  }
  if (other.hasSkillPoints) {
    [self setSkillPoints:other.skillPoints];
  }
  if (other.hasHealthMax) {
    [self setHealthMax:other.healthMax];
  }
  if (other.hasEnergyMax) {
    [self setEnergyMax:other.energyMax];
  }
  if (other.hasStaminaMax) {
    [self setStaminaMax:other.staminaMax];
  }
  if (other.hasDiamonds) {
    [self setDiamonds:other.diamonds];
  }
  if (other.hasCoins) {
    [self setCoins:other.coins];
  }
  if (other.hasWood) {
    [self setWood:other.wood];
  }
  if (other.hasVaultBalance) {
    [self setVaultBalance:other.vaultBalance];
  }
  if (other.hasExperience) {
    [self setExperience:other.experience];
  }
  if (other.hasTasksCompleted) {
    [self setTasksCompleted:other.tasksCompleted];
  }
  if (other.hasBattlesWon) {
    [self setBattlesWon:other.battlesWon];
  }
  if (other.hasBattlesLost) {
    [self setBattlesLost:other.battlesLost];
  }
  if (other.hasHourlyCoins) {
    [self setHourlyCoins:other.hourlyCoins];
  }
  if (other.hasArmyCode) {
    [self setArmyCode:other.armyCode];
  }
  if (other.hasNumReferrals) {
    [self setNumReferrals:other.numReferrals];
  }
  if (other.hasUdid) {
    [self setUdid:other.udid];
  }
  if (other.hasUserLocation) {
    [self mergeUserLocation:other.userLocation];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setLevel:[input readInt32]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (UserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setAttack:[input readInt32]];
        break;
      }
      case 48: {
        [self setDefense:[input readInt32]];
        break;
      }
      case 56: {
        [self setStamina:[input readInt32]];
        break;
      }
      case 64: {
        [self setEnergy:[input readInt32]];
        break;
      }
      case 72: {
        [self setHealth:[input readInt32]];
        break;
      }
      case 80: {
        [self setSkillPoints:[input readInt32]];
        break;
      }
      case 88: {
        [self setHealthMax:[input readInt32]];
        break;
      }
      case 96: {
        [self setEnergyMax:[input readInt32]];
        break;
      }
      case 104: {
        [self setStaminaMax:[input readInt32]];
        break;
      }
      case 112: {
        [self setDiamonds:[input readInt32]];
        break;
      }
      case 120: {
        [self setCoins:[input readInt32]];
        break;
      }
      case 128: {
        [self setWood:[input readInt32]];
        break;
      }
      case 136: {
        [self setVaultBalance:[input readInt32]];
        break;
      }
      case 144: {
        [self setExperience:[input readInt32]];
        break;
      }
      case 152: {
        [self setTasksCompleted:[input readInt32]];
        break;
      }
      case 160: {
        [self setBattlesWon:[input readInt32]];
        break;
      }
      case 168: {
        [self setBattlesLost:[input readInt32]];
        break;
      }
      case 176: {
        [self setHourlyCoins:[input readInt32]];
        break;
      }
      case 186: {
        [self setArmyCode:[input readString]];
        break;
      }
      case 192: {
        [self setNumReferrals:[input readInt32]];
        break;
      }
      case 202: {
        [self setUdid:[input readString]];
        break;
      }
      case 210: {
        LocationProto_Builder* subBuilder = [LocationProto builder];
        if (self.hasUserLocation) {
          [subBuilder mergeFrom:self.userLocation];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUserLocation:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullUserProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullUserProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (FullUserProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (FullUserProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
- (BOOL) hasUserType {
  return result.hasUserType;
}
- (UserType) userType {
  return result.userType;
}
- (FullUserProto_Builder*) setUserType:(UserType) value {
  result.hasUserType = YES;
  result.userType = value;
  return self;
}
- (FullUserProto_Builder*) clearUserType {
  result.hasUserType = NO;
  result.userType = UserTypeGoodWarrior;
  return self;
}
- (BOOL) hasAttack {
  return result.hasAttack;
}
- (int32_t) attack {
  return result.attack;
}
- (FullUserProto_Builder*) setAttack:(int32_t) value {
  result.hasAttack = YES;
  result.attack = value;
  return self;
}
- (FullUserProto_Builder*) clearAttack {
  result.hasAttack = NO;
  result.attack = 0;
  return self;
}
- (BOOL) hasDefense {
  return result.hasDefense;
}
- (int32_t) defense {
  return result.defense;
}
- (FullUserProto_Builder*) setDefense:(int32_t) value {
  result.hasDefense = YES;
  result.defense = value;
  return self;
}
- (FullUserProto_Builder*) clearDefense {
  result.hasDefense = NO;
  result.defense = 0;
  return self;
}
- (BOOL) hasStamina {
  return result.hasStamina;
}
- (int32_t) stamina {
  return result.stamina;
}
- (FullUserProto_Builder*) setStamina:(int32_t) value {
  result.hasStamina = YES;
  result.stamina = value;
  return self;
}
- (FullUserProto_Builder*) clearStamina {
  result.hasStamina = NO;
  result.stamina = 0;
  return self;
}
- (BOOL) hasEnergy {
  return result.hasEnergy;
}
- (int32_t) energy {
  return result.energy;
}
- (FullUserProto_Builder*) setEnergy:(int32_t) value {
  result.hasEnergy = YES;
  result.energy = value;
  return self;
}
- (FullUserProto_Builder*) clearEnergy {
  result.hasEnergy = NO;
  result.energy = 0;
  return self;
}
- (BOOL) hasHealth {
  return result.hasHealth;
}
- (int32_t) health {
  return result.health;
}
- (FullUserProto_Builder*) setHealth:(int32_t) value {
  result.hasHealth = YES;
  result.health = value;
  return self;
}
- (FullUserProto_Builder*) clearHealth {
  result.hasHealth = NO;
  result.health = 0;
  return self;
}
- (BOOL) hasSkillPoints {
  return result.hasSkillPoints;
}
- (int32_t) skillPoints {
  return result.skillPoints;
}
- (FullUserProto_Builder*) setSkillPoints:(int32_t) value {
  result.hasSkillPoints = YES;
  result.skillPoints = value;
  return self;
}
- (FullUserProto_Builder*) clearSkillPoints {
  result.hasSkillPoints = NO;
  result.skillPoints = 0;
  return self;
}
- (BOOL) hasHealthMax {
  return result.hasHealthMax;
}
- (int32_t) healthMax {
  return result.healthMax;
}
- (FullUserProto_Builder*) setHealthMax:(int32_t) value {
  result.hasHealthMax = YES;
  result.healthMax = value;
  return self;
}
- (FullUserProto_Builder*) clearHealthMax {
  result.hasHealthMax = NO;
  result.healthMax = 0;
  return self;
}
- (BOOL) hasEnergyMax {
  return result.hasEnergyMax;
}
- (int32_t) energyMax {
  return result.energyMax;
}
- (FullUserProto_Builder*) setEnergyMax:(int32_t) value {
  result.hasEnergyMax = YES;
  result.energyMax = value;
  return self;
}
- (FullUserProto_Builder*) clearEnergyMax {
  result.hasEnergyMax = NO;
  result.energyMax = 0;
  return self;
}
- (BOOL) hasStaminaMax {
  return result.hasStaminaMax;
}
- (int32_t) staminaMax {
  return result.staminaMax;
}
- (FullUserProto_Builder*) setStaminaMax:(int32_t) value {
  result.hasStaminaMax = YES;
  result.staminaMax = value;
  return self;
}
- (FullUserProto_Builder*) clearStaminaMax {
  result.hasStaminaMax = NO;
  result.staminaMax = 0;
  return self;
}
- (BOOL) hasDiamonds {
  return result.hasDiamonds;
}
- (int32_t) diamonds {
  return result.diamonds;
}
- (FullUserProto_Builder*) setDiamonds:(int32_t) value {
  result.hasDiamonds = YES;
  result.diamonds = value;
  return self;
}
- (FullUserProto_Builder*) clearDiamonds {
  result.hasDiamonds = NO;
  result.diamonds = 0;
  return self;
}
- (BOOL) hasCoins {
  return result.hasCoins;
}
- (int32_t) coins {
  return result.coins;
}
- (FullUserProto_Builder*) setCoins:(int32_t) value {
  result.hasCoins = YES;
  result.coins = value;
  return self;
}
- (FullUserProto_Builder*) clearCoins {
  result.hasCoins = NO;
  result.coins = 0;
  return self;
}
- (BOOL) hasWood {
  return result.hasWood;
}
- (int32_t) wood {
  return result.wood;
}
- (FullUserProto_Builder*) setWood:(int32_t) value {
  result.hasWood = YES;
  result.wood = value;
  return self;
}
- (FullUserProto_Builder*) clearWood {
  result.hasWood = NO;
  result.wood = 0;
  return self;
}
- (BOOL) hasVaultBalance {
  return result.hasVaultBalance;
}
- (int32_t) vaultBalance {
  return result.vaultBalance;
}
- (FullUserProto_Builder*) setVaultBalance:(int32_t) value {
  result.hasVaultBalance = YES;
  result.vaultBalance = value;
  return self;
}
- (FullUserProto_Builder*) clearVaultBalance {
  result.hasVaultBalance = NO;
  result.vaultBalance = 0;
  return self;
}
- (BOOL) hasExperience {
  return result.hasExperience;
}
- (int32_t) experience {
  return result.experience;
}
- (FullUserProto_Builder*) setExperience:(int32_t) value {
  result.hasExperience = YES;
  result.experience = value;
  return self;
}
- (FullUserProto_Builder*) clearExperience {
  result.hasExperience = NO;
  result.experience = 0;
  return self;
}
- (BOOL) hasTasksCompleted {
  return result.hasTasksCompleted;
}
- (int32_t) tasksCompleted {
  return result.tasksCompleted;
}
- (FullUserProto_Builder*) setTasksCompleted:(int32_t) value {
  result.hasTasksCompleted = YES;
  result.tasksCompleted = value;
  return self;
}
- (FullUserProto_Builder*) clearTasksCompleted {
  result.hasTasksCompleted = NO;
  result.tasksCompleted = 0;
  return self;
}
- (BOOL) hasBattlesWon {
  return result.hasBattlesWon;
}
- (int32_t) battlesWon {
  return result.battlesWon;
}
- (FullUserProto_Builder*) setBattlesWon:(int32_t) value {
  result.hasBattlesWon = YES;
  result.battlesWon = value;
  return self;
}
- (FullUserProto_Builder*) clearBattlesWon {
  result.hasBattlesWon = NO;
  result.battlesWon = 0;
  return self;
}
- (BOOL) hasBattlesLost {
  return result.hasBattlesLost;
}
- (int32_t) battlesLost {
  return result.battlesLost;
}
- (FullUserProto_Builder*) setBattlesLost:(int32_t) value {
  result.hasBattlesLost = YES;
  result.battlesLost = value;
  return self;
}
- (FullUserProto_Builder*) clearBattlesLost {
  result.hasBattlesLost = NO;
  result.battlesLost = 0;
  return self;
}
- (BOOL) hasHourlyCoins {
  return result.hasHourlyCoins;
}
- (int32_t) hourlyCoins {
  return result.hourlyCoins;
}
- (FullUserProto_Builder*) setHourlyCoins:(int32_t) value {
  result.hasHourlyCoins = YES;
  result.hourlyCoins = value;
  return self;
}
- (FullUserProto_Builder*) clearHourlyCoins {
  result.hasHourlyCoins = NO;
  result.hourlyCoins = 0;
  return self;
}
- (BOOL) hasArmyCode {
  return result.hasArmyCode;
}
- (NSString*) armyCode {
  return result.armyCode;
}
- (FullUserProto_Builder*) setArmyCode:(NSString*) value {
  result.hasArmyCode = YES;
  result.armyCode = value;
  return self;
}
- (FullUserProto_Builder*) clearArmyCode {
  result.hasArmyCode = NO;
  result.armyCode = @"";
  return self;
}
- (BOOL) hasNumReferrals {
  return result.hasNumReferrals;
}
- (int32_t) numReferrals {
  return result.numReferrals;
}
- (FullUserProto_Builder*) setNumReferrals:(int32_t) value {
  result.hasNumReferrals = YES;
  result.numReferrals = value;
  return self;
}
- (FullUserProto_Builder*) clearNumReferrals {
  result.hasNumReferrals = NO;
  result.numReferrals = 0;
  return self;
}
- (BOOL) hasUdid {
  return result.hasUdid;
}
- (NSString*) udid {
  return result.udid;
}
- (FullUserProto_Builder*) setUdid:(NSString*) value {
  result.hasUdid = YES;
  result.udid = value;
  return self;
}
- (FullUserProto_Builder*) clearUdid {
  result.hasUdid = NO;
  result.udid = @"";
  return self;
}
- (BOOL) hasUserLocation {
  return result.hasUserLocation;
}
- (LocationProto*) userLocation {
  return result.userLocation;
}
- (FullUserProto_Builder*) setUserLocation:(LocationProto*) value {
  result.hasUserLocation = YES;
  result.userLocation = value;
  return self;
}
- (FullUserProto_Builder*) setUserLocationBuilder:(LocationProto_Builder*) builderForValue {
  return [self setUserLocation:[builderForValue build]];
}
- (FullUserProto_Builder*) mergeUserLocation:(LocationProto*) value {
  if (result.hasUserLocation &&
      result.userLocation != [LocationProto defaultInstance]) {
    result.userLocation =
      [[[LocationProto builderWithPrototype:result.userLocation] mergeFrom:value] buildPartial];
  } else {
    result.userLocation = value;
  }
  result.hasUserLocation = YES;
  return self;
}
- (FullUserProto_Builder*) clearUserLocation {
  result.hasUserLocation = NO;
  result.userLocation = [LocationProto defaultInstance];
  return self;
}
@end

@interface FullEquipProto ()
@property int32_t equipId;
@property (retain) NSString* name;
@property FullEquipProto_EquipType equipType;
@property FullEquipProto_ClassType classType;
@property int32_t attackBoost;
@property int32_t defenseBoost;
@property int32_t minLevel;
@property int32_t coinPrice;
@property int32_t diamondPrice;
@property Float32 chanceOfLoss;
@property FullEquipProto_Rarity rarity;
@end

@implementation FullEquipProto

- (BOOL) hasEquipId {
  return !!hasEquipId_;
}
- (void) setHasEquipId:(BOOL) value {
  hasEquipId_ = !!value;
}
@synthesize equipId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasEquipType {
  return !!hasEquipType_;
}
- (void) setHasEquipType:(BOOL) value {
  hasEquipType_ = !!value;
}
@synthesize equipType;
- (BOOL) hasClassType {
  return !!hasClassType_;
}
- (void) setHasClassType:(BOOL) value {
  hasClassType_ = !!value;
}
@synthesize classType;
- (BOOL) hasAttackBoost {
  return !!hasAttackBoost_;
}
- (void) setHasAttackBoost:(BOOL) value {
  hasAttackBoost_ = !!value;
}
@synthesize attackBoost;
- (BOOL) hasDefenseBoost {
  return !!hasDefenseBoost_;
}
- (void) setHasDefenseBoost:(BOOL) value {
  hasDefenseBoost_ = !!value;
}
@synthesize defenseBoost;
- (BOOL) hasMinLevel {
  return !!hasMinLevel_;
}
- (void) setHasMinLevel:(BOOL) value {
  hasMinLevel_ = !!value;
}
@synthesize minLevel;
- (BOOL) hasCoinPrice {
  return !!hasCoinPrice_;
}
- (void) setHasCoinPrice:(BOOL) value {
  hasCoinPrice_ = !!value;
}
@synthesize coinPrice;
- (BOOL) hasDiamondPrice {
  return !!hasDiamondPrice_;
}
- (void) setHasDiamondPrice:(BOOL) value {
  hasDiamondPrice_ = !!value;
}
@synthesize diamondPrice;
- (BOOL) hasChanceOfLoss {
  return !!hasChanceOfLoss_;
}
- (void) setHasChanceOfLoss:(BOOL) value {
  hasChanceOfLoss_ = !!value;
}
@synthesize chanceOfLoss;
- (BOOL) hasRarity {
  return !!hasRarity_;
}
- (void) setHasRarity:(BOOL) value {
  hasRarity_ = !!value;
}
@synthesize rarity;
- (void) dealloc {
  self.name = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.equipId = 0;
    self.name = @"";
    self.equipType = FullEquipProto_EquipTypeWeapon;
    self.classType = FullEquipProto_ClassTypeWarrior;
    self.attackBoost = 0;
    self.defenseBoost = 0;
    self.minLevel = 0;
    self.coinPrice = 0;
    self.diamondPrice = 0;
    self.chanceOfLoss = 0;
    self.rarity = FullEquipProto_RarityCommon;
  }
  return self;
}
static FullEquipProto* defaultFullEquipProtoInstance = nil;
+ (void) initialize {
  if (self == [FullEquipProto class]) {
    defaultFullEquipProtoInstance = [[FullEquipProto alloc] init];
  }
}
+ (FullEquipProto*) defaultInstance {
  return defaultFullEquipProtoInstance;
}
- (FullEquipProto*) defaultInstance {
  return defaultFullEquipProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasEquipId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasEquipType) {
    return NO;
  }
  if (!self.hasClassType) {
    return NO;
  }
  if (!self.hasAttackBoost) {
    return NO;
  }
  if (!self.hasDefenseBoost) {
    return NO;
  }
  if (!self.hasMinLevel) {
    return NO;
  }
  if (!self.hasChanceOfLoss) {
    return NO;
  }
  if (!self.hasRarity) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEquipId) {
    [output writeInt32:1 value:self.equipId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasEquipType) {
    [output writeEnum:3 value:self.equipType];
  }
  if (self.hasClassType) {
    [output writeEnum:4 value:self.classType];
  }
  if (self.hasAttackBoost) {
    [output writeInt32:5 value:self.attackBoost];
  }
  if (self.hasDefenseBoost) {
    [output writeInt32:6 value:self.defenseBoost];
  }
  if (self.hasMinLevel) {
    [output writeInt32:7 value:self.minLevel];
  }
  if (self.hasCoinPrice) {
    [output writeInt32:8 value:self.coinPrice];
  }
  if (self.hasDiamondPrice) {
    [output writeInt32:9 value:self.diamondPrice];
  }
  if (self.hasChanceOfLoss) {
    [output writeFloat:10 value:self.chanceOfLoss];
  }
  if (self.hasRarity) {
    [output writeEnum:11 value:self.rarity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasEquipId) {
    size += computeInt32Size(1, self.equipId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasEquipType) {
    size += computeEnumSize(3, self.equipType);
  }
  if (self.hasClassType) {
    size += computeEnumSize(4, self.classType);
  }
  if (self.hasAttackBoost) {
    size += computeInt32Size(5, self.attackBoost);
  }
  if (self.hasDefenseBoost) {
    size += computeInt32Size(6, self.defenseBoost);
  }
  if (self.hasMinLevel) {
    size += computeInt32Size(7, self.minLevel);
  }
  if (self.hasCoinPrice) {
    size += computeInt32Size(8, self.coinPrice);
  }
  if (self.hasDiamondPrice) {
    size += computeInt32Size(9, self.diamondPrice);
  }
  if (self.hasChanceOfLoss) {
    size += computeFloatSize(10, self.chanceOfLoss);
  }
  if (self.hasRarity) {
    size += computeEnumSize(11, self.rarity);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullEquipProto*) parseFromData:(NSData*) data {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromData:data] build];
}
+ (FullEquipProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullEquipProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromInputStream:input] build];
}
+ (FullEquipProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullEquipProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullEquipProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullEquipProto*)[[[FullEquipProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullEquipProto_Builder*) builder {
  return [[[FullEquipProto_Builder alloc] init] autorelease];
}
+ (FullEquipProto_Builder*) builderWithPrototype:(FullEquipProto*) prototype {
  return [[FullEquipProto builder] mergeFrom:prototype];
}
- (FullEquipProto_Builder*) builder {
  return [FullEquipProto builder];
}
@end

BOOL FullEquipProto_RarityIsValidValue(FullEquipProto_Rarity value) {
  switch (value) {
    case FullEquipProto_RarityCommon:
    case FullEquipProto_RarityUncommon:
    case FullEquipProto_RarityRare:
    case FullEquipProto_RarityEpic:
    case FullEquipProto_RarityLegendary:
      return YES;
    default:
      return NO;
  }
}
BOOL FullEquipProto_EquipTypeIsValidValue(FullEquipProto_EquipType value) {
  switch (value) {
    case FullEquipProto_EquipTypeWeapon:
    case FullEquipProto_EquipTypeArmor:
    case FullEquipProto_EquipTypeAccessory:
      return YES;
    default:
      return NO;
  }
}
BOOL FullEquipProto_ClassTypeIsValidValue(FullEquipProto_ClassType value) {
  switch (value) {
    case FullEquipProto_ClassTypeWarrior:
    case FullEquipProto_ClassTypeArcher:
    case FullEquipProto_ClassTypeMage:
      return YES;
    default:
      return NO;
  }
}
@interface FullEquipProto_Builder()
@property (retain) FullEquipProto* result;
@end

@implementation FullEquipProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullEquipProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullEquipProto_Builder*) clear {
  self.result = [[[FullEquipProto alloc] init] autorelease];
  return self;
}
- (FullEquipProto_Builder*) clone {
  return [FullEquipProto builderWithPrototype:result];
}
- (FullEquipProto*) defaultInstance {
  return [FullEquipProto defaultInstance];
}
- (FullEquipProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullEquipProto*) buildPartial {
  FullEquipProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullEquipProto_Builder*) mergeFrom:(FullEquipProto*) other {
  if (other == [FullEquipProto defaultInstance]) {
    return self;
  }
  if (other.hasEquipId) {
    [self setEquipId:other.equipId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasEquipType) {
    [self setEquipType:other.equipType];
  }
  if (other.hasClassType) {
    [self setClassType:other.classType];
  }
  if (other.hasAttackBoost) {
    [self setAttackBoost:other.attackBoost];
  }
  if (other.hasDefenseBoost) {
    [self setDefenseBoost:other.defenseBoost];
  }
  if (other.hasMinLevel) {
    [self setMinLevel:other.minLevel];
  }
  if (other.hasCoinPrice) {
    [self setCoinPrice:other.coinPrice];
  }
  if (other.hasDiamondPrice) {
    [self setDiamondPrice:other.diamondPrice];
  }
  if (other.hasChanceOfLoss) {
    [self setChanceOfLoss:other.chanceOfLoss];
  }
  if (other.hasRarity) {
    [self setRarity:other.rarity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullEquipProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullEquipProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setEquipId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (FullEquipProto_EquipTypeIsValidValue(value)) {
          [self setEquipType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (FullEquipProto_ClassTypeIsValidValue(value)) {
          [self setClassType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setAttackBoost:[input readInt32]];
        break;
      }
      case 48: {
        [self setDefenseBoost:[input readInt32]];
        break;
      }
      case 56: {
        [self setMinLevel:[input readInt32]];
        break;
      }
      case 64: {
        [self setCoinPrice:[input readInt32]];
        break;
      }
      case 72: {
        [self setDiamondPrice:[input readInt32]];
        break;
      }
      case 85: {
        [self setChanceOfLoss:[input readFloat]];
        break;
      }
      case 88: {
        int32_t value = [input readEnum];
        if (FullEquipProto_RarityIsValidValue(value)) {
          [self setRarity:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasEquipId {
  return result.hasEquipId;
}
- (int32_t) equipId {
  return result.equipId;
}
- (FullEquipProto_Builder*) setEquipId:(int32_t) value {
  result.hasEquipId = YES;
  result.equipId = value;
  return self;
}
- (FullEquipProto_Builder*) clearEquipId {
  result.hasEquipId = NO;
  result.equipId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullEquipProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullEquipProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasEquipType {
  return result.hasEquipType;
}
- (FullEquipProto_EquipType) equipType {
  return result.equipType;
}
- (FullEquipProto_Builder*) setEquipType:(FullEquipProto_EquipType) value {
  result.hasEquipType = YES;
  result.equipType = value;
  return self;
}
- (FullEquipProto_Builder*) clearEquipType {
  result.hasEquipType = NO;
  result.equipType = FullEquipProto_EquipTypeWeapon;
  return self;
}
- (BOOL) hasClassType {
  return result.hasClassType;
}
- (FullEquipProto_ClassType) classType {
  return result.classType;
}
- (FullEquipProto_Builder*) setClassType:(FullEquipProto_ClassType) value {
  result.hasClassType = YES;
  result.classType = value;
  return self;
}
- (FullEquipProto_Builder*) clearClassType {
  result.hasClassType = NO;
  result.classType = FullEquipProto_ClassTypeWarrior;
  return self;
}
- (BOOL) hasAttackBoost {
  return result.hasAttackBoost;
}
- (int32_t) attackBoost {
  return result.attackBoost;
}
- (FullEquipProto_Builder*) setAttackBoost:(int32_t) value {
  result.hasAttackBoost = YES;
  result.attackBoost = value;
  return self;
}
- (FullEquipProto_Builder*) clearAttackBoost {
  result.hasAttackBoost = NO;
  result.attackBoost = 0;
  return self;
}
- (BOOL) hasDefenseBoost {
  return result.hasDefenseBoost;
}
- (int32_t) defenseBoost {
  return result.defenseBoost;
}
- (FullEquipProto_Builder*) setDefenseBoost:(int32_t) value {
  result.hasDefenseBoost = YES;
  result.defenseBoost = value;
  return self;
}
- (FullEquipProto_Builder*) clearDefenseBoost {
  result.hasDefenseBoost = NO;
  result.defenseBoost = 0;
  return self;
}
- (BOOL) hasMinLevel {
  return result.hasMinLevel;
}
- (int32_t) minLevel {
  return result.minLevel;
}
- (FullEquipProto_Builder*) setMinLevel:(int32_t) value {
  result.hasMinLevel = YES;
  result.minLevel = value;
  return self;
}
- (FullEquipProto_Builder*) clearMinLevel {
  result.hasMinLevel = NO;
  result.minLevel = 0;
  return self;
}
- (BOOL) hasCoinPrice {
  return result.hasCoinPrice;
}
- (int32_t) coinPrice {
  return result.coinPrice;
}
- (FullEquipProto_Builder*) setCoinPrice:(int32_t) value {
  result.hasCoinPrice = YES;
  result.coinPrice = value;
  return self;
}
- (FullEquipProto_Builder*) clearCoinPrice {
  result.hasCoinPrice = NO;
  result.coinPrice = 0;
  return self;
}
- (BOOL) hasDiamondPrice {
  return result.hasDiamondPrice;
}
- (int32_t) diamondPrice {
  return result.diamondPrice;
}
- (FullEquipProto_Builder*) setDiamondPrice:(int32_t) value {
  result.hasDiamondPrice = YES;
  result.diamondPrice = value;
  return self;
}
- (FullEquipProto_Builder*) clearDiamondPrice {
  result.hasDiamondPrice = NO;
  result.diamondPrice = 0;
  return self;
}
- (BOOL) hasChanceOfLoss {
  return result.hasChanceOfLoss;
}
- (Float32) chanceOfLoss {
  return result.chanceOfLoss;
}
- (FullEquipProto_Builder*) setChanceOfLoss:(Float32) value {
  result.hasChanceOfLoss = YES;
  result.chanceOfLoss = value;
  return self;
}
- (FullEquipProto_Builder*) clearChanceOfLoss {
  result.hasChanceOfLoss = NO;
  result.chanceOfLoss = 0;
  return self;
}
- (BOOL) hasRarity {
  return result.hasRarity;
}
- (FullEquipProto_Rarity) rarity {
  return result.rarity;
}
- (FullEquipProto_Builder*) setRarity:(FullEquipProto_Rarity) value {
  result.hasRarity = YES;
  result.rarity = value;
  return self;
}
- (FullEquipProto_Builder*) clearRarity {
  result.hasRarity = NO;
  result.rarity = FullEquipProto_RarityCommon;
  return self;
}
@end

@interface FullUserStructureProto ()
@property int32_t userId;
@property int32_t structId;
@property (retain) CoordinateProto* coordinates;
@property (retain) NSString* lastRetrieved;
@property int32_t level;
@end

@implementation FullUserStructureProto

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) value {
  hasUserId_ = !!value;
}
@synthesize userId;
- (BOOL) hasStructId {
  return !!hasStructId_;
}
- (void) setHasStructId:(BOOL) value {
  hasStructId_ = !!value;
}
@synthesize structId;
- (BOOL) hasCoordinates {
  return !!hasCoordinates_;
}
- (void) setHasCoordinates:(BOOL) value {
  hasCoordinates_ = !!value;
}
@synthesize coordinates;
- (BOOL) hasLastRetrieved {
  return !!hasLastRetrieved_;
}
- (void) setHasLastRetrieved:(BOOL) value {
  hasLastRetrieved_ = !!value;
}
@synthesize lastRetrieved;
- (BOOL) hasLevel {
  return !!hasLevel_;
}
- (void) setHasLevel:(BOOL) value {
  hasLevel_ = !!value;
}
@synthesize level;
- (void) dealloc {
  self.coordinates = nil;
  self.lastRetrieved = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.structId = 0;
    self.coordinates = [CoordinateProto defaultInstance];
    self.lastRetrieved = @"";
    self.level = 0;
  }
  return self;
}
static FullUserStructureProto* defaultFullUserStructureProtoInstance = nil;
+ (void) initialize {
  if (self == [FullUserStructureProto class]) {
    defaultFullUserStructureProtoInstance = [[FullUserStructureProto alloc] init];
  }
}
+ (FullUserStructureProto*) defaultInstance {
  return defaultFullUserStructureProtoInstance;
}
- (FullUserStructureProto*) defaultInstance {
  return defaultFullUserStructureProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasStructId) {
    return NO;
  }
  if (!self.hasCoordinates) {
    return NO;
  }
  if (!self.hasLastRetrieved) {
    return NO;
  }
  if (!self.hasLevel) {
    return NO;
  }
  if (!self.coordinates.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt32:1 value:self.userId];
  }
  if (self.hasStructId) {
    [output writeInt32:2 value:self.structId];
  }
  if (self.hasCoordinates) {
    [output writeMessage:3 value:self.coordinates];
  }
  if (self.hasLastRetrieved) {
    [output writeString:4 value:self.lastRetrieved];
  }
  if (self.hasLevel) {
    [output writeInt32:5 value:self.level];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUserId) {
    size += computeInt32Size(1, self.userId);
  }
  if (self.hasStructId) {
    size += computeInt32Size(2, self.structId);
  }
  if (self.hasCoordinates) {
    size += computeMessageSize(3, self.coordinates);
  }
  if (self.hasLastRetrieved) {
    size += computeStringSize(4, self.lastRetrieved);
  }
  if (self.hasLevel) {
    size += computeInt32Size(5, self.level);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullUserStructureProto*) parseFromData:(NSData*) data {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromData:data] build];
}
+ (FullUserStructureProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromInputStream:input] build];
}
+ (FullUserStructureProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullUserStructureProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullUserStructureProto*)[[[FullUserStructureProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullUserStructureProto_Builder*) builder {
  return [[[FullUserStructureProto_Builder alloc] init] autorelease];
}
+ (FullUserStructureProto_Builder*) builderWithPrototype:(FullUserStructureProto*) prototype {
  return [[FullUserStructureProto builder] mergeFrom:prototype];
}
- (FullUserStructureProto_Builder*) builder {
  return [FullUserStructureProto builder];
}
@end

@interface FullUserStructureProto_Builder()
@property (retain) FullUserStructureProto* result;
@end

@implementation FullUserStructureProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullUserStructureProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullUserStructureProto_Builder*) clear {
  self.result = [[[FullUserStructureProto alloc] init] autorelease];
  return self;
}
- (FullUserStructureProto_Builder*) clone {
  return [FullUserStructureProto builderWithPrototype:result];
}
- (FullUserStructureProto*) defaultInstance {
  return [FullUserStructureProto defaultInstance];
}
- (FullUserStructureProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullUserStructureProto*) buildPartial {
  FullUserStructureProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullUserStructureProto_Builder*) mergeFrom:(FullUserStructureProto*) other {
  if (other == [FullUserStructureProto defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasStructId) {
    [self setStructId:other.structId];
  }
  if (other.hasCoordinates) {
    [self mergeCoordinates:other.coordinates];
  }
  if (other.hasLastRetrieved) {
    [self setLastRetrieved:other.lastRetrieved];
  }
  if (other.hasLevel) {
    [self setLevel:other.level];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullUserStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullUserStructureProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setStructId:[input readInt32]];
        break;
      }
      case 26: {
        CoordinateProto_Builder* subBuilder = [CoordinateProto builder];
        if (self.hasCoordinates) {
          [subBuilder mergeFrom:self.coordinates];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCoordinates:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        [self setLastRetrieved:[input readString]];
        break;
      }
      case 40: {
        [self setLevel:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return result.hasUserId;
}
- (int32_t) userId {
  return result.userId;
}
- (FullUserStructureProto_Builder*) setUserId:(int32_t) value {
  result.hasUserId = YES;
  result.userId = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearUserId {
  result.hasUserId = NO;
  result.userId = 0;
  return self;
}
- (BOOL) hasStructId {
  return result.hasStructId;
}
- (int32_t) structId {
  return result.structId;
}
- (FullUserStructureProto_Builder*) setStructId:(int32_t) value {
  result.hasStructId = YES;
  result.structId = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearStructId {
  result.hasStructId = NO;
  result.structId = 0;
  return self;
}
- (BOOL) hasCoordinates {
  return result.hasCoordinates;
}
- (CoordinateProto*) coordinates {
  return result.coordinates;
}
- (FullUserStructureProto_Builder*) setCoordinates:(CoordinateProto*) value {
  result.hasCoordinates = YES;
  result.coordinates = value;
  return self;
}
- (FullUserStructureProto_Builder*) setCoordinatesBuilder:(CoordinateProto_Builder*) builderForValue {
  return [self setCoordinates:[builderForValue build]];
}
- (FullUserStructureProto_Builder*) mergeCoordinates:(CoordinateProto*) value {
  if (result.hasCoordinates &&
      result.coordinates != [CoordinateProto defaultInstance]) {
    result.coordinates =
      [[[CoordinateProto builderWithPrototype:result.coordinates] mergeFrom:value] buildPartial];
  } else {
    result.coordinates = value;
  }
  result.hasCoordinates = YES;
  return self;
}
- (FullUserStructureProto_Builder*) clearCoordinates {
  result.hasCoordinates = NO;
  result.coordinates = [CoordinateProto defaultInstance];
  return self;
}
- (BOOL) hasLastRetrieved {
  return result.hasLastRetrieved;
}
- (NSString*) lastRetrieved {
  return result.lastRetrieved;
}
- (FullUserStructureProto_Builder*) setLastRetrieved:(NSString*) value {
  result.hasLastRetrieved = YES;
  result.lastRetrieved = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearLastRetrieved {
  result.hasLastRetrieved = NO;
  result.lastRetrieved = @"";
  return self;
}
- (BOOL) hasLevel {
  return result.hasLevel;
}
- (int32_t) level {
  return result.level;
}
- (FullUserStructureProto_Builder*) setLevel:(int32_t) value {
  result.hasLevel = YES;
  result.level = value;
  return self;
}
- (FullUserStructureProto_Builder*) clearLevel {
  result.hasLevel = NO;
  result.level = 0;
  return self;
}
@end

@interface FullTaskProto ()
@property int32_t id;
@property (retain) NSString* name;
@property int32_t cityId;
@property int32_t numRequiredForCompletion;
@property int32_t energyCost;
@property int32_t minCoinsGained;
@property int32_t maxCoinsGained;
@property Float32 chanceOfEquipLoot;
@property (retain) NSMutableArray* mutablePotentialLootEquipIdsList;
@property int32_t expGained;
@property int32_t assetNumWithinCity;
@end

@implementation FullTaskProto

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCityId {
  return !!hasCityId_;
}
- (void) setHasCityId:(BOOL) value {
  hasCityId_ = !!value;
}
@synthesize cityId;
- (BOOL) hasNumRequiredForCompletion {
  return !!hasNumRequiredForCompletion_;
}
- (void) setHasNumRequiredForCompletion:(BOOL) value {
  hasNumRequiredForCompletion_ = !!value;
}
@synthesize numRequiredForCompletion;
- (BOOL) hasEnergyCost {
  return !!hasEnergyCost_;
}
- (void) setHasEnergyCost:(BOOL) value {
  hasEnergyCost_ = !!value;
}
@synthesize energyCost;
- (BOOL) hasMinCoinsGained {
  return !!hasMinCoinsGained_;
}
- (void) setHasMinCoinsGained:(BOOL) value {
  hasMinCoinsGained_ = !!value;
}
@synthesize minCoinsGained;
- (BOOL) hasMaxCoinsGained {
  return !!hasMaxCoinsGained_;
}
- (void) setHasMaxCoinsGained:(BOOL) value {
  hasMaxCoinsGained_ = !!value;
}
@synthesize maxCoinsGained;
- (BOOL) hasChanceOfEquipLoot {
  return !!hasChanceOfEquipLoot_;
}
- (void) setHasChanceOfEquipLoot:(BOOL) value {
  hasChanceOfEquipLoot_ = !!value;
}
@synthesize chanceOfEquipLoot;
@synthesize mutablePotentialLootEquipIdsList;
- (BOOL) hasExpGained {
  return !!hasExpGained_;
}
- (void) setHasExpGained:(BOOL) value {
  hasExpGained_ = !!value;
}
@synthesize expGained;
- (BOOL) hasAssetNumWithinCity {
  return !!hasAssetNumWithinCity_;
}
- (void) setHasAssetNumWithinCity:(BOOL) value {
  hasAssetNumWithinCity_ = !!value;
}
@synthesize assetNumWithinCity;
- (void) dealloc {
  self.name = nil;
  self.mutablePotentialLootEquipIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.name = @"";
    self.cityId = 0;
    self.numRequiredForCompletion = 0;
    self.energyCost = 0;
    self.minCoinsGained = 0;
    self.maxCoinsGained = 0;
    self.chanceOfEquipLoot = 0;
    self.expGained = 0;
    self.assetNumWithinCity = 0;
  }
  return self;
}
static FullTaskProto* defaultFullTaskProtoInstance = nil;
+ (void) initialize {
  if (self == [FullTaskProto class]) {
    defaultFullTaskProtoInstance = [[FullTaskProto alloc] init];
  }
}
+ (FullTaskProto*) defaultInstance {
  return defaultFullTaskProtoInstance;
}
- (FullTaskProto*) defaultInstance {
  return defaultFullTaskProtoInstance;
}
- (NSArray*) potentialLootEquipIdsList {
  return mutablePotentialLootEquipIdsList;
}
- (int32_t) potentialLootEquipIdsAtIndex:(int32_t) index {
  id value = [mutablePotentialLootEquipIdsList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasCityId) {
    return NO;
  }
  if (!self.hasNumRequiredForCompletion) {
    return NO;
  }
  if (!self.hasEnergyCost) {
    return NO;
  }
  if (!self.hasMinCoinsGained) {
    return NO;
  }
  if (!self.hasMaxCoinsGained) {
    return NO;
  }
  if (!self.hasChanceOfEquipLoot) {
    return NO;
  }
  if (!self.hasExpGained) {
    return NO;
  }
  if (!self.hasAssetNumWithinCity) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasCityId) {
    [output writeInt32:3 value:self.cityId];
  }
  if (self.hasNumRequiredForCompletion) {
    [output writeInt32:4 value:self.numRequiredForCompletion];
  }
  if (self.hasEnergyCost) {
    [output writeInt32:5 value:self.energyCost];
  }
  if (self.hasMinCoinsGained) {
    [output writeInt32:6 value:self.minCoinsGained];
  }
  if (self.hasMaxCoinsGained) {
    [output writeInt32:7 value:self.maxCoinsGained];
  }
  if (self.hasChanceOfEquipLoot) {
    [output writeFloat:8 value:self.chanceOfEquipLoot];
  }
  for (NSNumber* value in self.mutablePotentialLootEquipIdsList) {
    [output writeInt32:9 value:[value intValue]];
  }
  if (self.hasExpGained) {
    [output writeInt32:10 value:self.expGained];
  }
  if (self.hasAssetNumWithinCity) {
    [output writeInt32:11 value:self.assetNumWithinCity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasCityId) {
    size += computeInt32Size(3, self.cityId);
  }
  if (self.hasNumRequiredForCompletion) {
    size += computeInt32Size(4, self.numRequiredForCompletion);
  }
  if (self.hasEnergyCost) {
    size += computeInt32Size(5, self.energyCost);
  }
  if (self.hasMinCoinsGained) {
    size += computeInt32Size(6, self.minCoinsGained);
  }
  if (self.hasMaxCoinsGained) {
    size += computeInt32Size(7, self.maxCoinsGained);
  }
  if (self.hasChanceOfEquipLoot) {
    size += computeFloatSize(8, self.chanceOfEquipLoot);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutablePotentialLootEquipIdsList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutablePotentialLootEquipIdsList.count;
  }
  if (self.hasExpGained) {
    size += computeInt32Size(10, self.expGained);
  }
  if (self.hasAssetNumWithinCity) {
    size += computeInt32Size(11, self.assetNumWithinCity);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullTaskProto*) parseFromData:(NSData*) data {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromData:data] build];
}
+ (FullTaskProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromInputStream:input] build];
}
+ (FullTaskProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullTaskProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullTaskProto*)[[[FullTaskProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullTaskProto_Builder*) builder {
  return [[[FullTaskProto_Builder alloc] init] autorelease];
}
+ (FullTaskProto_Builder*) builderWithPrototype:(FullTaskProto*) prototype {
  return [[FullTaskProto builder] mergeFrom:prototype];
}
- (FullTaskProto_Builder*) builder {
  return [FullTaskProto builder];
}
@end

@interface FullTaskProto_Builder()
@property (retain) FullTaskProto* result;
@end

@implementation FullTaskProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullTaskProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullTaskProto_Builder*) clear {
  self.result = [[[FullTaskProto alloc] init] autorelease];
  return self;
}
- (FullTaskProto_Builder*) clone {
  return [FullTaskProto builderWithPrototype:result];
}
- (FullTaskProto*) defaultInstance {
  return [FullTaskProto defaultInstance];
}
- (FullTaskProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullTaskProto*) buildPartial {
  FullTaskProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullTaskProto_Builder*) mergeFrom:(FullTaskProto*) other {
  if (other == [FullTaskProto defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCityId) {
    [self setCityId:other.cityId];
  }
  if (other.hasNumRequiredForCompletion) {
    [self setNumRequiredForCompletion:other.numRequiredForCompletion];
  }
  if (other.hasEnergyCost) {
    [self setEnergyCost:other.energyCost];
  }
  if (other.hasMinCoinsGained) {
    [self setMinCoinsGained:other.minCoinsGained];
  }
  if (other.hasMaxCoinsGained) {
    [self setMaxCoinsGained:other.maxCoinsGained];
  }
  if (other.hasChanceOfEquipLoot) {
    [self setChanceOfEquipLoot:other.chanceOfEquipLoot];
  }
  if (other.mutablePotentialLootEquipIdsList.count > 0) {
    if (result.mutablePotentialLootEquipIdsList == nil) {
      result.mutablePotentialLootEquipIdsList = [NSMutableArray array];
    }
    [result.mutablePotentialLootEquipIdsList addObjectsFromArray:other.mutablePotentialLootEquipIdsList];
  }
  if (other.hasExpGained) {
    [self setExpGained:other.expGained];
  }
  if (other.hasAssetNumWithinCity) {
    [self setAssetNumWithinCity:other.assetNumWithinCity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullTaskProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setCityId:[input readInt32]];
        break;
      }
      case 32: {
        [self setNumRequiredForCompletion:[input readInt32]];
        break;
      }
      case 40: {
        [self setEnergyCost:[input readInt32]];
        break;
      }
      case 48: {
        [self setMinCoinsGained:[input readInt32]];
        break;
      }
      case 56: {
        [self setMaxCoinsGained:[input readInt32]];
        break;
      }
      case 69: {
        [self setChanceOfEquipLoot:[input readFloat]];
        break;
      }
      case 72: {
        [self addPotentialLootEquipIds:[input readInt32]];
        break;
      }
      case 80: {
        [self setExpGained:[input readInt32]];
        break;
      }
      case 88: {
        [self setAssetNumWithinCity:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (FullTaskProto_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (FullTaskProto_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (FullTaskProto_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (FullTaskProto_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCityId {
  return result.hasCityId;
}
- (int32_t) cityId {
  return result.cityId;
}
- (FullTaskProto_Builder*) setCityId:(int32_t) value {
  result.hasCityId = YES;
  result.cityId = value;
  return self;
}
- (FullTaskProto_Builder*) clearCityId {
  result.hasCityId = NO;
  result.cityId = 0;
  return self;
}
- (BOOL) hasNumRequiredForCompletion {
  return result.hasNumRequiredForCompletion;
}
- (int32_t) numRequiredForCompletion {
  return result.numRequiredForCompletion;
}
- (FullTaskProto_Builder*) setNumRequiredForCompletion:(int32_t) value {
  result.hasNumRequiredForCompletion = YES;
  result.numRequiredForCompletion = value;
  return self;
}
- (FullTaskProto_Builder*) clearNumRequiredForCompletion {
  result.hasNumRequiredForCompletion = NO;
  result.numRequiredForCompletion = 0;
  return self;
}
- (BOOL) hasEnergyCost {
  return result.hasEnergyCost;
}
- (int32_t) energyCost {
  return result.energyCost;
}
- (FullTaskProto_Builder*) setEnergyCost:(int32_t) value {
  result.hasEnergyCost = YES;
  result.energyCost = value;
  return self;
}
- (FullTaskProto_Builder*) clearEnergyCost {
  result.hasEnergyCost = NO;
  result.energyCost = 0;
  return self;
}
- (BOOL) hasMinCoinsGained {
  return result.hasMinCoinsGained;
}
- (int32_t) minCoinsGained {
  return result.minCoinsGained;
}
- (FullTaskProto_Builder*) setMinCoinsGained:(int32_t) value {
  result.hasMinCoinsGained = YES;
  result.minCoinsGained = value;
  return self;
}
- (FullTaskProto_Builder*) clearMinCoinsGained {
  result.hasMinCoinsGained = NO;
  result.minCoinsGained = 0;
  return self;
}
- (BOOL) hasMaxCoinsGained {
  return result.hasMaxCoinsGained;
}
- (int32_t) maxCoinsGained {
  return result.maxCoinsGained;
}
- (FullTaskProto_Builder*) setMaxCoinsGained:(int32_t) value {
  result.hasMaxCoinsGained = YES;
  result.maxCoinsGained = value;
  return self;
}
- (FullTaskProto_Builder*) clearMaxCoinsGained {
  result.hasMaxCoinsGained = NO;
  result.maxCoinsGained = 0;
  return self;
}
- (BOOL) hasChanceOfEquipLoot {
  return result.hasChanceOfEquipLoot;
}
- (Float32) chanceOfEquipLoot {
  return result.chanceOfEquipLoot;
}
- (FullTaskProto_Builder*) setChanceOfEquipLoot:(Float32) value {
  result.hasChanceOfEquipLoot = YES;
  result.chanceOfEquipLoot = value;
  return self;
}
- (FullTaskProto_Builder*) clearChanceOfEquipLoot {
  result.hasChanceOfEquipLoot = NO;
  result.chanceOfEquipLoot = 0;
  return self;
}
- (NSArray*) potentialLootEquipIdsList {
  if (result.mutablePotentialLootEquipIdsList == nil) {
    return [NSArray array];
  }
  return result.mutablePotentialLootEquipIdsList;
}
- (int32_t) potentialLootEquipIdsAtIndex:(int32_t) index {
  return [result potentialLootEquipIdsAtIndex:index];
}
- (FullTaskProto_Builder*) replacePotentialLootEquipIdsAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutablePotentialLootEquipIdsList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullTaskProto_Builder*) addPotentialLootEquipIds:(int32_t) value {
  if (result.mutablePotentialLootEquipIdsList == nil) {
    result.mutablePotentialLootEquipIdsList = [NSMutableArray array];
  }
  [result.mutablePotentialLootEquipIdsList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (FullTaskProto_Builder*) addAllPotentialLootEquipIds:(NSArray*) values {
  if (result.mutablePotentialLootEquipIdsList == nil) {
    result.mutablePotentialLootEquipIdsList = [NSMutableArray array];
  }
  [result.mutablePotentialLootEquipIdsList addObjectsFromArray:values];
  return self;
}
- (FullTaskProto_Builder*) clearPotentialLootEquipIdsList {
  result.mutablePotentialLootEquipIdsList = nil;
  return self;
}
- (BOOL) hasExpGained {
  return result.hasExpGained;
}
- (int32_t) expGained {
  return result.expGained;
}
- (FullTaskProto_Builder*) setExpGained:(int32_t) value {
  result.hasExpGained = YES;
  result.expGained = value;
  return self;
}
- (FullTaskProto_Builder*) clearExpGained {
  result.hasExpGained = NO;
  result.expGained = 0;
  return self;
}
- (BOOL) hasAssetNumWithinCity {
  return result.hasAssetNumWithinCity;
}
- (int32_t) assetNumWithinCity {
  return result.assetNumWithinCity;
}
- (FullTaskProto_Builder*) setAssetNumWithinCity:(int32_t) value {
  result.hasAssetNumWithinCity = YES;
  result.assetNumWithinCity = value;
  return self;
}
- (FullTaskProto_Builder*) clearAssetNumWithinCity {
  result.hasAssetNumWithinCity = NO;
  result.assetNumWithinCity = 0;
  return self;
}
@end

@interface CoordinateProto ()
@property int32_t x;
@property int32_t y;
@end

@implementation CoordinateProto

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) value {
  hasX_ = !!value;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) value {
  hasY_ = !!value;
}
@synthesize y;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
  }
  return self;
}
static CoordinateProto* defaultCoordinateProtoInstance = nil;
+ (void) initialize {
  if (self == [CoordinateProto class]) {
    defaultCoordinateProtoInstance = [[CoordinateProto alloc] init];
  }
}
+ (CoordinateProto*) defaultInstance {
  return defaultCoordinateProtoInstance;
}
- (CoordinateProto*) defaultInstance {
  return defaultCoordinateProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasX) {
    return NO;
  }
  if (!self.hasY) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeInt32:1 value:self.x];
  }
  if (self.hasY) {
    [output writeInt32:2 value:self.y];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasX) {
    size += computeInt32Size(1, self.x);
  }
  if (self.hasY) {
    size += computeInt32Size(2, self.y);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CoordinateProto*) parseFromData:(NSData*) data {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromData:data] build];
}
+ (CoordinateProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto*) parseFromInputStream:(NSInputStream*) input {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromInputStream:input] build];
}
+ (CoordinateProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromCodedInputStream:input] build];
}
+ (CoordinateProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CoordinateProto*)[[[CoordinateProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CoordinateProto_Builder*) builder {
  return [[[CoordinateProto_Builder alloc] init] autorelease];
}
+ (CoordinateProto_Builder*) builderWithPrototype:(CoordinateProto*) prototype {
  return [[CoordinateProto builder] mergeFrom:prototype];
}
- (CoordinateProto_Builder*) builder {
  return [CoordinateProto builder];
}
@end

@interface CoordinateProto_Builder()
@property (retain) CoordinateProto* result;
@end

@implementation CoordinateProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CoordinateProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CoordinateProto_Builder*) clear {
  self.result = [[[CoordinateProto alloc] init] autorelease];
  return self;
}
- (CoordinateProto_Builder*) clone {
  return [CoordinateProto builderWithPrototype:result];
}
- (CoordinateProto*) defaultInstance {
  return [CoordinateProto defaultInstance];
}
- (CoordinateProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CoordinateProto*) buildPartial {
  CoordinateProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CoordinateProto_Builder*) mergeFrom:(CoordinateProto*) other {
  if (other == [CoordinateProto defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CoordinateProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CoordinateProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setX:[input readInt32]];
        break;
      }
      case 16: {
        [self setY:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return result.hasX;
}
- (int32_t) x {
  return result.x;
}
- (CoordinateProto_Builder*) setX:(int32_t) value {
  result.hasX = YES;
  result.x = value;
  return self;
}
- (CoordinateProto_Builder*) clearX {
  result.hasX = NO;
  result.x = 0;
  return self;
}
- (BOOL) hasY {
  return result.hasY;
}
- (int32_t) y {
  return result.y;
}
- (CoordinateProto_Builder*) setY:(int32_t) value {
  result.hasY = YES;
  result.y = value;
  return self;
}
- (CoordinateProto_Builder*) clearY {
  result.hasY = NO;
  result.y = 0;
  return self;
}
@end

@interface LocationProto ()
@property Float32 latitude;
@property Float32 longitude;
@end

@implementation LocationProto

- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) value {
  hasLatitude_ = !!value;
}
@synthesize latitude;
- (BOOL) hasLongitude {
  return !!hasLongitude_;
}
- (void) setHasLongitude:(BOOL) value {
  hasLongitude_ = !!value;
}
@synthesize longitude;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.latitude = 0;
    self.longitude = 0;
  }
  return self;
}
static LocationProto* defaultLocationProtoInstance = nil;
+ (void) initialize {
  if (self == [LocationProto class]) {
    defaultLocationProtoInstance = [[LocationProto alloc] init];
  }
}
+ (LocationProto*) defaultInstance {
  return defaultLocationProtoInstance;
}
- (LocationProto*) defaultInstance {
  return defaultLocationProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLatitude) {
    return NO;
  }
  if (!self.hasLongitude) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLatitude) {
    [output writeFloat:1 value:self.latitude];
  }
  if (self.hasLongitude) {
    [output writeFloat:2 value:self.longitude];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLatitude) {
    size += computeFloatSize(1, self.latitude);
  }
  if (self.hasLongitude) {
    size += computeFloatSize(2, self.longitude);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LocationProto*) parseFromData:(NSData*) data {
  return (LocationProto*)[[[LocationProto builder] mergeFromData:data] build];
}
+ (LocationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LocationProto*)[[[LocationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LocationProto*) parseFromInputStream:(NSInputStream*) input {
  return (LocationProto*)[[[LocationProto builder] mergeFromInputStream:input] build];
}
+ (LocationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LocationProto*)[[[LocationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LocationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LocationProto*)[[[LocationProto builder] mergeFromCodedInputStream:input] build];
}
+ (LocationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LocationProto*)[[[LocationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LocationProto_Builder*) builder {
  return [[[LocationProto_Builder alloc] init] autorelease];
}
+ (LocationProto_Builder*) builderWithPrototype:(LocationProto*) prototype {
  return [[LocationProto builder] mergeFrom:prototype];
}
- (LocationProto_Builder*) builder {
  return [LocationProto builder];
}
@end

@interface LocationProto_Builder()
@property (retain) LocationProto* result;
@end

@implementation LocationProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[LocationProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LocationProto_Builder*) clear {
  self.result = [[[LocationProto alloc] init] autorelease];
  return self;
}
- (LocationProto_Builder*) clone {
  return [LocationProto builderWithPrototype:result];
}
- (LocationProto*) defaultInstance {
  return [LocationProto defaultInstance];
}
- (LocationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LocationProto*) buildPartial {
  LocationProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (LocationProto_Builder*) mergeFrom:(LocationProto*) other {
  if (other == [LocationProto defaultInstance]) {
    return self;
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongitude) {
    [self setLongitude:other.longitude];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LocationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LocationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setLatitude:[input readFloat]];
        break;
      }
      case 21: {
        [self setLongitude:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasLatitude {
  return result.hasLatitude;
}
- (Float32) latitude {
  return result.latitude;
}
- (LocationProto_Builder*) setLatitude:(Float32) value {
  result.hasLatitude = YES;
  result.latitude = value;
  return self;
}
- (LocationProto_Builder*) clearLatitude {
  result.hasLatitude = NO;
  result.latitude = 0;
  return self;
}
- (BOOL) hasLongitude {
  return result.hasLongitude;
}
- (Float32) longitude {
  return result.longitude;
}
- (LocationProto_Builder*) setLongitude:(Float32) value {
  result.hasLongitude = YES;
  result.longitude = value;
  return self;
}
- (LocationProto_Builder*) clearLongitude {
  result.hasLongitude = NO;
  result.longitude = 0;
  return self;
}
@end

@interface FullMarketplacePostProto ()
@property int32_t id;
@property int32_t posterId;
@property MarketplacePostType postType;
@property int64_t timeOfPost;
@property int32_t postedEquipId;
@property int32_t postedWood;
@property int32_t postedDiamonds;
@property int32_t postedCoins;
@property int32_t diamondCost;
@property int32_t coinCost;
@property int32_t woodCost;
@end

@implementation FullMarketplacePostProto

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasPosterId {
  return !!hasPosterId_;
}
- (void) setHasPosterId:(BOOL) value {
  hasPosterId_ = !!value;
}
@synthesize posterId;
- (BOOL) hasPostType {
  return !!hasPostType_;
}
- (void) setHasPostType:(BOOL) value {
  hasPostType_ = !!value;
}
@synthesize postType;
- (BOOL) hasTimeOfPost {
  return !!hasTimeOfPost_;
}
- (void) setHasTimeOfPost:(BOOL) value {
  hasTimeOfPost_ = !!value;
}
@synthesize timeOfPost;
- (BOOL) hasPostedEquipId {
  return !!hasPostedEquipId_;
}
- (void) setHasPostedEquipId:(BOOL) value {
  hasPostedEquipId_ = !!value;
}
@synthesize postedEquipId;
- (BOOL) hasPostedWood {
  return !!hasPostedWood_;
}
- (void) setHasPostedWood:(BOOL) value {
  hasPostedWood_ = !!value;
}
@synthesize postedWood;
- (BOOL) hasPostedDiamonds {
  return !!hasPostedDiamonds_;
}
- (void) setHasPostedDiamonds:(BOOL) value {
  hasPostedDiamonds_ = !!value;
}
@synthesize postedDiamonds;
- (BOOL) hasPostedCoins {
  return !!hasPostedCoins_;
}
- (void) setHasPostedCoins:(BOOL) value {
  hasPostedCoins_ = !!value;
}
@synthesize postedCoins;
- (BOOL) hasDiamondCost {
  return !!hasDiamondCost_;
}
- (void) setHasDiamondCost:(BOOL) value {
  hasDiamondCost_ = !!value;
}
@synthesize diamondCost;
- (BOOL) hasCoinCost {
  return !!hasCoinCost_;
}
- (void) setHasCoinCost:(BOOL) value {
  hasCoinCost_ = !!value;
}
@synthesize coinCost;
- (BOOL) hasWoodCost {
  return !!hasWoodCost_;
}
- (void) setHasWoodCost:(BOOL) value {
  hasWoodCost_ = !!value;
}
@synthesize woodCost;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.posterId = 0;
    self.postType = MarketplacePostTypeEquipPost;
    self.timeOfPost = 0L;
    self.postedEquipId = 0;
    self.postedWood = 0;
    self.postedDiamonds = 0;
    self.postedCoins = 0;
    self.diamondCost = 0;
    self.coinCost = 0;
    self.woodCost = 0;
  }
  return self;
}
static FullMarketplacePostProto* defaultFullMarketplacePostProtoInstance = nil;
+ (void) initialize {
  if (self == [FullMarketplacePostProto class]) {
    defaultFullMarketplacePostProtoInstance = [[FullMarketplacePostProto alloc] init];
  }
}
+ (FullMarketplacePostProto*) defaultInstance {
  return defaultFullMarketplacePostProtoInstance;
}
- (FullMarketplacePostProto*) defaultInstance {
  return defaultFullMarketplacePostProtoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasPosterId) {
    return NO;
  }
  if (!self.hasPostType) {
    return NO;
  }
  if (!self.hasTimeOfPost) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasPosterId) {
    [output writeInt32:2 value:self.posterId];
  }
  if (self.hasPostType) {
    [output writeEnum:3 value:self.postType];
  }
  if (self.hasTimeOfPost) {
    [output writeInt64:4 value:self.timeOfPost];
  }
  if (self.hasPostedEquipId) {
    [output writeInt32:5 value:self.postedEquipId];
  }
  if (self.hasPostedWood) {
    [output writeInt32:6 value:self.postedWood];
  }
  if (self.hasPostedDiamonds) {
    [output writeInt32:7 value:self.postedDiamonds];
  }
  if (self.hasPostedCoins) {
    [output writeInt32:8 value:self.postedCoins];
  }
  if (self.hasDiamondCost) {
    [output writeInt32:9 value:self.diamondCost];
  }
  if (self.hasCoinCost) {
    [output writeInt32:10 value:self.coinCost];
  }
  if (self.hasWoodCost) {
    [output writeInt32:11 value:self.woodCost];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasPosterId) {
    size += computeInt32Size(2, self.posterId);
  }
  if (self.hasPostType) {
    size += computeEnumSize(3, self.postType);
  }
  if (self.hasTimeOfPost) {
    size += computeInt64Size(4, self.timeOfPost);
  }
  if (self.hasPostedEquipId) {
    size += computeInt32Size(5, self.postedEquipId);
  }
  if (self.hasPostedWood) {
    size += computeInt32Size(6, self.postedWood);
  }
  if (self.hasPostedDiamonds) {
    size += computeInt32Size(7, self.postedDiamonds);
  }
  if (self.hasPostedCoins) {
    size += computeInt32Size(8, self.postedCoins);
  }
  if (self.hasDiamondCost) {
    size += computeInt32Size(9, self.diamondCost);
  }
  if (self.hasCoinCost) {
    size += computeInt32Size(10, self.coinCost);
  }
  if (self.hasWoodCost) {
    size += computeInt32Size(11, self.woodCost);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FullMarketplacePostProto*) parseFromData:(NSData*) data {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromData:data] build];
}
+ (FullMarketplacePostProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FullMarketplacePostProto*) parseFromInputStream:(NSInputStream*) input {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromInputStream:input] build];
}
+ (FullMarketplacePostProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullMarketplacePostProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromCodedInputStream:input] build];
}
+ (FullMarketplacePostProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FullMarketplacePostProto*)[[[FullMarketplacePostProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FullMarketplacePostProto_Builder*) builder {
  return [[[FullMarketplacePostProto_Builder alloc] init] autorelease];
}
+ (FullMarketplacePostProto_Builder*) builderWithPrototype:(FullMarketplacePostProto*) prototype {
  return [[FullMarketplacePostProto builder] mergeFrom:prototype];
}
- (FullMarketplacePostProto_Builder*) builder {
  return [FullMarketplacePostProto builder];
}
@end

@interface FullMarketplacePostProto_Builder()
@property (retain) FullMarketplacePostProto* result;
@end

@implementation FullMarketplacePostProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FullMarketplacePostProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FullMarketplacePostProto_Builder*) clear {
  self.result = [[[FullMarketplacePostProto alloc] init] autorelease];
  return self;
}
- (FullMarketplacePostProto_Builder*) clone {
  return [FullMarketplacePostProto builderWithPrototype:result];
}
- (FullMarketplacePostProto*) defaultInstance {
  return [FullMarketplacePostProto defaultInstance];
}
- (FullMarketplacePostProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FullMarketplacePostProto*) buildPartial {
  FullMarketplacePostProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FullMarketplacePostProto_Builder*) mergeFrom:(FullMarketplacePostProto*) other {
  if (other == [FullMarketplacePostProto defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasPosterId) {
    [self setPosterId:other.posterId];
  }
  if (other.hasPostType) {
    [self setPostType:other.postType];
  }
  if (other.hasTimeOfPost) {
    [self setTimeOfPost:other.timeOfPost];
  }
  if (other.hasPostedEquipId) {
    [self setPostedEquipId:other.postedEquipId];
  }
  if (other.hasPostedWood) {
    [self setPostedWood:other.postedWood];
  }
  if (other.hasPostedDiamonds) {
    [self setPostedDiamonds:other.postedDiamonds];
  }
  if (other.hasPostedCoins) {
    [self setPostedCoins:other.postedCoins];
  }
  if (other.hasDiamondCost) {
    [self setDiamondCost:other.diamondCost];
  }
  if (other.hasCoinCost) {
    [self setCoinCost:other.coinCost];
  }
  if (other.hasWoodCost) {
    [self setWoodCost:other.woodCost];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FullMarketplacePostProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FullMarketplacePostProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 16: {
        [self setPosterId:[input readInt32]];
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (MarketplacePostTypeIsValidValue(value)) {
          [self setPostType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setTimeOfPost:[input readInt64]];
        break;
      }
      case 40: {
        [self setPostedEquipId:[input readInt32]];
        break;
      }
      case 48: {
        [self setPostedWood:[input readInt32]];
        break;
      }
      case 56: {
        [self setPostedDiamonds:[input readInt32]];
        break;
      }
      case 64: {
        [self setPostedCoins:[input readInt32]];
        break;
      }
      case 72: {
        [self setDiamondCost:[input readInt32]];
        break;
      }
      case 80: {
        [self setCoinCost:[input readInt32]];
        break;
      }
      case 88: {
        [self setWoodCost:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (FullMarketplacePostProto_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasPosterId {
  return result.hasPosterId;
}
- (int32_t) posterId {
  return result.posterId;
}
- (FullMarketplacePostProto_Builder*) setPosterId:(int32_t) value {
  result.hasPosterId = YES;
  result.posterId = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPosterId {
  result.hasPosterId = NO;
  result.posterId = 0;
  return self;
}
- (BOOL) hasPostType {
  return result.hasPostType;
}
- (MarketplacePostType) postType {
  return result.postType;
}
- (FullMarketplacePostProto_Builder*) setPostType:(MarketplacePostType) value {
  result.hasPostType = YES;
  result.postType = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPostType {
  result.hasPostType = NO;
  result.postType = MarketplacePostTypeEquipPost;
  return self;
}
- (BOOL) hasTimeOfPost {
  return result.hasTimeOfPost;
}
- (int64_t) timeOfPost {
  return result.timeOfPost;
}
- (FullMarketplacePostProto_Builder*) setTimeOfPost:(int64_t) value {
  result.hasTimeOfPost = YES;
  result.timeOfPost = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearTimeOfPost {
  result.hasTimeOfPost = NO;
  result.timeOfPost = 0L;
  return self;
}
- (BOOL) hasPostedEquipId {
  return result.hasPostedEquipId;
}
- (int32_t) postedEquipId {
  return result.postedEquipId;
}
- (FullMarketplacePostProto_Builder*) setPostedEquipId:(int32_t) value {
  result.hasPostedEquipId = YES;
  result.postedEquipId = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPostedEquipId {
  result.hasPostedEquipId = NO;
  result.postedEquipId = 0;
  return self;
}
- (BOOL) hasPostedWood {
  return result.hasPostedWood;
}
- (int32_t) postedWood {
  return result.postedWood;
}
- (FullMarketplacePostProto_Builder*) setPostedWood:(int32_t) value {
  result.hasPostedWood = YES;
  result.postedWood = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPostedWood {
  result.hasPostedWood = NO;
  result.postedWood = 0;
  return self;
}
- (BOOL) hasPostedDiamonds {
  return result.hasPostedDiamonds;
}
- (int32_t) postedDiamonds {
  return result.postedDiamonds;
}
- (FullMarketplacePostProto_Builder*) setPostedDiamonds:(int32_t) value {
  result.hasPostedDiamonds = YES;
  result.postedDiamonds = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPostedDiamonds {
  result.hasPostedDiamonds = NO;
  result.postedDiamonds = 0;
  return self;
}
- (BOOL) hasPostedCoins {
  return result.hasPostedCoins;
}
- (int32_t) postedCoins {
  return result.postedCoins;
}
- (FullMarketplacePostProto_Builder*) setPostedCoins:(int32_t) value {
  result.hasPostedCoins = YES;
  result.postedCoins = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearPostedCoins {
  result.hasPostedCoins = NO;
  result.postedCoins = 0;
  return self;
}
- (BOOL) hasDiamondCost {
  return result.hasDiamondCost;
}
- (int32_t) diamondCost {
  return result.diamondCost;
}
- (FullMarketplacePostProto_Builder*) setDiamondCost:(int32_t) value {
  result.hasDiamondCost = YES;
  result.diamondCost = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearDiamondCost {
  result.hasDiamondCost = NO;
  result.diamondCost = 0;
  return self;
}
- (BOOL) hasCoinCost {
  return result.hasCoinCost;
}
- (int32_t) coinCost {
  return result.coinCost;
}
- (FullMarketplacePostProto_Builder*) setCoinCost:(int32_t) value {
  result.hasCoinCost = YES;
  result.coinCost = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearCoinCost {
  result.hasCoinCost = NO;
  result.coinCost = 0;
  return self;
}
- (BOOL) hasWoodCost {
  return result.hasWoodCost;
}
- (int32_t) woodCost {
  return result.woodCost;
}
- (FullMarketplacePostProto_Builder*) setWoodCost:(int32_t) value {
  result.hasWoodCost = YES;
  result.woodCost = value;
  return self;
}
- (FullMarketplacePostProto_Builder*) clearWoodCost {
  result.hasWoodCost = NO;
  result.woodCost = 0;
  return self;
}
@end

